{"version":3,"sources":["assets/Script/BackPackUI.js","assets/Script/CanvasJS.js","assets/Script/Circle.js","assets/Script/CloseWin.js","assets/Script/GameAwait.js","assets/Script/GetMsg.js","assets/Script/GetUserData.js","assets/Script/GoHome.js","assets/Script/GoodsList.js","assets/Script/HelloWorld.js","assets/Script/Home.js","assets/Script/Item.js","assets/Script/LeftAction.js","assets/Script/Maps.js","assets/Script/News.js","assets/Script/PayList.js","assets/Script/PigDial.js","assets/Script/PigHome.js","assets/Script/QuestionsStart.js","assets/Script/Questions.js","assets/Script/SetingItemMic.js","assets/Script/SetingItem.js","assets/Script/Setings.js","assets/Script/Shop.js","assets/Script/SignInBox.js","assets/Script/SignInTel.js","assets/Script/SliderCtrl.js","assets/Script/StartLayout.js","assets/Script/UserData.js","assets/Script/WinLoes.js","assets/Script/filters.js","assets/Script/i18n.js","assets/Script/music.js","assets/Script/onfire.js","assets/Script/polyglot.js"],"names":["cc","Class","extends","Component","properties","slotPrefab","default","type","Prefab","scrollView","ScrollView","totalCount","onLoad","init","home","this","heroSlots","i","length","heroSlot","addHeroSlot","push","instantiate","content","addChild","show","node","emit","toggleHomeBtns","hide","start","require","UserInfo","Node","UserInfoImg","Sprite","UserInfoId","Label","UserInfoName","InfoBox","Setings","SetingsBtn","Activitys","ShopsBtn","Gulds","GuldsSetings","Gold","Audios","AudioSource","clikcMis","clickGameMis","TurnTheScreen","screenOrientation","sMsg","Invitations","QcCode","buttomMsg","UserToName","UserToId","User_pic","TotalAmount","DirectlyUnderAmount","LowerMemberAmount","TotalCommission","DirectlyUnderCommission","LowerMemberCommission","sPageView","PageView","sPageView_1","sPageView_2","sPageView_3","nlayer","myScrollView","AgentScrollView","qrCodeUrls","Extext","MyName","EditBox","MyId","MyIcon","QsNumber","ThunderNumber","PigNumber","QsWinNumber","ThWinNumber","ByGolds","BsGolds","ThunderScroll","QuestionScroll","modification","_this2","sss","getComponent","string","data","Userid","Global","DataUsers","UserId","Token","UserName","streamXHREventsToLabel","loader","getXMLHttpRequest","serverUrl","e","JSON","parse","code","GetUserCenter","openUserInfo","num","scale","play","getQueryString","name","reg","RegExp","r","window","location","search","substr","match","decodeURI","_this3","console","log","sys","localStorage","getItem","scheduleOnce","SetInfo","getversion","on","SetingsFn","ActivityWin","AddWindows","setItem","volume","Login","loaderUserIcon","UserIcon","Balance","GetInvitation","GetAgentRule","GetAgentDataStatisticsInfo","GetRecords","GetThunderTrades","getexamgamerecords","addEventListeners","checkOrient","onorientationchange","orientation","GoGameStart","d","director","loadScene","Invitation","n","GetParentAgentWeeklyTransaction","Shops","closeGuldsSetings","Infos","setPosition","GetPrefab","fab","_this4","loadRes","err","newNode","width","height","getScene","CloseViews","destroy","GoToMsg","update","dt","socketMsg","xhr","clientVersion","client","qrCodeUrlFn","nSprite","v2","_this5","AccountType","ApplicationBroker","mo","model","ser","user","tips","qrCodeUrl","_this6","Agent","AgentAll","AgentCount","getChildByName","getComponentsInChildren","ParentAgentCount","WeekParentAgentCount","MonthParentAgentCount","Counts","UserCount","WeekCount","MonthCount","_this7","removeAllChildren","PageIndex","PageSize","Type","Transaction","_loop","iterator","loadPre","Avatar","Amount","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","List","Symbol","next","done","value","return","_this8","Data","_this9","_loop2","nodeList","com","Money","StateCode","Subtime","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","object","_this10","ExamNumber","LittlePigPekyNumber","ExamWinningRate","ThunderWinningRate","_this11","total","_loop3","PlusAmount","ExitTime","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_this12","_loop4","RecyclingAmount","TradesAmount","Profit","formatDateTime","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","timeStamp","date","Date","setTime","y","getFullYear","m","getMonth","getDate","h","getHours","minute","getMinutes","second","getSeconds","ViewWeb1","WebView","ViewWeb2","startView","_this","json","circleUrl","url","CloseWin","CloseWins","removeFromParent","_GetUserData","StartSp","Button","Record","Rule","SendAnInvitation","OnlineNumber","CircuseeOnlookers","Recharge","UserPic","UserID","ts","GetUserDatas","getComponentInChildren","startGame","id","_data","_GoToGame","_StageData","LoginTimeOut","itemTemplate","spawnCount","spacing","items","token","userid","roomId","_e","initialize","DataLists","item","_item","GoToStart","module","exports","ns","GoLoadScene","decodeURIComponent","sData","encodeURIComponent","stringify","lobbySocket","removeItem","WeixinLoginTime","tok","outCode","ws","close","SignInBoxRight","SignIn","Logins","SignInBox","moveBy","p","runAction","SignInBoxLeft","TelBox","PhoneViews","parent","DestroyNode","AddWindow","prefab","x","arguments","obj","method","_fn","async","onreadystatechange","readyState","status","response","responseText","open","setRequestHeader","send","online","RoomUserLen","GameRoomData","_Golds","clientid","questions","returnHome","load","tex","spriteFrame","SpriteFrame","pre","fn","alertWindw","msg","windowLabel","addComponent","color","Color","zIndex","opacity","sequence","delayTime","fadeIn","fadeOut","tintTo","WebSocket","wsUrl","onopen","event","OPEN","onmessage","evMsg","lobbyGetStatus","Code","onerror","onclose","UserDisplayName","GetMessges","Returns","GoodsPrice","GoodsName","GoodsQuantity","SpIcon","sfIcons","getRandomInt","min","max","ratio","random0To1","Math","floor","toString","label","text","_properties","userID","userName","loaded","target","_defineProperty","Vec2","Boolean","String","Float","Integer","displayName","tooltip","get","_width","set","itemID","updateItem","tmplId","itemId","Maps","TiledMap","Player","TiledLayer","LayerOne","GotoUp","StopUp","TimesOut","radioButton","Toggle","upGold","allGold","SaveGolds","User_Name","User_Pic","User_Id","xplayer","xUserNum","IsStop","xFloor","T1","T2","T3","T4","floorNext","floorForme","ServerTimes","GetServerTimesSave","sThirty","sTimes","eTimes","eTneTime","eThreeTime","tName","n1","n2","bom","anim","Animation","animbom","animOver","anim1","anim2","anim3","goSource","timeStartSource","startTime","bombTimeSource","gameOver","gameWin","bombTime","GetServerTimes","SetServerTimes","getPositionAt","Prepare","nSocket","GetBaseRoom","roomnumberid","rule","CalculateGold","loaderViewWin","gold","SetPrefab","loaderViewWinLost","find","D","EndTimestamps","CurrentTimestamps","RoomUser","CalculateAllGold","SetGameRoomData","CountdownType","unschedule","StartTimeOuts","GameTimeOuts","forEach","v","CurrentFloor","setTileGID","GoToUpFn","types","Roomnumberid","message","ClickGotoUp","moveToPlayer","ButtonType","StopPlayer","players","getTileAt","gid","getTileGIDAt","moveTo","finish","callFunc","removeTileAt","F","mAcion","schedule","CurrentTime","BomTimeOuts","stop","nSocketTime","s","CalculateForm","numbs","frome","parseInt","Floor","Chip","OutRoom","radioButtonClicked","toggle","index","indexOf","alert","SetingBox","room","userId","aData","Status","GetStatus","u","f","Bomfn","aAnimationTimes","aAnimationBom","aAnimationTimesOver","repeatCount","arr","a","interactable","_this13","dot","_f","WinLoseData","states","_this14","GetHallMsgUrl","AddFollowUrl","DelFollowUrl","AddMyMsgUrl","AddWithdrawalUrl","scrollContent","scrollContentRight","GoldWindow","SaveId","SaveIdGive","GiveGold","hasGold","RichTextGold","RichText","User_Gold","present","addMsgs","addMsgsBtn","oldID","GetHallMsgFn","contentLeft","contentRight","hall","hallObj","msgLists","msgList","lists","Msg","btn1","IsFollow","EventType","TOUCH_START","DelFollow","SaveUser","msgFollowList","TOUCH_END","oid","FollowUserID","Withdrawal","AgentID","AddWithdrawal","closeBtn","AddMyMsgs","changeAddMyMsg","moneybk","radioTabPay","PayTypeID","PayList","Channel","MerchantName","Icon","SavePay","Moneys","money","div","document","createElement","className","innerHTML","body","appendChild","PayForm","submit","getElementsByClassName","remove","radioTabs","index_target","prefabMoney","_loop5","_iterator5","pointer","pointerButton","pointerTitle","SaveNumber","pointerText","speed","sssNumber","Winners","TheWinningRecord","TheWinningRecordWindow","PigCardLise","PigList","Roundabout","_Roundabout","_objectList","_objectLists","User_Glod","PigArray","LottleList","runtime","ShowBoxWindow","run","sim","startBtn","winNode","loadUserPointer","GetRoundaboutRecord","_UserPointer","_UserRanking","UserRanking","_UserCharacter","UserCharacter","PigListType","RankingMsg","_object","Prize","fontSize","lineHeight","getChildren","CharactersNumber","_GetRound","_GetRounds","taskPic","Path","RoundaboutTypeName","DetailedTypeName","Time","list","GetPointerUrl","Conditions","RoundaboutType","isChecked","GoPigDial","TheWinningRecordFn","PigCardLiseFn","selectPig","ele","loadMsgPointer","str","VCode","_pointer","prize","path","prompt","turntableStart","prizeType","turntableFn","closeWinNode","turntableStop","numberSave","a1","random","a3","a4","a5","a6","actionBy","rotateBy","easing","easeCubicActionOut","ShowBox","img","closeShowBoxWindow","taskWindow","taskListView","accomplishTaskWindow","everydaySignIn","accomplishEverydaySignIn","accompBtn","ruleWindow","hintWindow","getEggbtn","eggAnima","chuiziAnima","GetEggPig","eggNumber","everyDay","PigText","ViewWeb","GetLstUserCharacterInfo","getView","picName","ruleWindowBtn","openTask","GetLstCharacterCondition","closeTask","closeTaskWin","openEveryday","GetSignIn","closeEveryday","closeEverydayPir","_task","btn","Name","Introduction","Reward","Total","Condition","ReceiveCondition","RuleCode","_GetSignIn","IsSign","Value","SetSignIn","_GetLst","UserOpportunity","title","GetEgg","win","scaleX","_egg","IsWinning","onFinished","openThisEgg","closeThisEgg","GoTask","GetEggPigFn","moneyEnough","ClientLog","Regulation","RankingList","RankingLists","GameLists","misNumber","misWindow","ClientLogs","regulations","GetlsexamprofitrankingInfo","getvouchernumber","closeMoneyEnough","GameStart","GetInroom","closemisWindow","mid","Number","sms","ExamRoomID","IsAnswerSheet","element","loaderFab","idx","rangLabel","timeLabel","moneyLabel","moneysLabel","Ranking","date1","Y","M","minutes","_s","RanSprite","winClose","winClose2","winClose3","loaderRaing","rang","titles","StartTime","StartTimeLabel","StartTimeView","SetTimeA","horizontal","question","ExamRoomQuestionID","Correct","Wrong","btnd","btnc","isCuo","DengdaiTitle","StartTitle","ExamRoomGameNumberID","CurrentQuestions","errorWin","RenNumber","prepareGame","Annunciate","setAmount","allAmount","ObjectList","ten","QusNumber","QusNumbertitle","scrollViewLcc","overRaing","myMonney","RankingNumber","fillStart","Getroom","Question","QuestionsTotalsNumber","_updataFillStart","IsMatch","IsEndAnswer","EndTimestamp","CurrDateTime","loadImg","QuestionUrl","Url","sb","GetGameQuestions","AnswerTime","SetRaningPreFab","fabs","uid","wSprite","wLabel","wMoney","wTime","nSprite_child","rmrematch","Corrects","SaveCorrects","Wrongs","ass","Answer","IsWrongAnswer","flag","objects","temp","offsetAmount","innerList","toFixed","RanLabel","RanBoxLabex","goHome","sprite","Music","Slider","Sounds","_updateMusicVolume","progress","onSliderHEvent","sender","eventType","scrollView2","scrollView3","addressItem","_addressItem","Sheng","ShengID","Shi","ShiID","Qu","QuID","address","addressTel","addressName","PayTab","PayCard","PayCardId","CardNumber","bankCard","bankCardName","CardName","alipayCard","EditBoxList1","EditBoxList2","scrollViewCard","togglePay","sign","signPay","radioButtonTabs","SaveBtn","content2","content3","addressId","ID","DetailAddress","contactName","MobilePhone","ProvinceName","CityName","AreaName","GetPayInfo","GetBankListPost","_updateAudiosVolume","onSliderHEventAudios","LoginOut","ShengBotton","GetAddress","itemclick","ShiBotton","QuBotton","pid","ParentID","addressObj","nodeLabel","Areas_ID","SaveMessges","Province","City","Area","isDefault","info","BindAlipayAccount","BindBankCard","TrueName","AlipayAccount","AccountName","AccountNumber","BankID","DocumenCode","GetBankList","EnumDisplayText","EnumValue","radioButtonClickedTab","PayTabButton","changed","CardChanged","GoodesOneList","GoodsWindow","GoodsTitle","GoodsTitle2","GoodsGold","GoodsGold2","GoodsImg","J1","J2","J3","GoodsNumber","GoodsGoldCoin","GoodsID","ScrollViews","ShowRorderBox","tishi","getuserorderlist","ShopMsg","openWindowGoods","GoodsPic","GoodsMarketPrice","pic","gmp","setTexture","closeWin","J1Fn","J2Fn","SaveBtnFn","GoodsId","AddressId","record","Labels","Sp","ShippingNo","ExpressName","StrCreateTime","ShowRorder","closetishi","Wecher","Tel","_filters","Phone","SecurityCode","Messages","RedLabel","GetImgCodes","action_times","TimesOutBtn","GetUserDataUrl","WebUrl","SignWindow","LoginBtn","wxBtn","phoneBtn","webwxlogin","RedLabels","LoginList","mode","setPositionX","wxBtnLogin","href","SendMessages","c","verificationPhone","mobilephone","imgcode","SetTimeOut","vcode","TableChange","t","WebUrlText","navigator","userAgent","toLowerCase","weixin","image","music","slider_h","slider_v","_updateImageOpacity","onSliderVEvent","LoadTime","action_time","Centers","toy","TimeOuts","toys","Centers1","Centers2","Centers3","Centers4","easeInOut","now_time","CallOff","percent","fillRange","ClickTab","loaderViewText","iView","_h","_w","unhtml","replace","<","\"",">","'","tel","test","unBlank","character","char","isEmoji","substring","hs","charCodeAt","uc","countDown","codebtn","timer","setInterval","attr","val","css","clearInterval","countdowns","times","setAttribute","filter","inputs","removeAttribute","v1","tagName","innerText","Polyglot","lang","language","polyglot","phrases","allowMissing","key","opt","audioSource","pause","root","factory","__onfireEvents","__cnt","string_str","function_str","hasOwnKey","Function","call","bind","Object","hasOwnProperty","slice","Array","prototype","_bind","eventName","callback","is_one","context","_typeof","Error","_each","_fire_func","args","apply","one","un","key_1","item_1","key_2","item_2","fire","setTimeout","fireSync","clear","onfire","global","options","extend","currentLocale","locale","warn","VERSION","newLocale","morePhrases","prefix","phrase","unset","newPhrases","result","smart_count","_","source","ret","prop","clone","arg","replacement","dollarRegex","dollarBillsYall","interpolate","count","texts","chosenText","split","delimeter","pluralTypes","langToPluralType","mapping","langs","l","langToTypeMap","pluralTypeToLanguages","en","trimRe","choosePluralForm","has","chinese","german","french","russian","czech","polish","icelandic","define","amd"],"mappings":"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","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    //商品节点\r\n    slotPrefab: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    //滚动视图\r\n    scrollView: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    //列表大小\r\n    totalCount: 0\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {},\r\n//循环\r\n  init(home) {\r\n    this.heroSlots = [];\r\n    this.home = home;\r\n    for (let i = 0; i < this.totalCount.length; ++i) {\r\n      let heroSlot = this.addHeroSlot();\r\n      this.heroSlots.push(heroSlot);\r\n    }\r\n  },\r\n  addHeroSlot() {\r\n    //添加到场景\r\n    let heroSlot = cc.instantiate(this.slotPrefab);\r\n    this.scrollView.content.addChild(heroSlot);\r\n    return heroSlot;\r\n  },\r\n  show() {\r\n    this.node.emit(\"fade-in\");\r\n    this.home.toggleHomeBtns(false);\r\n  },\r\n  hide() {\r\n    this.node.emit(\"fade-out\");\r\n    this.home.toggleHomeBtns(false);\r\n  },\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas, AddWindow, WeixinLoginTime } from \"GetUserData\";\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    UserInfo: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    UserInfoImg: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    UserInfoId: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    UserInfoName: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    //用户信息\r\n    InfoBox: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    //设置\r\n    Setings: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    SetingsBtn: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    //活动页面\r\n    Activitys: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    //商店\r\n    ShopsBtn: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    // 金币\r\n    Gulds: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    GuldsSetings: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    Gold: cc.Label,\r\n\r\n    Audios: cc.AudioSource,\r\n\r\n    clikcMis: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //??\r\n    clickGameMis: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n\r\n    TurnTheScreen: cc.Node,\r\n\r\n    screenOrientation: '',\r\n    sMsg: cc.Label,\r\n\r\n    Invitations: cc.Node,//邀请\r\n\r\n    // 二维码\r\n    QcCode: cc.Sprite,\r\n    buttomMsg: cc.Label,\r\n    UserToName: cc.Label,\r\n    UserToId: cc.Label,\r\n    User_pic: cc.Sprite,\r\n\r\n    TotalAmount: cc.Label,\r\n    DirectlyUnderAmount: cc.Label,\r\n    LowerMemberAmount: cc.Label,\r\n    TotalCommission: cc.Label,\r\n    DirectlyUnderCommission: cc.Label,\r\n    LowerMemberCommission: cc.Label,\r\n\r\n\r\n    sPageView: cc.PageView,\r\n    sPageView_1: cc.Sprite,\r\n    sPageView_2: cc.Sprite,\r\n    sPageView_3: cc.Sprite,\r\n\r\n    nlayer: cc.Node,\r\n\r\n    myScrollView: cc.ScrollView,\r\n    AgentScrollView: cc.ScrollView,\r\n\r\n    qrCodeUrls: cc.Node,\r\n\r\n    Extext: cc.Node,\r\n\r\n    // 个人中心\r\n    MyName: cc.EditBox,\r\n    MyId: cc.Label,\r\n    MyIcon: cc.Sprite,\r\n    QsNumber: cc.Label,\r\n    ThunderNumber: cc.Label,\r\n    PigNumber: cc.Label,\r\n    QsWinNumber: cc.Label,\r\n    ThWinNumber: cc.Label,\r\n\r\n    ByGolds: cc.ScrollView,\r\n    BsGolds: cc.ScrollView,\r\n\r\n    ThunderScroll: cc.ScrollView,\r\n    QuestionScroll: cc.ScrollView,\r\n\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  modification() {\r\n    let sss = this.Extext.getComponent(cc.EditBox).string\r\n    //   this.Extext.removeComponent(cc.EditBox)\r\n    //  let txt= this.Extext.addComponent(cc.Label)\r\n    //   txt.string  = '787878'\r\n    // console.log(this.Extext.getComponent(cc.EditBox));\r\n    // console.log(this.Extext.getComponent(cc.Label).string);\r\n    if (sss == '') {\r\n      this.Extext.getComponent(cc.EditBox).string = Global.DataUsers.UserName\r\n      return\r\n    }\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      UserName: sss\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/UpdateUserName\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        this.GetUserCenter()\r\n      }\r\n    })\r\n  },\r\n  openUserInfo(e, num) {\r\n    this.UserInfo.scale = num\r\n    this.clikcMis.play()\r\n  },\r\n  getQueryString(name) {\r\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n    var r = window.location.search.substr(1).match(reg);\r\n    if (r != null) return decodeURI(r[2]);\r\n    return null;\r\n  },\r\n  onLoad() {\r\n    console.log(cc.sys.localStorage.getItem(\"SJ\") != null);\r\n    this.scheduleOnce(() => {\r\n      this.SetInfo()\r\n    }, .5);\r\n\r\n\r\n    // console.log(navigator.userAgent.toLowerCase().match(/MicroMessenger/i) == \"micromessenger\");\r\n\r\n    this.getversion()\r\n\r\n    // 设置\r\n    this.SetingsBtn.on(\"touchstart\", this.SetingsFn, this);\r\n    //活动界面\r\n    this.Activitys.on(\"touchstart\", this.ActivityWin, this);\r\n    //金币\r\n    this.Gulds.on(\"touchstart\", this.AddWindows, this);\r\n    //音乐初始化\r\n    if (cc.sys.localStorage.getItem(\"Mic\") == null) {\r\n      cc.sys.localStorage.setItem(\"Mic\", 0.5);\r\n    }\r\n    if (cc.sys.localStorage.getItem(\"Sou\") == null) {\r\n      cc.sys.localStorage.setItem(\"Sou\", 0.5);\r\n    }\r\n    Global.Audios = this.Audios;\r\n    Global.clikcMis = this.clikcMis\r\n\r\n\r\n    Global.Audios.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.clikcMis.volume = cc.sys.localStorage.getItem(\"Sou\");\r\n\r\n    // //判断有没有账户\r\n    // console.log(cc.sys.localStorage.getItem('SJ') != 'undefined');\r\n    // console.log(cc.sys.localStorage.getItem('SJ') != null);\r\n\r\n  },\r\n  SetInfo() {\r\n    if (Global.DataUsers == null) {\r\n      return\r\n    }\r\n    console.log('设置数据');\r\n    // console.log(Global.DataUsers);\r\n    this.UserInfoName.string = Global.DataUsers.UserName;\r\n    this.MyName.string = Global.DataUsers.UserName;\r\n    this.MyId.string = 'ID:' + Global.DataUsers.Login;\r\n    this.UserInfoId.string = 'ID:' + Global.DataUsers.Login;\r\n    Global.loaderUserIcon(Global.DataUsers.UserIcon, this.UserInfoImg)\r\n    Global.loaderUserIcon(Global.DataUsers.UserIcon, this.MyIcon)\r\n    this.Gold.string = Global.DataUsers.Balance;\r\n    this.GetInvitation()\r\n    this.GetAgentRule()\r\n    this.GetAgentDataStatisticsInfo()\r\n\r\n    //个人中心 金币购买\r\n    this.GetUserCenter()\r\n    this.GetRecords(1)\r\n    this.GetRecords(2)\r\n\r\n    //游戏记录\r\n    this.GetThunderTrades()\r\n    this.getexamgamerecords()\r\n\r\n  },\r\n  addEventListeners() {\r\n    this.checkOrient();\r\n    window.onorientationchange = this.screenOrientation;\r\n  },\r\n\r\n\r\n  //通过window.orientation来判断设备横竖屏\r\n  checkOrient() {\r\n    let _this = this\r\n    if (window.orientation == 0 || window.orientation == 180) {//竖屏的时候\r\n      this.screenOrientation = 'portrait';\r\n      // alert(window.orientation)\r\n      _this.TurnTheScreen.scale = 1\r\n    }\r\n    else if (window.orientation == 90 || window.orientation == -90) {//横屏的时候\r\n      this.screenOrientation = 'landscape';\r\n      _this.TurnTheScreen.scale = 0\r\n      // alert(window.orientation)\r\n    }\r\n  },\r\n  GoGameStart(e, d) {\r\n    cc.director.loadScene(d)\r\n  },\r\n\r\n\r\n  Invitation(e, n) {\r\n    if (n == 1) {\r\n      this.GetInvitation()\r\n      this.GetAgentRule()\r\n      this.GetAgentDataStatisticsInfo()\r\n      this.GetParentAgentWeeklyTransaction(1)\r\n      this.GetParentAgentWeeklyTransaction(2)\r\n    }\r\n    this.Invitations.scale = n\r\n    this.clikcMis.play()\r\n  },\r\n  Shops() {\r\n    cc.director.loadScene(\"Shop\");\r\n  },\r\n  ActivityWin() {\r\n    cc.director.loadScene(\"Activity\");\r\n  },\r\n\r\n  AddWindows() {\r\n    this.GuldsSetings.scale = 1\r\n    this.clikcMis.play()\r\n  },\r\n  closeGuldsSetings() {\r\n    this.GuldsSetings.scale = 0\r\n    this.clikcMis.play()\r\n  },\r\n  SetingsFn() {\r\n    let Infos = cc.instantiate(this.Setings);\r\n    this.node.addChild(Infos, 104);\r\n    Infos.setPosition(0, 0);\r\n    this.clikcMis.play()\r\n  },\r\n  //SignIn\r\n  GetPrefab(fab) {\r\n    cc.loader.loadRes(\"/prefab/\" + fab, (err, Prefab) => {\r\n      if (err) {\r\n        console.log(err)\r\n        return;\r\n      }\r\n      var newNode = cc.instantiate(Prefab);\r\n      newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n      cc.director.getScene().addChild(newNode);\r\n      // let _newNode = cc.find(\"sl/winText\", newNode)\r\n      // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n    });\r\n  },\r\n\r\n  CloseViews() {\r\n    this.node.destroy()\r\n  },\r\n  start() {\r\n  }\r\n  ,\r\n  GoToMsg() {\r\n    cc.director.loadScene(\"News\");\r\n  },\r\n  update(dt) {\r\n    this.sMsg.string = Global.socketMsg\r\n  },\r\n  getversion() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      \"clientVersion\": '0.0.1',\r\n      \"client\": 0\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/common/getversion\", data, e => {\r\n      let code = JSON.parse(e)\r\n\r\n      if (code.code == 12000) {\r\n\r\n\r\n      }\r\n    })\r\n  },\r\n  //二维码\r\n  qrCodeUrlFn(e, num) {\r\n    var nSprite = cc.instantiate(this.User_pic.node);\r\n    nSprite.setPosition(cc.v2(0, 0))\r\n    nSprite.scale = 2\r\n    this.qrCodeUrls.addChild(nSprite)\r\n    this.qrCodeUrls.scale = num;\r\n  },\r\n  //邀请                                                                               %.65获取代理本周佣金\r\n  GetInvitation() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetWeeklyTransaction\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.AccountType == 1) {\r\n        this.ApplicationBroker()\r\n      }\r\n      if (code.code == 12000 && code.AccountType == 2) {\r\n        let mo = code.model\r\n        let ser = code.user\r\n        let tips = code.tips\r\n        this.UserToName.string = ser.UserName\r\n        this.UserToId.string = ' ID:' + ser.Login\r\n        this.TotalAmount.string = mo.TotalAmount\r\n        this.DirectlyUnderAmount.string = mo.DirectlyUnderAmount\r\n        this.LowerMemberAmount.string = mo.LowerMemberAmount\r\n        this.TotalCommission.string = mo.TotalCommission\r\n        this.DirectlyUnderCommission.string = mo.DirectlyUnderCommission\r\n        this.LowerMemberCommission.string = mo.LowerMemberCommission\r\n        this.buttomMsg.string = tips[0] + tips[1]\r\n        Global.loaderUserIcon(code.qrCodeUrl, this.User_pic)\r\n      }\r\n    })\r\n  },\r\n  //                                                                                       %.64成为超级玩家\r\n  ApplicationBroker() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/ApplicationBroker\", data, e => {\r\n      let code = JSON.parse(e)\r\n      // console.log(code);\r\n      if (code.code == 12000) {\r\n\r\n      }\r\n    })\r\n  },\r\n  //%.                                                                                      66获取代理周数据统计\r\n  GetAgentDataStatisticsInfo() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetAgentDataStatisticsInfo\", data, e => {\r\n      let Agent = JSON.parse(e)\r\n      if (Agent.code == 12000) {\r\n        let AgentAll = Agent.model\r\n        let AgentCount = this.nlayer.getChildByName('ask_list_one').getComponentsInChildren(cc.Label)\r\n        AgentCount[0].string = '我的代理:' + AgentAll.ParentAgentCount\r\n        AgentCount[1].string = '本周新增:' + AgentAll.WeekParentAgentCount\r\n        AgentCount[2].string = '本月新增:' + AgentAll.MonthParentAgentCount\r\n\r\n        let Counts = this.nlayer.getChildByName('ask_list_two').getComponentsInChildren(cc.Label)\r\n        Counts[0].string = '我的代理:' + AgentAll.UserCount\r\n        Counts[1].string = '本周新增:' + AgentAll.WeekCount\r\n        Counts[2].string = '本月新增:' + AgentAll.MonthCount\r\n      }\r\n    })\r\n  },\r\n  // % .67获取直属代理\r\n  GetParentAgentWeeklyTransaction(num) {\r\n    if (num == 1) {\r\n      this.myScrollView.content.removeAllChildren()\r\n    }\r\n    if (num == 2) {\r\n      this.AgentScrollView.content.removeAllChildren()\r\n    }\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 1,\r\n      Type: num //1我的代理，2直属会员\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetParentAgentWeeklyTransaction\", data, e => {\r\n      let Transaction = JSON.parse(e)\r\n      if (Transaction.code == 12000) {\r\n        // console.log(Transaction.List);\r\n        for (const iterator of Transaction.List) {\r\n          Global.loadPre('wlist', newNode => {\r\n            Global.loaderUserIcon(iterator.Avatar, newNode.getChildByName('wSprite').getComponent(cc.Sprite))\r\n            newNode.getChildByName('nLabel').getComponent(cc.Label).string = iterator.UserName;\r\n            newNode.getChildByName('ILabel').getComponent(cc.Label).string = iterator.Login;\r\n            newNode.getChildByName('yLabel').getComponent(cc.Label).string = iterator.Amount;\r\n            if (num == 1) {\r\n              this.myScrollView.content.addChild(newNode)\r\n            }\r\n            if (num == 2) {\r\n              this.AgentScrollView.content.addChild(newNode)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n  },\r\n  //%.69获取佣金规则\r\n  GetAgentRule() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetAgentRule\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        Global.loaderUserIcon(code.Data[0], this.sPageView_1)\r\n        Global.loaderUserIcon(code.Data[1], this.sPageView_2)\r\n        Global.loaderUserIcon(code.Data[2], this.sPageView_3)\r\n      }\r\n    })\r\n  },\r\n\r\n\r\n\r\n  // % .26获交易数据\r\n  GetRecords(num) {\r\n    this.ByGolds.content.removeAllChildren()\r\n    this.BsGolds.content.removeAllChildren()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 10,\r\n      Type: num\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/GetRecords\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code);\r\n        // console.log(code.object);\r\n        // console.log(code.object.List[0]);\r\n        for (const iterator of code.object.List) {\r\n          Global.loadPre('boxs', nodeList => {\r\n            let com = nodeList.getComponentsInChildren(cc.Label)\r\n            com[0].string = iterator.Money\r\n            com[1].string = iterator.StateCode\r\n            com[2].string = iterator.Subtime\r\n            if (num == 1) {\r\n              this.ByGolds.content.addChild(nodeList)\r\n            }\r\n            if (num == 2) {\r\n              this.BsGolds.content.addChild(nodeList)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n\r\n  },\r\n  //%.27获取用户中心\r\n  GetUserCenter() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/GetUserCenter\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code.object);\r\n        this.QsNumber.string = '极速答题周对局：' + code.object.ExamNumber\r\n        this.ThunderNumber.string = '排雷先锋周对局：' + code.object.ThunderNumber\r\n        this.PigNumber.string = '集小猪佩奇总数量：' + code.object.LittlePigPekyNumber\r\n        this.QsWinNumber.string = code.object.ExamWinningRate + '%'\r\n        this.ThWinNumber.string = code.object.ThunderWinningRate + '%'\r\n        this.UserInfoName.string = code.object.UserName;\r\n        this.MyName.string = code.object.UserName;\r\n        this.MyId.string = 'ID:' + code.object.Login;\r\n        this.UserInfoId.string = 'ID:' + code.object.Login;\r\n      }\r\n      if (code.code == 12002) {\r\n        cc.director.loadScene('LoginPage')\r\n      }\r\n    })\r\n  },\r\n  GetThunderTrades() {\r\n    this.ThunderScroll.content.removeAllChildren()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 10,\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/GetThunderTrades\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code);\r\n        if (code.object.total != 0) {\r\n          for (const iterator of code.object.List) {\r\n            Global.loadPre('boxs', nodeList => {\r\n              // console.log(nodeList.getComponentsInChildren(cc.Label))\r\n              let com = nodeList.getComponentsInChildren(cc.Label)\r\n              com[0].string = iterator.PlusAmount > 0 ? '胜利' : '失败'\r\n              com[1].string = iterator.PlusAmount\r\n              com[2].string = iterator.ExitTime\r\n              this.ThunderScroll.content.addChild(nodeList)\r\n\r\n              // this.QuestionScroll.content.addChild(nodeList)\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })\r\n  },\r\n  getexamgamerecords() {\r\n    this.QuestionScroll.content.removeAllChildren()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 10,\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/exam/getexamgamerecords\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code);\r\n        if (code.object != '') {\r\n          for (const iterator of code.object) {\r\n            Global.loadPre('boxs', nodeList => {\r\n              let com = nodeList.getComponentsInChildren(cc.Label)\r\n              com[0].string = (iterator.RecyclingAmount - iterator.TradesAmount) > 0 ? '胜利' : '失败'\r\n              com[1].string = iterator.Profit\r\n              com[2].string = this.formatDateTime(iterator.ExitTime)\r\n              this.QuestionScroll.content.addChild(nodeList)\r\n              // console.log(this.formatDateTime(iterator.ExitTime));\r\n\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })\r\n  },\r\n  formatDateTime(timeStamp) {\r\n    var date = new Date();\r\n    date.setTime(timeStamp * 1000);\r\n    var y = date.getFullYear();\r\n    var m = date.getMonth() + 1;\r\n    m = m < 10 ? ('0' + m) : m;\r\n    var d = date.getDate();\r\n    d = d < 10 ? ('0' + d) : d;\r\n    var h = date.getHours();\r\n    h = h < 10 ? ('0' + h) : h;\r\n    var minute = date.getMinutes();\r\n    var second = date.getSeconds();\r\n    minute = minute < 10 ? ('0' + minute) : minute;\r\n    second = second < 10 ? ('0' + second) : second;\r\n    return y + '-' + m + '-' + d + ' ' + h + ':' + minute + ':' + second;\r\n  }\r\n});\r\n// ","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        ViewWeb1: cc.WebView,\r\n        ViewWeb2: cc.WebView,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.startView(0,1)\r\n    },\r\n    startView(e, n) {\r\n        console.log(e);\r\n        console.log(n);\r\n        console.log(Global.DataUsers.Token);\r\n\r\n\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        \r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n            let serverUrl = 'http://192.168.1.106:802'\r\n            // let serverUrl = json.object.circleUrl\r\n            console.log(json.object.circleUrl);\r\n\r\n            if (n == 2) {\r\n                this.ViewWeb2.url = serverUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 10002\r\n            }\r\n            if (n == 1 ) {\r\n                this.ViewWeb1.url = serverUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 10001\r\n            }\r\n\r\n            console.log(this.ViewWeb1.url)\r\n            console.log(this.ViewWeb2.url)\r\n            console.log('--------------------------------------------------')\r\n        })\r\n    },\r\n    start() {\r\n        // let newNode = cc.director.getScene().getChildByName('Canvas')\r\n        // let WebView = cc.find(\"bg/WebView\", newNode).getComponent(cc.WebView)\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","/**\r\n * 关闭弹窗用，挂载到父组件canvas\r\n */\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    CloseWin: {\r\n      default: null,\r\n      type: cc.Node\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    this.CloseWin.on(\"touchstart\", this.CloseWins, this);\r\n  },\r\n\r\n  CloseWins() {\r\n      this.node.removeFromParent();\r\n  }\r\n\r\n  // update (dt) {},\r\n});\r\n","\r\nimport { GetUserDatas, GoLoadScene, LoginTimeOut } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //开始按钮\r\n        StartSp: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        // //开始加入资源\r\n        // StartLayout: {\r\n        //     default: null,\r\n        //     type: cc.Prefab\r\n        // },\r\n        //参加记录\r\n        Record: cc.Node,\r\n        //规则\r\n        Rule: cc.Node,\r\n        //邀请\r\n        SendAnInvitation: cc.Node,\r\n        //在线人数\r\n        OnlineNumber: cc.Node,\r\n        // 围观\r\n        CircuseeOnlookers: cc.Node,\r\n        //充值按钮\r\n        Recharge: cc.Node,\r\n        //金币\r\n        Gold: cc.Label,\r\n        UserName: cc.Label,\r\n        UserPic: cc.Sprite,\r\n        UserID: cc.Label,\r\n        ts: cc.Prefab,\r\n    },\r\n    onLoad() {\r\n        //判断有没有账户\r\n        this.SetInfo()\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.UserName.string = Global.DataUsers.UserName;\r\n        this.UserID.string = 'ID:' + Global.DataUsers.Login;\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.Gold.string = Global.DataUsers.Balance;\r\n        this.OnlineNumber.getComponentInChildren(cc.Label).string = '在线人数:' + cc.sys.localStorage.getItem('online')\r\n    },\r\n    /**\r\n     * \r\n     * @param {*} e 默认的event\r\n     * @param {*} id 0是开始游戏 1是参观\r\n     */\r\n    startGame(e, id) {\r\n        if (this.Gold.string < 30) {\r\n            let ts = cc.instantiate(this.ts);\r\n            this.node.addChild(ts, 107);\r\n            ts.setPosition(0, 0);\r\n            return;\r\n        }\r\n        //游戏匹配倒计时图\r\n        if (this.Gold.string > 9) {\r\n            // let Game = cc.instantiate(this.StartLayout);\r\n            // this.node.addChild(Game, 106);\r\n            // Game.setPosition(0, 0);\r\n\r\n            let xhr = cc.loader.getXMLHttpRequest()\r\n            let _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                Type: id\r\n            }\r\n            Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/caileigame/inroom\", _data, e => {\r\n                //匹配进入游戏\r\n                console.log('匹配进入游戏')\r\n                let _GoToGame = JSON.parse(e);\r\n                Global._StageData = _GoToGame\r\n                if (_GoToGame.code != 12000) {\r\n                    LoginTimeOut(Global._StageData.code)\r\n                } else {\r\n                    cc.director.loadScene(\"Stage\")\r\n                }\r\n            })\r\n        }\r\n    },\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        itemTemplate: { // item template to instantiate other items\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        scrollView: {\r\n            default: null,\r\n            type: cc.ScrollView\r\n        },\r\n        spawnCount: 2, // how many items we actually spawn\r\n        spacing: 0, // space between each item\r\n        totalCount: 0, // how many items we need for the whole list\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.content = this.scrollView.content;\r\n        this.items = []; // array to store spawned items\r\n\r\n        let _data = {\r\n            token: Global.DataUsers.Token,\r\n            userid: Global.DataUsers.UserId,\r\n            roomId: Global._StageData.Data\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/GetThunderTrades\", _data, e => {\r\n            let _e = JSON.parse(e);\r\n            let e_list = _e.object.List\r\n            this.initialize(_e.object.List);\r\n\r\n        })\r\n    },\r\n    initialize(List) {\r\n        let DataLists = List\r\n        // this.content.height = this.totalCount * (this.itemTemplate.height + this.spacing) + this.spacing; // get total content height\r\n        this.content.height = 45 * this.spawnCount\r\n        for (let i = 0; i < this.spawnCount; ++i) { // spawn items, we only need to do this once\r\n            let item = cc.instantiate(this.itemTemplate);\r\n            console.log(DataLists[i].UserID)\r\n            let _item = item.getComponentsInChildren(cc.Label)\r\n            _item[0].string = 'ID:' + DataLists[i].UserID\r\n            _item[1].string = DataLists[i].PlusAmount\r\n            // _item[2].string = \"第\" + (i + 1) + \"名\"\r\n            _item[2].string = \"\"\r\n            this.content.addChild(item);\r\n            item.setPosition(0, -item.height * (0.5 + i) - this.spacing * (i + 1));\r\n            // item.getComponent('Item').updateItem(i, i);\r\n            this.items.push(item);\r\n        }\r\n    },\r\n    GoToStart(){\r\n        cc.director.loadScene(\"GameStart\");\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","module.exports = {\r\n    GetUserDatas(ns) {\r\n        if (cc.sys.localStorage.getItem('SJ') == 'undefined' || cc.sys.localStorage.getItem('SJ') == null) {\r\n            Global.GoLoadScene()\r\n            console.log('什么数据都没有');\r\n            return \r\n        }\r\n        Global.DataUsers = JSON.parse(decodeURIComponent(cc.sys.localStorage.getItem('SJ')))\r\n        let _data = {\r\n            token: Global.DataUsers.Token,\r\n            UserId: Global.DataUsers.UserId\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/getuserinfo\", _data, e => {\r\n            console.log('獲取用戶數據')\r\n            let sData = JSON.parse(e)\r\n            if (sData.code == 12000) {\r\n                console.log(sData);\r\n                cc.sys.localStorage.setItem(\"SJ\", encodeURIComponent(JSON.stringify(sData.object)));\r\n                Global.DataUsers = JSON.parse(JSON.stringify(sData.object))\r\n                if (ns == 1) {\r\n                    cc.director.loadScene('Home')\r\n                    Global.lobbySocket()\r\n                    // setTimeout(() => {\r\n                    // }, 1000);\r\n                }\r\n            }\r\n            if (sData.code == 12002) {\r\n                cc.sys.localStorage.removeItem('SJ')\r\n                return \r\n            }\r\n        })\r\n        return ;        \r\n    },\r\n    WeixinLoginTime(tok) {\r\n        let _data = {\r\n            token: tok,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/Weixin/WebLoginByToken\", _data, e => {\r\n            console.log('微信獲取用戶數據')\r\n            let sData = JSON.parse(e)\r\n            if (sData.code == 12000) {\r\n                console.log(sData);\r\n                console.log('微信獲取用戶數據成功')\r\n                Global.DataUsers = JSON.parse(JSON.stringify(sData.object))\r\n                cc.sys.localStorage.setItem(\"SJ\", encodeURIComponent(JSON.stringify(sData.object)));\r\n                Global.lobbySocket()\r\n                cc.director.loadScene('Home')\r\n                \r\n            }\r\n        })\r\n        return true;\r\n    },\r\n    //登陆超时\r\n    LoginTimeOut(outCode) {\r\n        if (outCode != 12000) {\r\n            cc.sys.localStorage.removeItem('SJ')\r\n            Global.GoLoadScene()\r\n            Global.ws.close()\r\n            return;\r\n        }\r\n    },\r\n    //登陆框移动方法\r\n    SignInBoxRight(node, SignIn) {\r\n        let Logins = cc.instantiate(SignIn);\r\n        node.addChild(Logins, 100);\r\n        Logins.setPosition(-node.width, 0);\r\n        // let ViewWidth = node.width / 2 + SignIn.width / 2;\r\n        let SignInBox = cc.moveBy(0.2, cc.p(node.width, 0));\r\n        Logins.runAction(SignInBox);\r\n    },\r\n    //登陆框移动方法\r\n    SignInBoxLeft(node, TelBox) {\r\n        let PhoneViews = cc.instantiate(TelBox);\r\n        node.parent.addChild(PhoneViews, 101);\r\n        PhoneViews.setPosition(node.parent.width, 0);\r\n        // var ViewWidth = node.parent.width / 2 + TelBox.width / 2;\r\n        var SignInBox = cc.moveBy(0.2, cc.p(-node.parent.width, 0));\r\n        PhoneViews.runAction(SignInBox);\r\n    },\r\n    DestroyNode(node) {\r\n        node.destroy();\r\n    },\r\n    CloseWins(node) {\r\n        node.removeFromParent();\r\n    },\r\n    //添加弹窗到场景\r\n    AddWindow(node, prefab, x = 0, y = 0) {\r\n        let obj = cc.instantiate(prefab);\r\n        node.addChild(obj, 103);\r\n        obj.setPosition(x, y);\r\n    },\r\n    // 场景跳转\r\n\r\n}\r\n// Global.streamXHREventsToLabel(xhr, \"POST\",Global.serverUrl + \"/account/GetWebSocket\", JSON.stringify(data),e=>{})\r\nwindow.Global = {\r\n    // serverUrl: 'http://192.168.1.200:819',\r\n    // serverUrl: 'http://192.168.1.168:819',\r\n    // serverUrl: 'http://h5.huizhisuo.com',\r\n    serverUrl: 'http://h5.3dou.com',\r\n\r\n    streamXHREventsToLabel: function (xhr, method, url, _data, _fn, async = true) {\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\r\n                var response = xhr.responseText;\r\n                _fn(response) || function (response) { }\r\n                // console.log(response);\r\n            }\r\n        };\r\n        xhr.open(method, url, async);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded;charset=UTF-8\");\r\n        xhr.send(\"data=\" + JSON.stringify(_data))\r\n    },\r\n    DataUsers: null,\r\n    online: 0,\r\n    RoomUserLen: 0,\r\n    Audios: '',\r\n    //房间数据\r\n    _StageData: '',\r\n    //保存游戏中的用户数据\r\n    GameRoomData: '',\r\n    //保存金额列表\r\n    _Golds: '',\r\n    clientid: '',\r\n    questions: 0,\r\n    returnHome() {\r\n        if (Global.DataUsers == null) {\r\n            Global.GoLoadScene()\r\n            return\r\n        }\r\n    },\r\n    //加载头像图片\r\n    loaderUserIcon(url, nSprite) {\r\n        cc.loader.load({ url: url, type: 'png' }, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            nSprite.spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    loadPre(pre, fn) {\r\n        cc.loader.loadRes(\"/prefab/\" + pre, (err, Prefab) => {\r\n            if (err) {\r\n                console.log(err)\r\n                return;\r\n            }\r\n            var newNode = cc.instantiate(Prefab)\r\n            fn(newNode)\r\n        })\r\n    },\r\n    alertWindw(msg) {\r\n        let windowLabel = new cc.Node('Label');\r\n        let wLabel = windowLabel.addComponent(cc.Label);\r\n        wLabel.string = msg\r\n        windowLabel.color = new cc.Color(255, 0, 0)\r\n        windowLabel.zIndex = 999;\r\n        windowLabel.opacity = 0;\r\n        windowLabel.setPosition(cc.p(cc.director.getScene().getChildByName('Canvas').width / 2, cc.director.getScene().getChildByName('Canvas').height / 2))\r\n        cc.director.getScene().addChild(windowLabel)\r\n        windowLabel.runAction(cc.sequence(\r\n            cc.delayTime(0.5),\r\n            cc.fadeIn(0.5),\r\n            cc.delayTime(1),\r\n            cc.fadeOut(1),\r\n            cc.tintTo(2, 255, 255, 255)\r\n        ));\r\n    },\r\n    socketMsg: '恭喜玩家空空获得1210金币',\r\n    ws: '',\r\n    GoLoadScene() {\r\n        cc.director.loadScene('LoginPage')\r\n    },\r\n    lobbySocket() {\r\n        console.log('连接sk');\r\n        \r\n        Global.ws = new WebSocket(Global.DataUsers.wsUrl);\r\n        Global.ws.onopen = (event) => {\r\n            console.log(\"サーバー　オペ\");\r\n            if (Global.ws.readyState === WebSocket.OPEN) {\r\n                // var room = {\r\n                //     Code: 100,\r\n                //     Data: Global.DataUsers.UserId,\r\n                //     Message: \"用户登录\"\r\n                // };\r\n                //Global.ws.send(JSON.stringify(room));\r\n                console.log(\"WebSocket 用户登录...！\");\r\n            } else {\r\n                console.log(\"WebSocket 准备好用户登录...！\");\r\n            }\r\n        };\r\n        Global.ws.onmessage = (event) => {\r\n            let evMsg = JSON.parse(event.data)\r\n            console.log(\"サーバーのメッセージ: \" + event.data);\r\n            Global.lobbyGetStatus(evMsg.Code, evMsg)\r\n\r\n        };\r\n        Global.ws.onerror = (event) => {\r\n            console.log(\"メッセージ エッロ！！\");\r\n            // this.schedule(function () {\r\n            //   // 这里的 this 指向 component\r\n            //   this.doSomething();\r\n            // }, 1, 99, 0);\r\n        };\r\n        Global.ws.onclose = (event) => {\r\n            console.log(\"サーバー　オフ.\");\r\n        };\r\n\r\n    },\r\n    lobbyGetStatus(x, evMsg) { //sk里面的id\r\n        switch (x) {\r\n            case 100:\r\n                Global.GoLoadScene()\r\n                break;\r\n            case 101:\r\n                console.log('101')\r\n                break;\r\n            case 102:\r\n                console.log('102')\r\n                break;\r\n            case 103:\r\n                Global.socketMsg = '恭喜玩家' + evMsg.Data.UserDisplayName + '获得' + evMsg.Data.Profit + '金币'\r\n                break;\r\n            case 104:\r\n                console.log('104')\r\n                Global.online = evMsg.Data\r\n                cc.sys.localStorage.setItem('online', evMsg.Data)\r\n                // { \"Success\": true, \"Data\": 3, \"Code\": 104, \"Message\": \"当前在线人数\" }\r\n                // Global.ws.close()\r\n                break;\r\n            default:\r\n                cc.sys.localStorage.removeItem('SJ')\r\n                Global.GoLoadScene()\r\n                break;\r\n        }\r\n    },\r\n    //获取收获\r\n    GetMessges(fn) {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            PageIndex: 1,\r\n            PageSize: 1\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/GetUserAddressList\", _data, e => {\r\n            let obj = JSON.parse(e).object\r\n            fn(obj)\r\n        })\r\n    },\r\n};\r\n\r\n","cc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    Returns: {\r\n      default: null,\r\n      type: cc.Node\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    this.Returns.on(\r\n      \"touchstart\",\r\n      function() {\r\n        cc.director.loadScene(\"Home\");\r\n      },\r\n      this\r\n    );\r\n  },\r\n\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","cc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    //价格\r\n    GoodsPrice: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    GoodsName: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    GoodsQuantity: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    //图标\r\n    SpIcon: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    //图标集\r\n    sfIcons: {\r\n      default: [],\r\n      type: cc.SpriteFrame\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    function getRandomInt(min, max) {\r\n      let ratio = cc.random0To1();\r\n      return min + Math.floor((max - min) * ratio);\r\n    }\r\n    this.GoodsPrice.string = \"$\" + getRandomInt(1, 100).toString();\r\n    this.SpIcon.SpriteFrame = this.sfIcons[getRandomInt(0, this.sfIcons)];\r\n  },\r\n\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!'\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.label.string = this.text;\n    },\n\n    // called every frame\n    update: function (dt) {\n\n    },\n});\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    //声明属性用、\r\n    properties: {\r\n        userID: 20,\r\n        userName: \"Foobar\",\r\n        //当声明的属性为基本 JavaScript 类型时，可以直接赋予默认值：\r\n        height: 20, // number\r\n        type: \"actor\", // string\r\n        loaded: false, // boolean                \r\n        target: null, // object\r\n        //当声明的属性具备类型时（如：cc.Node，cc.Vec2 等），可以在声明处填写他们的构造函数来完成\r\n        target: cc.Node,\r\n        pos: cc.Vec2,\r\n        //当声明属性的类型继承自 cc.ValueType 时（如：cc.Vec2，cc.Color 或 cc.Rect），除了上面的构造函数，还可以直接使用实例作为默认值：\r\n        pos: new cc.Vec2(10, 20),\r\n        color: new cc.Color(255, 255, 255, 128),\r\n        //当声明属性是一个数组时，可以在声明处填写他们的类型或构造函数来完成声明\r\n        any: [], // 不定义具体类型的数组\r\n        bools: [cc.Boolean],\r\n        strings: [cc.String],\r\n        floats: [cc.Float],\r\n        ints: [cc.Integer],\r\n\r\n        values: [cc.Vec2],\r\n        nodes: [cc.Node],\r\n        frames: [cc.SpriteFrame],\r\n        //除了以上几种情况，其他类型我们都需要使用完整声明的方式来进行书写。\r\n\r\n        //有些情况下，我们需要为属性声明添加参数，这些参数控制了属性在 属性检查器 中的显示方式，以及属性在场景序列化过程中的行为\r\n        score: {\r\n            default: 0,\r\n            displayName: \"Score (player)\",\r\n            tooltip: \"The score of player\",\r\n        },\r\n        //在属性中设置了 get 或 set 以后，访问属性的时候，就能触发预定义的 get 或 set 方法。定义方法如下：\r\n        width: {\r\n            get: function() {\r\n                return this._width;\r\n            },\r\n            set: function(value) {\r\n                this._width = value;\r\n            }\r\n        }\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},|\r\n    //获得组件所在的节点\r\n    start() {\r\n        // var node = this.node;\r\n        // node.x = 100;\r\n\r\n        var label = this.getComponent(cc.Label);\r\n        var text = this.String + '111';\r\n\r\n        // Change the text in Label Component\r\n        label.string = text;\r\n    },\r\n\r\n    // update (dt) {},\r\n});","// const i18n = require('i18n');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        label: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        itemID: 0\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.node.on('touchend', function () {\r\n            console.log(\"Item \" + this.itemID + ' clicked');\r\n        }, this);\r\n    },\r\n\r\n    updateItem: function (tmplId, itemId) {\r\n        this.itemID = itemId;\r\n        // this.label.textKey = i18n.t(\"cases/02_ui/05_scrollView/Item.js.1\") + tmplId + ' Item#' + this.itemID;\r\n    },\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","import { GetUserDatas, AddWindow, LoginTimeOut } from \"GetUserData\";\r\n// var netControl = require('NetControl');\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    Maps: {\r\n      default: null,\r\n      type: cc.TiledMap\r\n    },\r\n    Player: {\r\n      default: null,\r\n      type: cc.TiledLayer\r\n    },\r\n    LayerOne: {\r\n      default: null,\r\n      type: cc.TiledLayer\r\n    },\r\n    // 上楼按钮\r\n    GotoUp: {\r\n      default: null,\r\n      type: cc.Button\r\n    },\r\n    StopUp: {\r\n      default: null,\r\n      type: cc.Button\r\n    },\r\n    TimesOut: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n\r\n    radioButton: {\r\n      default: [],\r\n      type: cc.Toggle\r\n    },\r\n\r\n    Audios: cc.AudioSource,\r\n    Setings: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    //金币\r\n    Gold: cc.Label,         //金币总数\r\n    upGold: cc.Label,       //前进所需要的金币\r\n    allGold: cc.Label,      //金币池\r\n    SaveGolds: 0,            //保存總金額\r\n    //用户名字设置\r\n    User_Name: cc.Label,\r\n    User_Pic: cc.Sprite,\r\n    User_Id: cc.Label,\r\n    //当前楼层    \r\n    xplayer: 15,             //楼层数\r\n    xUserNum: 0,             //设置人物位置\r\n    IsStop: 0,               //停止的楼层\r\n    xFloor: 1,               //记录当前玩家移动楼层\r\n    T1: '',\r\n    T2: '',\r\n    T3: '',\r\n    T4: '',\r\n    floorNext: cc.Label,      //下一层收益\r\n    floorForme: cc.Label,     //当前收益\r\n    ServerTimes: 0,           //记录服务器时间\r\n    GetServerTimesSave: 0,    //记录服务器的请求间隔时间\r\n    sThirty: 30,              //倒计时用的参数\r\n    sTimes: 0,                //开始时间\r\n    eTimes: 0,                //结束时间\r\n    eTneTime: 10,             //十秒的倒计时\r\n    eThreeTime: '--',            //三秒\r\n    tName: cc.Label,          //倒计时的文字\r\n    n1: 0,                    //爆炸上一楼有多少人\r\n    n2: 0,                    //爆炸此楼有多少人\r\n    bom: 0,                   //保存炸弹的楼层\r\n\r\n    anim: cc.Animation,\r\n    animbom: cc.Animation,\r\n    animOver: cc.Animation,\r\n    anim1: cc.Node,\r\n    anim2: cc.Node,\r\n    anim3: cc.Node,\r\n    //前进一步\r\n    goSource: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //倒数后开始声音\r\n    timeStartSource: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //扫雷匹配中\r\n    startTime: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //扫雷游戏中\r\n    bombTimeSource: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //游戏结果\r\n    gameOver: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //游戏胜利\r\n    gameWin: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //排雷雷暴声音\r\n    bombTime: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    // for (let i = 2; i < 12; i++) {\r\n    //   this.Player.setTileGID(0, i, 14, 0);\r\n    // }\r\n    this.startTime.play()\r\n    console.log('进入游戏界面')\r\n    this.SetInfo()          //设置用户数据\r\n    this.GetServerTimes()   //获取服务器时间接口\r\n    this.SetServerTimes()   //服务器时间自动计时\r\n    //判断有没有账户\r\n    //音乐初始化\r\n    Global.Audios = this.Audios;\r\n    Global.Audios.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    //将像素坐标转化为瓦片坐标，posInPixel：目标节点的position\r\n    let pos = this.Player.getPositionAt(0, 0);\r\n    let pos1 = this.Player.getPositionAt(3, 14); //Vec2 {x: 50, y: 400}\r\n    let pos2 = this.Player.getPositionAt(3, 13); //Vec2 {x: 100, y: 425}\r\n    let pos3 = this.Player.getPositionAt(3, 12); //Vec2 {x: 150, y: 450}\r\n\r\n\r\n    // this.Player.setTileGID(pos1, 3, 14, gid);\r\n    // console.log(this.Player.setTexture()) //setTexture 设置纹理。\r\n    //选择人物前面+1 移动后面-1\r\n\r\n    //获取GID 没有就是0 用来判断地雷\r\n\r\n    // let three = 3\r\n    // this.T3 = function () {\r\n    //   if (three < 1) {\r\n    //     this.unschedule(this.T3);\r\n    //     this.anim.stop();\r\n    //   } else {\r\n    //     three--;\r\n    //   }\r\n    // };\r\n    // this.schedule(this.T3, 1);\r\n\r\n\r\n  },\r\n\r\n  start() {\r\n    this.Prepare()          //获取房间数据\r\n    this.nSocket()\r\n  },\r\n\r\n  //获取规则\r\n  GetBaseRoom() {\r\n    if (Global._StageData.Data == undefined) {\r\n      cc.director.loadScene('GameStart')\r\n      return\r\n    }\r\n    let _data = {\r\n      token: Global.DataUsers.Token,\r\n      userid: Global.DataUsers.UserId,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/getbaseroom\", _data, e => {\r\n      let _e = JSON.parse(e);\r\n      cc.sys.localStorage.setItem('_Golds', JSON.stringify(_e.object.rule.List));\r\n      // console.log(_e.object.rule.List)\r\n      this.CalculateGold()\r\n    })\r\n  },\r\n\r\n  loaderViewWin(gold) {\r\n    this.SetPrefab('Win', gold)\r\n  },\r\n\r\n  loaderViewWinLost(gold) {\r\n    this.SetPrefab('lose', gold)\r\n\r\n  },\r\n  SetPrefab(fab, gold) {\r\n    cc.loader.loadRes(\"/prefab/\" + fab, function (err, fab) {\r\n      if (err) {\r\n        console.log(err)\r\n        return;\r\n      }\r\n      var newNode = cc.instantiate(fab);\r\n      cc.director.getScene().addChild(newNode);\r\n      let _newNode = cc.find(\"sl/winText\", newNode)\r\n      _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n    });\r\n  },\r\n\r\n\r\n  // 获取准备房间信息 等待开始 60  \r\n  Prepare() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/caileigame/getroom\", _data, e => {\r\n      console.log('已获取房间数据')\r\n      let _StageData = JSON.parse(e);\r\n      if (_StageData.code == 12000) {\r\n        cc.sys.localStorage.setItem('_StageData', e);\r\n        let D = _StageData.object\r\n        this.eTimes = D.EndTimestamps;\r\n        this.sTimes = D.CurrentTimestamps\r\n        this.Gold.string = _StageData.Balance\r\n        Global.RoomUserLen = D.RoomUser.length\r\n        Global.GameRoomData = D.RoomUser;\r\n        this.CalculateAllGold()\r\n        this.SetGameRoomData()\r\n        // console.log(this.sThirty)\r\n        // console.log('设置结束时间：' + D.EndTimestamps)\r\n        // console.log('设置开始时间：' + D.CurrentTimestamps)\r\n        // console.log(D.CountdownType)\r\n        //当前游戏状态 1:等待开始,2:前进,3:开雷\r\n        if (D.CountdownType == 1) {\r\n          this.tName.string = '等待玩家..'\r\n          this.sThirty = D.EndTimestamps - D.CurrentTimestamps\r\n          this.unschedule(this.T1);\r\n          this.StartTimeOuts()\r\n        }\r\n        if (D.CountdownType == 2) {\r\n          this.tName.string = '上一层'\r\n          this.eTneTime = D.EndTimestamps - D.CurrentTimestamps\r\n          // this.eTneTime = 10\r\n          this.unschedule(this.T2);\r\n          this.GameTimeOuts()\r\n        }\r\n        if (D.CountdownType == 3) {\r\n          this.tName.string = '排雷中...'\r\n          this.TimesOut.string = '--';\r\n          // this.eThreeTime = 3\r\n          this.unschedule(this.T2); //爆炸的时候清除第二个定时器\r\n          // this.unschedule(this.T3);\r\n          // this.BomTimeOuts()\r\n        }\r\n        console.log('参的咸鱼')\r\n        console.log(D.RoomUser)\r\n      } else {\r\n        console.log('GetRoom 错误，在房间躺枪了')\r\n      }\r\n    })\r\n  },\r\n  // 设置房间数据\r\n  SetGameRoomData() {\r\n    Global.GameRoomData.forEach((v, i) => {\r\n      if (v.UserId == Global.DataUsers.UserId) {\r\n        //设置人物位置数据\r\n        this.xUserNum = i + 2;\r\n        this.xplayer = (15 - v.CurrentFloor)\r\n        this.Player.setTileGID(38, this.xUserNum, v.CurrentFloor != 0 ? this.xplayer : 14, 38);\r\n        console.log('楼层赋值' + this.xUserNum)\r\n      }\r\n      // if (v.UserId != Global.DataUsers.UserId) {\r\n      //   //设置人物位置数据\r\n      //   this.xplayer = (15 - v.CurrentFloor)\r\n      //   this.Player.setTileGID(28, (i + 2), v.CurrentFloor != 0 ? this.xplayer : 14, 28);\r\n      //   console.log('楼层赋值')\r\n      // }\r\n    })\r\n  },\r\n\r\n  //上一楼\r\n  GoToUpFn(types) {\r\n    console.log(types)\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      Roomnumberid: Global._StageData.Data,\r\n      Type: types\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/gameaction\", _data, e => {\r\n      let _StageData = JSON.parse(e);\r\n      console.log(_StageData)\r\n      if (_StageData.code == 12000) {\r\n        this.IsStop = _StageData.type\r\n      } else {\r\n        console.log(_StageData.message)\r\n        console.log('在房间躺枪了上一层')\r\n      }\r\n    })\r\n  },\r\n  //前进\r\n  ClickGotoUp(e, n) {\r\n    console.log(\"前进\");\r\n    this.GoToUpFn(n)\r\n    this.xFloor++\r\n    this.moveToPlayer(this.xUserNum, this.xplayer);\r\n    this.ButtonType(2)\r\n    this.CalculateAllGold()\r\n    this.CalculateGold()\r\n    this.goSource.play()\r\n  },\r\n  //不走\r\n  StopPlayer(e, n) {\r\n    console.log(\"不走了\");\r\n    this.GoToUpFn(n)\r\n    //前进按钮设置false\r\n    this.ButtonType(2)\r\n  },\r\n  //移动人物用\r\n  moveToPlayer(n, x) {\r\n    //获取玩家\r\n    let players = this.Player.getTileAt(n, x);\r\n    //获取玩家GID\r\n    let gid = this.Player.getTileGIDAt(n, x);\r\n    console.log(gid)\r\n\r\n    // 设置玩家运动\r\n    // let moveTo = cc.moveBy(1, cc.p(50, 25)); //x=50 y=25 z=50\r\n    let moveTo = cc.moveBy(0.1, cc.p(10, 100)); //x=50 y=25 z=50\r\n    //回调切换位置\r\n    let finish = cc.callFunc(() => {\r\n      //删除原坐标\r\n      this.Player.removeTileAt(n, x);\r\n      let F = x - 1;\r\n      //设置新坐标   \r\n      this.Player.setTileGID(gid, n, F, gid);\r\n      // this.xplayer = F;\r\n    }, players);\r\n    //顺序执行\r\n    let mAcion = cc.sequence(moveTo, finish);\r\n    // 启动运动\r\n    players.runAction(mAcion);\r\n    //运动结束后重新设置GID\r\n  },\r\n\r\n  //服务器计时器\r\n  SetServerTimes() {\r\n    this.schedule(function () {\r\n      // 这里的 this 指向 component\r\n      if (this.GetServerTimesSave == 10) {\r\n        this.GetServerTimes()\r\n        this.GetServerTimesSave = 0\r\n        return;\r\n      }\r\n      this.GetServerTimesSave++;\r\n      this.ServerTimes++;\r\n      // console.log('我是计时器')\r\n      // console.log(this.GetServerTimesSave)\r\n      // console.log(this.ServerTimes)\r\n    }, 1);\r\n  },\r\n  //获取服务器时间接口\r\n  GetServerTimes() {\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/getheartbeat\", _data, e => {\r\n      let obj = JSON.parse(e)\r\n      this.ServerTimes = obj.CurrentTime\r\n      // console.log('获取服务器时间：' + obj.CurrentTime)\r\n    })\r\n  },\r\n\r\n  StartTimeOuts() {\r\n    this.T1 = function () {\r\n      if (this.sThirty < 1) {\r\n        this.unschedule(this.T1);\r\n        //启动十秒倒计时\r\n      } else {\r\n        let x = this.sThirty - 1;\r\n        this.TimesOut.string = x;\r\n        this.sThirty = x;\r\n      }\r\n    };\r\n    this.schedule(this.T1, 1);\r\n    // 上面的计时器将在10秒后开始计时，每5秒执行一次回调，重复3次。\r\n  },\r\n  GameTimeOuts() {\r\n    this.T2 = function () {\r\n      if (this.eTneTime < 1) {\r\n        // this.GetServerTimes()\r\n        this.unschedule(this.T2);\r\n      } else {\r\n        // this.unschedule(this.T2);\r\n        let x = this.eTneTime - 1;\r\n        this.TimesOut.string = x;\r\n        this.eTneTime = x;\r\n      }\r\n    };\r\n    this.schedule(this.T2, 1);\r\n  },\r\n  BomTimeOuts() {\r\n    this.T3 = function () {\r\n      if (this.eThreeTime < 1) {\r\n        // this.GetServerTimes()\r\n        this.unschedule(this.T3);\r\n        this.anim.stop();\r\n      } else {\r\n        // this.unschedule(this.T3);\r\n        let x = this.eThreeTime - 1;\r\n        this.TimesOut.string = x;\r\n        this.eThreeTime = x;\r\n      }\r\n    };\r\n    this.schedule(this.T3, 1);\r\n  },\r\n  nSocketTime() {\r\n    this.T4 = () => {\r\n      this.nSocket()\r\n    };\r\n    this.schedule(this.T4, 5);\r\n  },\r\n  CalculateAllGold() {\r\n    let s = 0\r\n    Global.GameRoomData.forEach((v, i) => {\r\n      s += v.Amount\r\n    })\r\n    this.allGold.string = s;\r\n    this.SaveGolds = s\r\n    this.CalculateForm()\r\n  },\r\n\r\n  CalculateForm() {\r\n    let numbs = 0, frome = 0, next = 0;\r\n    Global.GameRoomData.forEach((v, i) => {\r\n      if (this.xFloor == v.CurrentFloor) {\r\n        numbs++\r\n        console.log('计算' + numbs)\r\n        console.log(this.xFloor == v.CurrentFloor)\r\n      }\r\n      // c = c < v.CurrentFloor ? v.CurrentFloor : c;\r\n    })\r\n    if (numbs != 0) {\r\n      frome = parseInt(this.SaveGolds / numbs)\r\n      next = parseInt(parseInt(this.SaveGolds) + parseInt(this.upGold.string) / numbs)\r\n      this.floorForme.string = frome;\r\n      this.floorNext.string = next\r\n    }\r\n  },\r\n\r\n  //金币计算\r\n  CalculateGold() {\r\n    Global._Golds = JSON.parse(cc.sys.localStorage.getItem('_Golds'))\r\n    for (const iterator of Global._Golds) {\r\n      if (iterator.Floor == (this.xFloor + 1)) {\r\n        this.upGold.string = iterator.Chip\r\n      }\r\n      if (iterator.Floor == this.xFloor) {\r\n        this.Gold.string = this.Gold.string - iterator.Chip\r\n      }\r\n    }\r\n\r\n\r\n  },\r\n\r\n  // 退出房间\r\n  OutRoom() {\r\n\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/outroom\", _data, e => {\r\n      let _Stage = JSON.parse(e);\r\n      if (_Stage.code == 12000) {\r\n        cc.director.loadScene(\"Home\")\r\n        console.log('退出房间成功');\r\n        this.unschedule(this.T1);\r\n        this.unschedule(this.T2);\r\n      }\r\n    })\r\n  },\r\n\r\n  /**\r\n   * 切换金币的\r\n   */\r\n  radioButtonClicked: function (toggle) {\r\n    var index = this.radioButton.indexOf(toggle);\r\n    alert(index);\r\n    var title = \"RadioButton\";\r\n    switch (index) {\r\n      case 0:\r\n        title += \"1\";\r\n        break;\r\n      case 1:\r\n        title += \"2\";\r\n        break;\r\n      case 2:\r\n        title += \"3\";\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  /**\r\n * 设置按钮\r\n */\r\n  SetingBox() {\r\n    AddWindow(this.node.parent, this.Setings, 0, 0);\r\n  },\r\n  // 账户数据设置\r\n  SetInfo() {\r\n    Global.loaderUserIcon(Global.DataUsers.UserIcon, this.User_Pic)\r\n    this.User_Name.string = Global.DataUsers.UserName;\r\n    this.User_Id.string = 'ID:' + Global.DataUsers.Login;\r\n    this.GetBaseRoom()\r\n  },\r\n  nSocket() {\r\n    var ws = new WebSocket(Global.DataUsers.wsUrl);\r\n    ws.onopen = (event) => {\r\n      this.unschedule(this.T4);\r\n      console.log(\"サーバー　オペ\");\r\n      if (ws.readyState === WebSocket.OPEN) {\r\n        var room = {\r\n          Code: 101,\r\n          Data: {\r\n            roomId: Global._StageData.Data,\r\n            userId: Global.DataUsers.UserId,\r\n            token: Global.DataUsers.Token,\r\n          }\r\n        };\r\n\r\n        ws.send(JSON.stringify(room));\r\n        console.log(\"WebSocket 房间...！\");\r\n      } else {\r\n        console.log(\"WebSocket 准备好房间卫星发射...！\");\r\n      }\r\n    };\r\n    ws.onmessage = (event) => {\r\n      console.log(\"サーバーのメッセージ: \" + event.data);\r\n      let aData = JSON.parse(event.data).Data.Status\r\n      let UserID = JSON.parse(event.data).Data.UserID\r\n      let Floor = JSON.parse(event.data).Data.Floor\r\n      this.GetStatus(aData, UserID, Floor, ws)\r\n    };\r\n    ws.onerror = (event) => {\r\n      console.log(\"メッセージ エッロ！！\");\r\n      // this.schedule(function () {\r\n      //   // 这里的 this 指向 component\r\n      //   this.doSomething();\r\n      // }, 1, 99, 0);\r\n    };\r\n    ws.onclose = (event) => {\r\n      console.log(\"サーバー　オフ.\");\r\n      // this.nSocketTime()\r\n    };\r\n\r\n  },\r\n\r\n\r\n  GetStatus(x, u, f, ws) { //sk里面的id\r\n    switch (x) {\r\n      case 0:\r\n        console.log('什么宝物都没有')\r\n        break;\r\n      case 1:\r\n        console.log('有人参战')\r\n        break;\r\n      case 2:\r\n        console.log('有人观战')\r\n        break;\r\n      case 3:\r\n        console.log('准备战斗')\r\n        break;\r\n      case 4:\r\n        console.log('取消准备')\r\n        break;\r\n      case 5:\r\n        console.log('开始游戏')\r\n        this.startTime.stop()\r\n        this.timeStartSource.play()\r\n        this.scheduleOnce(() => {\r\n          this.bombTimeSource.play()\r\n        }, 1)\r\n\r\n        this.Prepare()\r\n        this.CalculateGold()\r\n        this.ButtonType(1)\r\n        break;\r\n      case 6:\r\n        console.log('上一层楼')\r\n        this.Prepare()\r\n        Global.GameRoomData.forEach((v, i) => {\r\n          console.log('移动其他玩家的棋子')\r\n          if (v.UserId == u && v.UserId != Global.DataUsers.UserId) {\r\n            //设置人物位置数据\r\n            this.moveToPlayer((i + 2), (15 - v.CurrentFloor));\r\n            this.CalculateGold()\r\n          }\r\n        })\r\n        break;\r\n      case 7:\r\n        console.log('停住')\r\n        if (u == Global.DataUsers.UserId) {\r\n          this.IsStop = 1\r\n        }\r\n        break;\r\n      case 8:\r\n        console.log('退出游戏')\r\n        break;\r\n      case 9:\r\n        this.ButtonType(2)\r\n        console.log('游戏结束')\r\n        this.Prepare()\r\n        this.scheduleOnce(() => {\r\n          // 这里的 this 指向 component\r\n          this.Bomfn(x, f)\r\n        }, 4);\r\n        break;\r\n      case 10:\r\n        console.log('解散房间')\r\n        ws.close()\r\n        break;\r\n      case 11:\r\n        this.aAnimationTimes()\r\n        this.ButtonType(2)\r\n        this.Prepare()  //获取爆炸倒计时\r\n        console.log('要爆炸了')\r\n        break;\r\n      case 12:\r\n        console.log('爆炸了')\r\n      \r\n        this.bom = f\r\n        this.aAnimationBom()\r\n        break;\r\n      case 13:\r\n        console.log('没死人')\r\n        this.aAnimationTimesOver()\r\n        this.ButtonType(1)\r\n        this.Prepare()\r\n        break;\r\n      case 14:\r\n        console.log('开始失败重新倒计时')\r\n        this.Prepare()\r\n        break;\r\n      case 15:\r\n        console.log('未准备的更改为观战')\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  //动画1\r\n  aAnimationTimes() {\r\n    let aAnimation1 = this.anim.play();\r\n    aAnimation1.repeatCount = 1;\r\n    this.anim1.runAction(cc.sequence(\r\n      cc.delayTime(0.1),\r\n      cc.fadeIn(0.5),\r\n      cc.delayTime(1),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ));\r\n  },\r\n  aAnimationBom() {\r\n    this.bombTime.play()\r\n    let aAnimation1 = this.animbom.play();\r\n    aAnimation1.repeatCount = 1;\r\n    this.anim2.runAction(cc.sequence(\r\n      cc.delayTime(0.5),\r\n      cc.fadeIn(1),\r\n      cc.delayTime(1),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ))\r\n    this.scheduleOnce(() => {\r\n      //咸鱼在当前的爆炸层\r\n      const arr = [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4]\r\n      for (let i = 11; i > 1; i--) {\r\n        let gid = this.Player.getTileGIDAt(i, arr[this.bom - 1]);\r\n        if (gid != 0) {\r\n          this.Player.removeTileAt(i, arr[this.bom - 1]);\r\n          this.Player.setTileGID(37, i, arr[this.bom - 1], 37);\r\n        }\r\n        //爆炸的楼层 \r\n        this.LayerOne.setTileGID(40, (i + 1), arr[(this.bom - 2)], 40);\r\n      }\r\n    }, 2.2);\r\n  },\r\n  aAnimationTimesOver() {\r\n    let aAnimation1 = this.animOver.play();\r\n    aAnimation1.repeatCount = 1;\r\n    this.anim3.runAction(cc.sequence(\r\n      cc.delayTime(0),\r\n      cc.fadeIn(0.5),\r\n      cc.delayTime(0),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ));\r\n\r\n  },\r\n  //1 释放按钮  2 禁止按钮 && this.IsStop != 1\r\n  ButtonType(a) {\r\n    if (a == 1 && this.IsStop != 1) {\r\n      this.GotoUp.interactable = true;\r\n      this.StopUp.interactable = true;\r\n    }\r\n    if (a == 2) {\r\n      this.GotoUp.interactable = false;\r\n      this.StopUp.interactable = false;\r\n    }\r\n  },\r\n  Bomfn(x, f) {\r\n    let dot = false;\r\n    let _f;\r\n    /***\r\n     * 爆炸的输赢逻辑\r\n     */\r\n    if (this.bom != 0) {\r\n      Global.GameRoomData.forEach((v, i) => {\r\n        _f = this.bom - 1;\r\n        v.CurrentFloor == _f ? this.n1++ : ''\r\n        v.CurrentFloor == this.bom ? this.n2++ : ''\r\n        i < 1 ? dot = true : ''\r\n      })\r\n      if (dot && this.xFloor == this.bom) {\r\n        console.log(this.xFloor)\r\n        //如果上一层没有人就赢了  否则 输了\r\n        if (this.n1 != 0) { //后面有人就输了\r\n          console.log('你输了')\r\n          this.WinLoseData(2)\r\n          return;\r\n        } else {\r\n          this.WinLoseData(1)\r\n          console.log('你赢了')\r\n          return;\r\n        }\r\n      }\r\n      if (dot && this.xFloor == _f) {\r\n        if (this.n2 > 0) { //你前面有人\r\n          this.WinLoseData(1)\r\n          console.log('就赢了2')\r\n          return;\r\n        }\r\n      }\r\n      if (dot && this.xFloor != this.bom && this.n2 == 0 && this.n1 == 0) {\r\n        this.WinLoseData(1)\r\n        console.log('你赢了3')\r\n      } else {\r\n        this.WinLoseData(2)\r\n        console.log('你输了3')\r\n      }\r\n    }\r\n    /***\r\n     * 没爆炸的逻辑\r\n     * 爆発の階段　bomb　　\r\n     * 状態階段ｘ\r\n     */\r\n\r\n    if (this.bom == 0 && x == 9) {\r\n      //位置  人物坐标  瓦片位置\r\n      if (this.xFloor == f) {\r\n        this.WinLoseData(1)\r\n        console.log('你赢了')\r\n      } else {\r\n        console.log('你输了2')\r\n        this.WinLoseData(2)\r\n      }\r\n    }\r\n\r\n  },\r\n  WinLoseData(states) {\r\n    let _data = {\r\n      token: Global.DataUsers.Token,\r\n      userid: Global.DataUsers.UserId,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/GetThunderTradesByThunderRoomID\", _data, e => {\r\n      let _e = JSON.parse(e);\r\n      let lists = _e.object.List\r\n\r\n      lists.forEach((v, i) => {\r\n        if (v.UserID == Global.DataUsers.UserId) {\r\n          //设置人物位置数据\r\n          if (states == 1) {\r\n            this.loaderViewWin(v.PlusAmount)\r\n            this.gameWin.play()\r\n          }\r\n          if (states == 2) {\r\n            this.loaderViewWinLost(v.PlusAmount)\r\n            this.gameOver.play()\r\n          }\r\n        }\r\n\r\n      })\r\n    })\r\n  },\r\n  update(dt) {\r\n\r\n  },\r\n});\r\n// console.log(this.Maps.getMapSize()) //getMapSize 设置地图大小。\r\n// console.log(this.Maps.setMapSize()) //setMapSize 设置地图大小。\r\n// console.log(this.Maps.getTileSize()) //getTileSize 获取地图背景中 tile 元素的大小。\r\n// console.log(this.Maps.setTileSize()) //setTileSize 设置地图背景中 tile 元素的大小。\r\n// console.log(this.Maps.getMapOrientation()) //getMapOrientation 获取地图方向。\r\n// console.log(this.Maps.setMapOrientation()) //setMapOrientation 设置地图方向。\r\n// console.log(this.Maps.getObjectGroups()) //getObjectGroups 获取所有的对象层。\r\n// console.log(this.Maps.getProperties()) //getProperties 获取地图的属性。\r\n// console.log(this.Maps.setProperties()) //setProperties 设置地图的属性。\r\n// console.log(this.Maps.allLayers()) //allLayers 返回包含所有 layer 的数组。\r\n// console.log(this.Maps.getLayer(\"roles\")) //getLayer 获取指定名称的 layer。\r\n// console.log(this.Maps.getObjectGroup(\"roles\")); //getObjectGroup 获取指定的 TMXObjectGroup。\r\n// console.log(this.Maps.getProperty()) //getProperty 通过属性名称，获取指定的属性。\r\n// console.log(this.Maps.getPropertiesForGID()) //getPropertiesForGID 通过 GID ，获取指定的属性。\r\n// console.log(this.Maps.update()) //update 如果该组件启用，则每帧调用 update。\r\n// console.log(this.Maps.lateUpdate()) //lateUpdate 如果该组件启用，则每帧调用 LateUpdate。\r\n\r\n// console.log(this.Player.getLayerName()) //getLayerName 获取层的名称。\r\n// console.log(this.Player.SetLayerName()) //getLayerName 获取层的名称。\r\n// console.log(this.Player.getProperty()) //getProperty 获取指定属性名的值。\r\n// console.log(this.Player.getPositionAt(0,0)) //getPositionAt 获取指定 tile 的像素坐标。\r\n// console.log(this.Player.removeTileAt()) //removeTileAt 删除指定坐标上的 tile。\r\n// console.log(this.Player.setTileGID(2, 14)) //setTileGID 设置给定坐标的 tile 的 gid (gid = tile 全局 id)， tile 的 GID 可以使用方法 “tileGIDAt” 来获得。如果一个 tile 已经放在那个位置，那么它将被删除。\r\n// console.log(this.Player.getTileGIDAt(2,14)) //getTileGIDAt 通过给定的 tile 坐标、flags（可选）返回 tile 的 GID. 如果它返回 0，则表示该 tile 为空。该方法要求 tile 地图之前没有被释放过(如：没有调用过layer.releaseMap()).\r\n// console.log(this.Player.getTileAt(2,14)) //getTileAt 通过指定的 tile 坐标获取对应的 tile(Sprite)。 返回的 tile(Sprite) 应是已经添加到 TMXLayer，请不要重复添加。 这个 tile(Sprite) 如同其他的 Sprite 一样，可以旋转、缩放、翻转、透明化、设置颜色等。 你可以通过调用以下方法来对它进行删除:layer.removeChild(sprite, cleanup); 或 layer.removeTileAt(cc.v2(x,y));\r\n// console.log(this.Player.releaseMap()) //releaseMap 从内存中释放包含 tile 位置信息的地图。除了在运行时想要知道 tiles 的位置信息外，你都可安全的调用此方法。如果你之后还要调用 layer.tileGIDAt(), 请不要释放地图.\r\n// console.log(this.Player.setContentSize()) //setContentSize 设置未转换的 layer 大小。\r\n// console.log(this.Player.getTexture()) //getTexture 获取纹理。\r\n// console.log(this.Player.setTexture()) //setTexture 设置纹理。\r\n// console.log(this.Player.setTileOpacity()) //setTileOpacity 设置所有 Tile 的透明度\r\n// console.log(this.Player.getLayerSize()) //getLayerSize 获得层大小。\r\n// console.log(this.Player.setLayerSize()) //setLayerSize 设置层大小。\r\n// console.log(this.Player.getMapTileSize()) //getMapTileSize 获取 tile 的大小( tile 的大小可能会有所不同)。\r\n// console.log(this.Player.setMapTileSize()) //setMapTileSize 设置 tile 的大小。\r\n// console.log(this.Player.getTiles()) // getTiles 获取地图 tiles。\r\n// console.log(this.Player.setTiles()) //setTiles 设置地图 tiles\r\n// console.log(this.Player.getTileSet()) //getTileSet 获取 layer 的 Tileset 信息。\r\n// console.log(this.Player.setTileSet()) //  setTileSet 设置 layer 的 Tileset 信息。\r\n// console.log(this.Player.getLayerOrientation()) //getLayerOrientation 获取 Layer 方向(同地图方向)。\r\n// console.log(this.Player.setLayerOrientation()) //setLayerOrientation 设置 Layer 方向(同地图方向)。\r\n// console.log(this.Player.getProperties()) //getProperties 获取 layer 的属性，可以使用 Tiled 编辑器添加属性。\r\n// console.log(this.Player.setProperties()) //setProperties 设置层属性。\r\n","\r\nimport { GetUserDatas } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        GetHallMsgUrl: '/caileigame/GetHallMsg',           //%.38获取大厅消息\r\n        AddFollowUrl: '/caileigame/AddFollow',             //%.39大厅关注\r\n        DelFollowUrl: '/caileigame/DelFollow',             //%.40大厅取消关注\r\n        AddMyMsgUrl: '/caileigame/AddMyMsg',               //% 41大厅发送消息\r\n        AddWithdrawalUrl: '/caileigame/AddWithdrawal',     //%.42金币转增\r\n        scrollContent: cc.ScrollView,\r\n        scrollContentRight: cc.ScrollView,\r\n        GoldWindow: cc.Node,\r\n        SaveId: cc.Label,\r\n        SaveIdGive: '',\r\n        GiveGold: cc.EditBox,\r\n        hasGold: cc.Label,\r\n        RichTextGold: cc.RichText,\r\n        User_Name: cc.Label,\r\n        User_Id: cc.Label,\r\n        User_Pic: cc.Sprite,\r\n        User_Gold: cc.Label,\r\n        present: cc.Button,\r\n        addMsgs: cc.EditBox,\r\n        addMsgsBtn: cc.Button, oldID: ''\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // 账户数据设置\r\n    SetInfo() {\r\n        this.User_Name.string = Global.DataUsers.UserName\r\n        this.User_Id.string = 'ID:' + Global.DataUsers.Login\r\n        this.User_Gold.string = Global.DataUsers.Balance\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.User_Pic)\r\n        this.GetHallMsgFn()\r\n    },\r\n    onLoad() {\r\n        GetUserDatas()\r\n        this.SetInfo()          //设置用户数据\r\n        this.contentLeft = this.scrollContent.content\r\n        this.contentRight = this.scrollContentRight.content\r\n    },\r\n    GetHallMsgFn() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.GetHallMsgUrl, _data, e => {\r\n            let hall = JSON.parse(e)\r\n            if (hall.code == 12000) {\r\n                this.contentLeft.removeAllChildren()\r\n                let hallObj = hall.object\r\n                //msgList大厅消息参数介绍\r\n                let msgLists = hallObj.msgList\r\n                for (const lists of msgLists) {\r\n                    console.log(lists)\r\n                    cc.loader.loadRes(\"/prefab/NodeMsg\", (err, Prefab) => {\r\n                        if (err) {\r\n                            console.log(err)\r\n                            return;\r\n                        }\r\n                        var newNode = cc.instantiate(Prefab);\r\n                        // newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n                        newNode.getChildByName('VIP').getComponentInChildren(cc.Label).string = 'ID:' + lists.UserName\r\n                        newNode.getChildByName('liaotian').getComponentInChildren(cc.Label).string = lists.Msg\r\n\r\n                        let btn1 = newNode.getChildByName('ImgSprite').getComponentsInChildren(cc.Button)\r\n\r\n                        if (lists.Status != 1) {\r\n                            btn1[1].node.scale = 0\r\n                            btn1[0].interactable = false\r\n                        } else {\r\n                            if (lists.IsFollow) {//已关注\r\n                                btn1[0].node.scale = 0\r\n                            }\r\n                            if (!lists.IsFollow) {\r\n                                btn1[1].node.scale = 0\r\n                            }\r\n\r\n                            this.oldID = lists.UserId\r\n                            btn1[1].node.on(cc.Node.EventType.TOUCH_START, event => {\r\n                                // console.log( newNode.getChildByName('ImgSprite').getComponentInChildren(cc.Button).normalSprite)\r\n                                // console.log(new cc.SpriteFrame(cc.url.raw(\"resources/news/ysc.png\")))\r\n                                // console.log('已经关注！')\r\n                                this.DelFollow(lists.UserId) //发送关注的id\r\n                                btn1[0].node.scale = 1\r\n                                btn1[1].node.scale = 0\r\n                            })\r\n                            btn1[0].node.on(cc.Node.EventType.TOUCH_START, event => {\r\n                                // console.log('这是真的还没关注')\r\n                                this.SaveUser(lists.UserId)\r\n                                btn1[0].node.scale = 0\r\n                                btn1[1].node.scale = 1\r\n                            })\r\n\r\n                        }\r\n                        this.contentLeft.addChild(newNode);\r\n                        console.log(newNode.getChildByName('ImgSprite').getComponentsInChildren(cc.Button))\r\n\r\n                        // let _newNode = cc.find(\"sl/winText\", newNode)\r\n                        // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n                    });\r\n                }\r\n\r\n                //msgFollowList 关注用户列表参数介绍\r\n                let msgFollowList = hallObj.msgFollowList\r\n                for (const msg of msgFollowList) {\r\n                    console.log(msg)\r\n                    cc.loader.loadRes(\"/prefab/RightNode\", (err, Prefab) => {\r\n                        if (err) {\r\n                            console.log(err)\r\n                            return;\r\n                        }\r\n                        var newNode = cc.instantiate(Prefab);\r\n                        // newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n                        newNode.getChildByName('OSprite').getComponentInChildren(cc.Label).string = 'ID:' + msg.UserName\r\n                        newNode.getChildByName('zhuanzhang').on(cc.Node.EventType.TOUCH_END, event => {\r\n                            // 金币转正弹窗\r\n                            this.GoldWindow.scale = 1\r\n                            this.SaveIdGive = msg.UserName\r\n                            this.SaveId.string = 'ID:' + msg.UserName\r\n                            this.hasGold.string = '您当前的金币余额' + this.User_Gold.string + '金币'\r\n                            this.RichTextGold.string = \"您确定转赠<color=#FDC95A>\" + this.GiveGold.string + \"金币</color>给ID：\" + msg.UserName + \"吗？\"\r\n                        })\r\n                        this.contentRight.addChild(newNode);\r\n\r\n                        // let _newNode = cc.find(\"sl/winText\", newNode)\r\n                        // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                console.log('cuow');\r\n\r\n            }\r\n\r\n        })\r\n    },\r\n    //关注用户\r\n    SaveUser(oid) {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                FollowUserID: oid\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.AddFollowUrl, _data, e => {\r\n            let AddFollowObj = JSON.parse(e)\r\n            this.GetHallMsgFn()\r\n            // console.log(AddFollowObj)\r\n        })\r\n    },\r\n    //关注用户\r\n    DelFollow(oid) {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                FollowUserID: oid\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.DelFollowUrl, _data, e => {\r\n            let AddFollowObj = JSON.parse(e)\r\n            this.GetHallMsgFn()\r\n            // console.log(AddFollowObj)\r\n        })\r\n    },\r\n    //转赠金币\r\n    Withdrawal() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                AgentID: this.oldID,\r\n                Money: this.GiveGold.string\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.AddWithdrawalUrl, _data, e => {\r\n            let AddWithdrawal = JSON.parse(e)\r\n            if (AddWithdrawal.code == 12000) {\r\n                this.GoldWindow.scale = 0\r\n            }\r\n            Global.alertWindw(AddWithdrawal.message)\r\n            // console.log(AddWithdrawal)\r\n        })\r\n    },\r\n    start() {\r\n\r\n    },\r\n    SaveGolds() {\r\n        if (this.User_Gold.string < this.GiveGold.string) {\r\n            this.present.interactable = false\r\n            return;\r\n        } else {\r\n            this.present.interactable = false\r\n        }\r\n        if (this.GiveGold.string > 0) {\r\n            this.present.interactable = true\r\n        }\r\n        this.RichTextGold.string = \"您确定转赠<color=#FDC95A>\" + this.GiveGold.string + \"金币</color>给\" + this.SaveId.string + \"吗？\"\r\n\r\n    },\r\n    closeBtn() {\r\n        this.GoldWindow.scale = 0\r\n    },\r\n    AddMyMsgs() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                Msg: this.addMsgs.string\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.AddMyMsgUrl, _data, e => {\r\n            let AddWithdrawal = JSON.parse(e)\r\n            Global.alertWindw(AddWithdrawal.message)\r\n            this.GetHallMsgFn()\r\n            this.addMsgs.string = ''\r\n            this.addMsgsBtn.interactable = false\r\n            // console.log(AddWithdrawal)\r\n        })\r\n    },\r\n    changeAddMyMsg() {\r\n        if (this.addMsgs.string) {\r\n            this.addMsgsBtn.interactable = true\r\n        } else {\r\n            this.addMsgsBtn.interactable = false\r\n        }\r\n    }\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        moneybk: cc.Node,\r\n        radioTabPay: {\r\n            default: [],\r\n            type: cc.Toggle\r\n        },\r\n        PayTypeID: 0,\r\n        object: ''\r\n    },\r\n    onLoad() {\r\n        GetUserDatas()\r\n        if (Global.DataUsers!=null) {\r\n            this.PayList()\r\n        }\r\n    },\r\n    start() {\r\n      \r\n    },\r\n    PayList() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            Channel: ''\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Transaction/GetPayList\", _data, e => {\r\n            this.object = JSON.parse(e).object\r\n\r\n            for (let i = 0; i < this.object.length; i++) {\r\n                this.radioTabPay[i].node.scale = 1\r\n                // console.log(this.radioTabPay[i].node.getChildByName('mLabel'));\r\n                this.radioTabPay[i].node.getChildByName('mLabel').getComponent(cc.Label).string = this.object[i].MerchantName\r\n                Global.loaderUserIcon(this.object[i].Icon, this.radioTabPay[i].node.getChildByName('mSprite').getComponent(cc.Sprite))\r\n\r\n                for (const iterator of this.object[i].Moneys) {\r\n                    Global.loadPre('jbpre', fab => {\r\n                        let PayTypeID = this.object[i].PayTypeID\r\n                        fab.getChildByName('jbLabel').getComponent(cc.Label).string = iterator.Gold + '金币'\r\n                        fab.getChildByName('jbm').getComponent(cc.Label).string = '￥' + iterator.Money\r\n                        fab.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                            this.SavePay(iterator.Gold, PayTypeID)\r\n                        })\r\n                        this.moneybk.addChild(fab);\r\n                    })\r\n\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        })\r\n    },\r\n\r\n    SavePay(money, PayTypeID) {\r\n        console.log(money, PayTypeID);\r\n        // window.location.href=\"http://www.baidu.com\"\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        if (PayTypeID != 0) {\r\n            let _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                Money: money,\r\n                PayTypeID: PayTypeID,\r\n                Channel: ''\r\n            }\r\n            Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Transaction/Pay\", _data, e => {\r\n                var div = document.createElement(\"div\");\r\n                div.className = 'wojiuzhidaohuigai'\r\n                div.innerHTML = JSON.parse(e).object\r\n                document.body.appendChild(div);\r\n                document.PayForm.submit();\r\n\r\n                this.scheduleOnce(function () {\r\n                    document.getElementsByClassName('wojiuzhidaohuigai')[0].remove()\r\n                }, 2);\r\n\r\n                return\r\n                // window.location.href = JSON.parse(e).code_url\r\n            })\r\n        }\r\n\r\n    },\r\n    radioTabs(toggle) {\r\n        this.moneybk.removeAllChildren();\r\n        var index = this.radioTabPay.indexOf(toggle);\r\n        switch (index) {\r\n            case 0:\r\n                console.log('0')\r\n                this.PayTypeID = this.object[0].PayTypeID\r\n                for (const iterator of this.object[0].Moneys) {\r\n                    cc.loader.loadRes(\"/prefab/money\", (err, prefab) => {\r\n                        var newNode = cc.instantiate(prefab);\r\n                        newNode.getComponentInChildren(cc.Label).string = iterator\r\n                        newNode.index_target = iterator\r\n                        newNode.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                            // console.log(event.target.index_target);\r\n                            this.SavePay(event.target.index_target)\r\n                        })\r\n                        this.moneybk.addChild(newNode);\r\n                    });\r\n                }\r\n                break;\r\n            case 1:\r\n                console.log('1')\r\n                this.prefabMoney(1)\r\n                break;\r\n            case 2:\r\n                console.log('2')\r\n                this.PayTypeID = this.object[2].PayTypeID\r\n                for (const iterator of this.object[2].Moneys) {\r\n                    cc.loader.loadRes(\"/prefab/money\", (err, prefab) => {\r\n                        var newNode = cc.instantiate(prefab);\r\n                        newNode.getComponentInChildren(cc.Label).string = iterator\r\n                        newNode.index_target = iterator\r\n                        newNode.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                            // console.log(event.target.index_target);\r\n                            this.SavePay(event.target.index_target)\r\n                        })\r\n                        this.moneybk.addChild(newNode);\r\n                    });\r\n                }\r\n                break;\r\n            case 3:\r\n                console.log('3')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    prefabMoney(n) {\r\n        this.PayTypeID = this.object[n].PayTypeID\r\n        for (const iterator of this.object[n].Moneys) {\r\n            cc.loader.loadRes(\"/prefab/money\", (err, prefab) => {\r\n                var newNode = cc.instantiate(prefab);\r\n                newNode.getComponentInChildren(cc.Label).string = iterator\r\n                newNode.index_target = iterator\r\n                newNode.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                    // console.log(event.target.index_target);\r\n                    this.SavePay(event.target.index_target)\r\n                })\r\n                this.moneybk.addChild(newNode);\r\n            });\r\n        }\r\n    }\r\n    // update (dt) {},\r\n});\r\n","import {GetUserDatas} from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        pointer: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        pointerButton: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        pointerTitle: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        SaveNumber: 0,           //存盘id\r\n        pointerText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        speed: 20,\r\n        sssNumber: 0, //目标数字\r\n        Winners: cc.Node, //获奖名单\r\n        TheWinningRecord: cc.Node, //获奖记录\r\n        TheWinningRecordWindow: cc.Node, //获奖记录窗口\r\n        PigCardLise: cc.Node,\r\n        PigList: {\r\n            default: [],\r\n            type: cc.Toggle\r\n        },\r\n        radioButton: {\r\n            default: [],\r\n            type: cc.Toggle\r\n        },\r\n        Roundabout: {\r\n            get: function () {\r\n                return this._Roundabout;\r\n            },\r\n            set: function (value) {\r\n                this._Roundabout = value;\r\n            }\r\n        },\r\n        _objectList: {\r\n            get: function () {\r\n                return this._objectLists;\r\n            },\r\n            set: function (value) {\r\n                this._objectLists = value;\r\n            }\r\n        },\r\n        User_Glod: cc.Label,\r\n        PigArray: [],\r\n        LottleList: cc.ScrollView,\r\n        runtime: 0,  //已经被旋转的角度\r\n        ShowBoxWindow: cc.Node,\r\n        run: 10,\r\n        sim: 5,\r\n        startBtn: cc.Button,\r\n        winNode: cc.Node\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.User_Glod.string = Global.DataUsers.Balance;\r\n        this.loadUserPointer()\r\n        this.GetRoundaboutRecord()   //先加载一次 顺序就对了\r\n    },\r\n    onLoad() {\r\n        this.SetInfo()\r\n\r\n        // console.log(360 / 9);\r\n\r\n        // console.log(this.pointer.node.rotation = this.pointer.node.rotation + 40);\r\n\r\n\r\n        // this.scheduleOnce( ()=> {\r\n        //     this.sssNumber = this.sssNumber+1\r\n        //     console.log('我操？');\r\n\r\n        // }, 5);\r\n\r\n\r\n        // console.log(this.sssNumber);\r\n\r\n\r\n    },\r\n\r\n    loadUserPointer() {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetRoundabout\", _data, e => {\r\n            let _UserPointer = JSON.parse(e);\r\n            console.log(_UserPointer);\r\n            // UserRanking 排行榜\r\n            let _UserRanking = _UserPointer.UserRanking\r\n            //UserCharacter 用户有什么人物\r\n            let _UserCharacter = _UserPointer.UserCharacter\r\n            if (_UserPointer.code = 12000) {\r\n                // this.eggNumber.string = _UserPointer.UserOpportunity\r\n                this.PigListType(_UserCharacter)\r\n                // this.PigList\r\n                this.RankingMsg(_UserRanking)\r\n            }\r\n            //RoundaboutInfo 转盘信息\r\n            let _Roundabout = _UserPointer.Roundabout\r\n            this.Roundabout = _Roundabout\r\n\r\n            let _object = _UserPointer.object\r\n            this._objectList = _object\r\n            this.radioButtonClicked(this.radioButton[0])\r\n        })\r\n    },\r\n    //抽到的东西\r\n    RankingMsg(_UserRanking) {\r\n        for (const iterator of _UserRanking) {\r\n            var node = new cc.Node('Sprite');\r\n            var RichText = node.addComponent(cc.RichText);\r\n            RichText.string = '<color=#0fffff>恭喜 ' + iterator.UserDisplayName + ' 获得</color><color=#ffff00>' + iterator.Prize + '</c>'\r\n            RichText.fontSize = 24\r\n            RichText.lineHeight = 37\r\n            if (this.Winners.getChildren().length > 2) {\r\n                break\r\n            } else {\r\n                this.Winners.addChild(node)\r\n            }\r\n        }\r\n    },\r\n    //猪\r\n    PigListType(_UserCharacter) {\r\n        this.PigList.forEach((iterator, index) => {\r\n            if (_UserCharacter[index].CharactersNumber < 1) {\r\n                iterator.getComponent(cc.Button).interactable = false\r\n            }\r\n            iterator.node.getChildByName('PigNum').getComponent(cc.Label).string = _UserCharacter[index].CharactersNumber;\r\n        });\r\n    },\r\n\r\n\r\n    GetRoundaboutRecord() {\r\n        this.LottleList.content.removeAllChildren()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            PageIndex: 1,\r\n            PageSize: 10\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetRoundaboutRecord\", _data, e => {\r\n            let _GetRound = JSON.parse(e);\r\n            console.log(_GetRound);\r\n            if (_GetRound.code == 12000) {\r\n                this._GetRounds(_GetRound)\r\n            }\r\n        })\r\n    },\r\n    _GetRounds(_GetRound) {\r\n        for (const iterator of _GetRound.list) {\r\n            cc.loader.loadRes(\"/prefab/Lottery\", (err, Prefab) => {\r\n                if (err) {\r\n                    console.log(err)\r\n                    return;\r\n                }\r\n                let newNode = cc.instantiate(Prefab)\r\n                let taskPic = newNode.getChildByName('taskPic').getComponent(cc.Sprite)\r\n                let btn = newNode.getChildByName('btn')\r\n                this.loaderUserIcon(iterator.Path, taskPic)\r\n                newNode.getChildByName('text').getComponent(cc.Label).string = iterator.RoundaboutTypeName\r\n                newNode.getChildByName('text2').getComponent(cc.Label).string = iterator.DetailedTypeName\r\n                newNode.getChildByName('prizeNum').getChildByName('time').getComponent(cc.Label).string = iterator.Time\r\n                this.LottleList.content.addChild(newNode)\r\n            })\r\n        }\r\n    },\r\n    //下面的切换列表\r\n    radioButtonClicked: function (toggle) {\r\n        var index = this.radioButton.indexOf(toggle);\r\n        // console.log(toggle);\r\n        switch (index) {\r\n            case 0:\r\n                //5卡\r\n                this.GetPointerUrl(index)\r\n                break;\r\n            case 1:\r\n                //6卡\r\n                this.GetPointerUrl(index)\r\n                break;\r\n            case 2:\r\n                //7卡\r\n                this.GetPointerUrl(index)\r\n                break;\r\n            case 3:\r\n                //7卡\r\n                this.GetPointerUrl(index)\r\n                break;\r\n            case 4:\r\n                //7卡\r\n                this.GetPointerUrl(index)\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    GetPointerUrl(index) {\r\n        this.pointerTitle.string = this._objectList[index].Conditions\r\n        this.SaveNumber = this._objectList[index].RoundaboutType\r\n        this.loaderUserIcon(this.Roundabout[index].Path, this.pointer)\r\n        for (let i = 0; i < this.PigList.length; i++) {\r\n            this.PigList[i].isChecked = false;\r\n            if (i < this.SaveNumber) {\r\n                //if 没有卡片的 就不选中\r\n                if (this.PigList[i].node.getChildByName('PigNum').getComponent(cc.Label).string > 0) {\r\n                    this.PigList[i].isChecked = true\r\n                    this.PigList[i].interactable = true\r\n                }\r\n                // console.log(this.PigList[i].isChecked);\r\n            } else {\r\n                //自动干掉选择\r\n                this.PigList[i].isChecked = false;\r\n                this.PigList[i].interactable = false\r\n            }\r\n        }\r\n        // console.log(this._objectList[index]);\r\n        // console.log(this.Roundabout[index].Path);\r\n    },\r\n    loaderUserIcon(mo, nSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            nSprite.spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    //炸弹\r\n    GoPigDial() {\r\n        cc.director.loadScene('PigHome')\r\n    },\r\n    TheWinningRecordFn(e, num) {\r\n        this.TheWinningRecordWindow.scale = num\r\n        if (num == 1) {\r\n            this.GetRoundaboutRecord()\r\n        }\r\n    },\r\n    PigCardLiseFn(e, num) {\r\n        this.PigCardLise.scale = num\r\n    },\r\n    //选择小猪卡片\r\n    selectPig(toggle) {\r\n        var index = this.PigList.indexOf(toggle);\r\n        let n = 0;\r\n        this.PigList.forEach((ele, i) => {\r\n            console.log(ele.isChecked);\r\n            if (ele.isChecked) {\r\n                n++\r\n            }\r\n        });\r\n        if (n == this.SaveNumber) {\r\n            console.log('有' + this.SaveNumber + '个');\r\n            this.PigList.forEach((ele, i) => {\r\n                if (!ele.isChecked) {\r\n                    ele.interactable = false\r\n                }\r\n            });\r\n        } else {\r\n            this.PigList.forEach((ele, i) => {\r\n                if (!ele.isChecked) {\r\n                    ele.interactable = true\r\n                }\r\n            });\r\n        }\r\n    },\r\n    //抽奖发送\r\n    loadMsgPointer(str) {\r\n        for (const radio of this.radioButton) {\r\n            radio.interactable = false\r\n        }\r\n\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            VCode: str,\r\n            Type: this.SaveNumber\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/LuckDraw\", _data, e => {\r\n            let _pointer = JSON.parse(e);\r\n            console.log(_pointer);\r\n            if (_pointer.code == 12000) {\r\n                this.pointerTitle.string = this.pointerTitle.string - 1\r\n                console.log(_pointer.prize.path);\r\n                console.log(_pointer.prize.prompt);\r\n                this.turntableStart(_pointer.prize.prizeType)\r\n            }\r\n\r\n        })\r\n    },\r\n    /**\r\n     * 下面是转盘专用\r\n     */\r\n\r\n    //转盘旋转功能\r\n    turntableFn() {\r\n        this.startBtn.interactable = false;\r\n        this.PigArray = []\r\n        this.PigList.forEach((ele, index) => {\r\n            // console.log(ele.isChecked);\r\n            ele.isChecked ? this.PigArray.push(index + 1) : '';\r\n        });\r\n        console.log(this.PigArray.toString());\r\n        if (this.PigArray.length < this.SaveNumber) {\r\n            this.closeWinNode(1)\r\n            this.startBtn.interactable = true\r\n            return\r\n        }\r\n        this.loadMsgPointer(this.PigArray.toString())\r\n\r\n    },\r\n    //转盘停止功能\r\n    turntableStop() { },\r\n    //转盘初始化数据\r\n    turntableStart(numberSave) {\r\n        // 创建一个移动动作\r\n        // var rotateTo = cc.rotateTo(持续时间, 旋转角度X，旋转角度Y);\r\n        // var actionBy = cc.rotateBy(持续时间, 旋转角度X，旋转角度Y);\r\n        // var actionBy = cc.rotateBy(2, 360 * 5).easing(cc.easeCubicActionOut());\r\n\r\n        // 旋转的剩下80 280+40 是娃娃 \r\n\r\n        // 移动40 金币x10\r\n\r\n        // 移动80 答题卡\r\n\r\n        // 移动120 炸弹\r\n\r\n        // 移动160 再来一次\r\n\r\n        // 移动 200 扫雷卡\r\n\r\n        // 移动240 话费30\r\n\r\n        // 移动280 谢谢\r\n\r\n        // 移动320 娃娃一套\r\n\r\n        // 移动 360 京东卡\r\n\r\n\r\n        let a1 = parseInt(Math.random() * 35 + 25)\r\n        // let a2 = parseInt(Math.random() * 35 + 105)\r\n        let a3 = parseInt(Math.random() * 35 + 64)\r\n        let a4 = parseInt(Math.random() * 35 + 145)\r\n        let a5 = parseInt(Math.random() * 35 + 260)\r\n        let a6 = parseInt(Math.random() * 35 + 105)\r\n        // console.log('----------上次的角度------------');\r\n        // console.log(this.runtime);\r\n        // console.log('----------这次的角度------------');\r\n        // console.log(this.runtime + a3);\r\n        // 1金币\r\n        // 2人物\r\n        // 3答题卡\r\n        // 4再抽一次奖\r\n        // 5谢谢参与\r\n        // 6小猪佩奇砸金蛋机会\r\n        let sim = this.sim\r\n        let run = this.run\r\n        switch (numberSave) {\r\n            case 1:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a1)).easing(cc.easeCubicActionOut());\r\n                this.runtime = 360 - a1\r\n                // 执行动作\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'bit')\r\n                //显示获奖信息\r\n                break;\r\n            case 2:\r\n                // var actionBy = cc.rotateBy(sim, 360 * run + 40).easing(cc.easeCubicActionOut());\r\n                // // 执行动作\r\n                // this.pointer.node.runAction(actionBy);\r\n\r\n                break;\r\n            case 3:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a3)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a3\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'datika')\r\n                break;\r\n            case 4:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a4)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a4\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'next')\r\n                break;\r\n            case 5:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a5)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a5\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'xiexie')\r\n\r\n                break;\r\n            case 6:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a6)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a6\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'zhadan')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        // 停止一个动作\r\n        // node.stopAction(action);\r\n        // 停止所有动作\r\n        // node.stopAllActions();\r\n    },\r\n    ShowBox(num, img) {\r\n        if (num == 1 || num == 2 || num == 4 || num == 5) {\r\n            this.ShowBoxWindow.getChildByName('queding').setPosition(cc.v2(0, -216))\r\n            this.ShowBoxWindow.getChildByName('liji').scale = 0\r\n        }\r\n        if (num == 3 || num == 6) {\r\n            this.ShowBoxWindow.getChildByName('queding').setPosition(cc.v2(-146, -216))\r\n            this.ShowBoxWindow.getChildByName('liji').scale = 1\r\n            if (num == 3) {\r\n                this.ShowBoxWindow.getChildByName('liji').on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('QuestionsStart')\r\n                })\r\n            }\r\n            if (num == 6) {\r\n                this.ShowBoxWindow.getChildByName('liji').on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('PigHome')\r\n                })\r\n            }\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.ShowBoxWindow.scale = 1\r\n            this.startBtn.interactable = true\r\n            for (const radio of this.radioButton) {\r\n                radio.interactable = true\r\n            }\r\n        }, this.sim);\r\n\r\n        cc.loader.loadRes(\"/Qus/\" + img, (err, spriteFrame) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            this.ShowBoxWindow.getChildByName('nSprite').getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame)\r\n        })\r\n\r\n\r\n    },\r\n    closeShowBoxWindow() {\r\n        this.ShowBoxWindow.scale = 0\r\n    },\r\n    closeWinNode(num) {\r\n        this.winNode.scale = num\r\n    }\r\n\r\n})\r\n\r\n\r\n\r\n\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport {GetUserDatas} from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        taskWindow: cc.Node,                   //   任务窗口\r\n\r\n        taskListView: cc.ScrollView,           //   任务列表\r\n\r\n        accomplishTaskWindow: cc.Node,         //   完成任务\r\n\r\n        everydaySignIn: cc.Node,               //   每日签到\r\n\r\n        accomplishEverydaySignIn: cc.Node,     //   签到成功\r\n\r\n        accompBtn: cc.Button,                  //   签到按钮\r\n\r\n        ruleWindow: cc.Node,                   //   游戏规则\r\n\r\n        hintWindow: cc.Node,                   //   提示窗口\r\n\r\n        getEggbtn: cc.Button,                  //   砸蛋按钮\r\n\r\n        eggAnima: cc.Animation,                //   鸡蛋动画\r\n\r\n        chuiziAnima: cc.Animation,             //   垂子动画\r\n\r\n        GetEggPig: cc.Node,                      //获得饺子的窗口\r\n\r\n        eggNumber: cc.Label,\r\n\r\n        everyDay: {\r\n            default: [],\r\n            type: cc.Node\r\n        },\r\n        PigList: {\r\n            default: [],\r\n            type: cc.Node\r\n        },\r\n        //uid 名字 头像\r\n        User_Name: cc.Label,\r\n        User_Id: cc.Label,\r\n        UserPic: cc.Sprite,\r\n\r\n        Winners: cc.Node,                       //获奖名单\r\n        PigText: 0, //记录蛋蛋\r\n\r\n        ViewWeb: cc.WebView\r\n    },\r\n    //用户数据\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.User_Name.string = Global.DataUsers.UserName;\r\n        this.User_Id.string = 'ID:' + Global.DataUsers.Login;\r\n        this.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.GetLstUserCharacterInfo()\r\n        this.getView()\r\n    },\r\n    loaderUserIcon(mo, nSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            nSprite.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    loadRes(newNode, picName) {\r\n        cc.loader.loadRes(\"/Qus/\" + picName, function (err, spriteFrame) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame);\r\n        });\r\n    },\r\n    onLoad() {\r\n        this.SetInfo()\r\n\r\n        // let egg = cc.director.getScene().getChildByName('Canvas').getChildByName('egg').getComponent(cc.Animation)\r\n        // let chuizi = cc.director.getScene().getChildByName('Canvas').getChildByName('chuizi').getComponent(cc.Animation)\r\n        // egg.play()\r\n        // chuizi.play()\r\n        // console.log(egg);\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    ruleWindowBtn(e,num) {\r\n        this.ruleWindow.scale = num\r\n    },\r\n\r\n    //获奖名单\r\n    //鸡蛋动画\r\n    //点击砸蛋\r\n    //规则书名\r\n    //音乐\r\n    //返回\r\n    // 每日任务\r\n    openTask() {\r\n        this.taskWindow.scale = 1\r\n        this.GetLstCharacterCondition()\r\n    },\r\n    closeTask() {\r\n        this.taskWindow.scale = 0\r\n    },\r\n    closeTaskWin() {\r\n        this.accomplishTaskWindow.scale = 0\r\n        this.GetLstCharacterCondition()  //关闭再拉去数据\r\n        this.GetLstUserCharacterInfo()\r\n    },\r\n    // 每日签到\r\n    openEveryday() {\r\n        this.GetSignIn()\r\n        this.everydaySignIn.scale = 1\r\n    },\r\n    closeEveryday() {\r\n        this.everydaySignIn.scale = 0\r\n    },\r\n    closeEverydayPir() {\r\n        this.GetSignIn()\r\n        this.accomplishEverydaySignIn.scale = 0\r\n    },\r\n    // 分享\r\n\r\n    //转盘\r\n    GoPigDial() {\r\n        cc.director.loadScene('PigDial')\r\n    },\r\n    //猪的卡片操作\r\n\r\n    //获取任务列表\r\n    GetLstCharacterCondition() {\r\n        this.taskListView.content.removeAllChildren()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetLstCharacterCondition\", _data, e => {\r\n            let _task = JSON.parse(e);\r\n\r\n            // console.log(_task.object)\r\n\r\n            for (const iterator of _task.object) {\r\n                this.loadPre(iterator)\r\n            }\r\n        })\r\n    },\r\n    loadPre(iterator) {\r\n        cc.loader.loadRes(\"/prefab/taskList\", (err, Prefab) => {\r\n            if (err) {\r\n                console.log(err)\r\n                return;\r\n            }\r\n            var newNode = cc.instantiate(Prefab)\r\n            var taskPic = newNode.getChildByName('taskPic')\r\n            var btn = newNode.getChildByName('btn')\r\n            newNode.getChildByName('title').getComponent(cc.Label).string = iterator.Name\r\n            newNode.getChildByName('text').getComponent(cc.Label).string = iterator.Introduction\r\n            newNode.getChildByName('prize').getComponent(cc.Label).string = iterator.Reward\r\n            newNode.getChildByName('prizeNum').getComponent(cc.Label).string = `${iterator.Total}/${iterator.Condition}`\r\n\r\n            if (iterator.Status == 100) {\r\n                // 2 前往\r\n                // 100领取奖品\r\n                // 0已领取\r\n                this.loadRes(btn, 'lingqu')\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    this.ReceiveCondition(iterator.Type)\r\n                })\r\n            }\r\n            if (iterator.Status == 2) {\r\n                this.RuleCode(btn, iterator)\r\n            }\r\n            if (iterator.Status == 0) {\r\n                this.loadRes(btn, 'yilingqu')\r\n                btn.getComponent(cc.Button).interactable = false\r\n            }\r\n            this.loaderUserIcon(iterator.Icon, taskPic)\r\n            this.taskListView.content.addChild(newNode)\r\n\r\n        })\r\n\r\n\r\n    },\r\n    RuleCode(btn, iterator) {\r\n\r\n        switch (iterator.RuleCode) {\r\n            case 'rotarydraw':\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    // console.log('转盘抽奖');\r\n                })\r\n                break;\r\n            case 'jisudatitransaction1':\r\n                // console.log('极速答题');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('QuestionsStart')\r\n                })\r\n                break;\r\n            case 'jisudatitransaction0':\r\n                // console.log('极速答题');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('QuestionsStart')\r\n                })\r\n                break;\r\n            case 'paileitransaction1':\r\n                // console.log('排雷先锋');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('GameStart')\r\n                })\r\n                break;\r\n            case 'paileitransaction0':\r\n                // console.log('排雷先锋');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('GameStart')\r\n                })\r\n                break;\r\n            case 'invitingFriends':\r\n                // console.log(\"邀请好友并注册\");\r\n                break;\r\n            case 'accumulativeRecharge':\r\n                // console.log(\"累积充值\");\r\n                break;\r\n            case 'recharge':\r\n                // console.log('首次充值');\r\n                break;\r\n            case 'signIn':\r\n                // console.log('每日签到');\r\n                break;\r\n            case 'register':\r\n                // console.log('用户注册');\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    //领取 任务\r\n    ReceiveCondition(num) {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            Type: num\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/ReceiveCondition\", _data, e => {\r\n            this.accomplishTaskWindow.scale = 1;\r\n            let _egg = JSON.parse(e);\r\n        })\r\n    },\r\n\r\n\r\n\r\n    //获取签到信息\r\n    GetSignIn() {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/Sign/getsign\", _data, e => {\r\n            let _GetSignIn = JSON.parse(e);\r\n            let _object = _GetSignIn.object\r\n            // console.log(_GetSignIn)\r\n            if (_GetSignIn.IsSign) {\r\n                this.accompBtn.interactable = false\r\n            }\r\n            this.everyDay.forEach((iterator, index) => {\r\n                // console.log(_object[index].Value)\r\n                if (_object[index].IsSign == 1) {\r\n                    iterator.getChildByName('getBox').scale = 1\r\n                }\r\n                iterator.getChildByName('everyDayLabel').getComponent(cc.Label).string = `砸蛋机会x${_object[index].Value}`\r\n            });\r\n        })\r\n    },\r\n\r\n    //签到\r\n    SetSignIn() {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/Sign/signin\", _data, e => {\r\n            let _SetSignIn = JSON.parse(e);\r\n            if (_SetSignIn.code = 12000) {\r\n                this.accomplishEverydaySignIn.scale = 1\r\n            }\r\n        })\r\n    },\r\n    //获取各个列表\r\n    GetLstUserCharacterInfo() {\r\n        this.Winners.removeAllChildren()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetLstUserCharacterInfo\", _data, e => {\r\n            let _GetLst = JSON.parse(e);\r\n            let _object = _GetLst.object\r\n            let _UserRanking = _GetLst.UserRanking\r\n            if (_GetLst.code = 12000) {\r\n                this.eggNumber.string = _GetLst.UserOpportunity\r\n                // this.PigList\r\n                this.PigList.forEach((iterator, index) => {\r\n\r\n                    if (_object[index].CharactersNumber < 1) {\r\n                        iterator.getComponent(cc.Button).interactable = false\r\n                    }\r\n                    iterator.getChildByName('pigNum').getComponent(cc.Label).string = 'x' + _object[index].CharactersNumber;\r\n                });\r\n\r\n                for (const iterator of _UserRanking) {\r\n                    var node = new cc.Node('Sprite');\r\n                    var RichText = node.addComponent(cc.RichText);\r\n                    RichText.string = '<color=#0fffff>恭喜 ' + iterator.UserDisplayName + ' 获得</color><color=#ffff00>' + iterator.Prize + '</c>'\r\n                    RichText.fontSize = 24\r\n                    RichText.lineHeight = 37\r\n                    // console.log(this.Winners.getChildren().length);\r\n\r\n                    if (this.Winners.getChildren().length > 2) {\r\n                        break\r\n                    } else {\r\n                        this.Winners.addChild(node)\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n        })\r\n    },\r\n    radioButtonClicked: function (e, toggle) {\r\n        // console.log(toggle);\r\n        switch (toggle) {\r\n            case 0:\r\n                title += \"1\";\r\n                break;\r\n            case 1:\r\n                title += \"2\";\r\n                break;\r\n            case 2:\r\n                title += \"3\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n\r\n    //炸弹接口\r\n    GetEgg() {\r\n        if (this.eggNumber.string < 1) {\r\n            this.hintWindow.scale = 1\r\n            let win = this.hintWindow.getChildByName('windows')\r\n            win.getChildByName('msg').getComponent(cc.Label).string = '还没有砸蛋机会哦~!做任务吧！'\r\n            win.getChildByName('gotask').scaleX = 1\r\n            win.getChildByName('kanseru').scaleX = 1\r\n            win.getChildByName('queren').scaleX = 0\r\n            return;\r\n        }\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/QuailEggs\", _data, e => {\r\n            let _egg = JSON.parse(e);\r\n            this.eggNumber.string = this.eggNumber.string - 1\r\n            this.getEggbtn.interactable = false\r\n            // console.log(_egg.IsWinning)\r\n            if (_egg.IsWinning == 0) {\r\n                this.PigText = _egg.IsWinning\r\n                this.chuiziAnima.play()\r\n                this.chuiziAnima.on('finished', this.onFinished, this);\r\n\r\n            }\r\n            if (_egg.IsWinning == 1) {\r\n                this.PigText = _egg.IsWinning\r\n                this.chuiziAnima.play()\r\n                this.chuiziAnima.on('finished', this.onFinished, this);\r\n            }\r\n        })\r\n    },\r\n    onFinished() {\r\n        this.eggAnima.play()\r\n        this.eggAnima.on('finished', this.openThisEgg, this);\r\n    },\r\n    openThisEgg() {\r\n        this.scheduleOnce(function () {\r\n            // 这里的 this 指向 component\r\n            if (this.PigText == 0) {\r\n                this.hintWindow.scale = 1\r\n            }\r\n            if (this.PigText == 1) {\r\n                this.GetEggPig.scale = 1\r\n            }\r\n            this.getEggbtn.interactable = true\r\n            this.eggAnima.stop()\r\n        }, 0.2);\r\n\r\n    },\r\n    closeThisEgg() {\r\n        this.hintWindow.scale = 0\r\n    },\r\n    //去任务\r\n    GoTask() {\r\n        this.hintWindow.scale = 0\r\n        this.openTask()\r\n    },\r\n    GetEggPigFn() {\r\n        this.GetEggPig.scale = 0\r\n        this.GetLstUserCharacterInfo()\r\n    },\r\n    getView() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n\r\n            // console.log(json.object.circleUrl);\r\n            // console.log(this.ViewWeb);\r\n            // WebView.url = json.object.circleUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId\r\n            // WebView.url = 'http://localhost:6667/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId\r\n            this.ViewWeb.url = 'http://192.168.1.106:802/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 7\r\n            console.log(this.ViewWeb.url)\r\n            console.log('--------------------------------------------------')\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas } from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        Gold: cc.Label,\r\n        UserName: cc.Label,\r\n        UserPic: cc.Node,\r\n        UserID: cc.Label,\r\n        // 余额不足\r\n        moneyEnough: cc.Node,\r\n        ClientLog: cc.Node,\r\n        Regulation: cc.Node,\r\n        RankingList: cc.Node,\r\n        RankingLists: cc.ScrollView,\r\n        GameLists: cc.ScrollView,\r\n        misNumber: 0,\r\n        misWindow: cc.Node,  //答题卡\r\n        ViewWeb: cc.WebView\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.SetInfo()\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.UserName.string = Global.DataUsers.UserName;\r\n        this.UserID.string = 'ID:' + Global.DataUsers.Login;\r\n        this.Gold.string = Global.DataUsers.Balance;\r\n        this.getView()\r\n        \r\n        this.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.ClientLogs()\r\n        this.regulations()\r\n        this.GetlsexamprofitrankingInfo()\r\n        this.getvouchernumber()\r\n    },\r\n    closeMoneyEnough() {\r\n        this.moneyEnough.scale = 0\r\n    },\r\n    // ゲーム　スタート\r\n    GameStart() {\r\n        if (this.Gold.string < 100) {\r\n            this.moneyEnough.scale = 1\r\n            return\r\n        }\r\n\r\n        if (this.misNumber != 0) {\r\n            this.misWindow.scale = 1\r\n            return\r\n        }\r\n        this.GetInroom(0)\r\n    },\r\n    closemisWindow() {\r\n        this.misWindow.scale = 0\r\n    },\r\n    //积分卡\r\n    getvouchernumber() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getvouchernumber\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                this.misNumber = mid.Number\r\n            }\r\n        })\r\n    },\r\n    //りんっぐ\r\n    GetInroom(e, sms) {\r\n        console.log(sms);\r\n\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0,\r\n            IsAnswerSheet: sms  //是否使用答题卡（0:否，1：是）\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/inroom\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                Global.questions = mid.Data\r\n                console.log(Global.questions)\r\n                cc.director.loadScene('Questions')\r\n            }\r\n        })\r\n    },\r\n    //积分池\r\n\r\n    //游戏记录\r\n    ClientLogs() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getexamgamerecords\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid.object)\r\n                mid.object.forEach((element, index) => {\r\n                    console.log((index % 2));\r\n                    console.log('排位-' + index);\r\n\r\n                    this.loaderFab(element, (index % 2), index)\r\n                });\r\n            }\r\n        })\r\n    },\r\n    loaderFab(mo, index, idx) {\r\n\r\n        var newNode, rangLabel, timeLabel, moneyLabel, moneysLabel\r\n        cc.loader.loadRes(\"/prefab/Sprite2\", (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            console.log(index);\r\n            console.log('排位' + idx);\r\n\r\n            if (index == 0) {\r\n                console.log('index');\r\n                this.loadRes(newNode)\r\n            }\r\n            rangLabel = newNode.getChildByName('rangLabel');\r\n            moneysLabel = newNode.getChildByName('moneysLabel');\r\n            moneyLabel = newNode.getChildByName('moneyLabel');\r\n            timeLabel = newNode.getChildByName('timeLabel');\r\n            moneysLabel.getComponent(cc.Label).string = mo.RecyclingAmount\r\n            rangLabel.getComponent(cc.Label).string = mo.Ranking\r\n            moneyLabel.getComponent(cc.Label).string = mo.TradesAmount\r\n            timeLabel.getComponent(cc.Label).string = this.getDate(mo.ExitTime * 1000)\r\n            this.GameLists.content.addChild(newNode)\r\n        });\r\n    },\r\n    // getDate(date) {\r\n    //     var t = new Date(date).toLocaleString();\r\n    //     return t;\r\n    // },\r\n    getDate(date1) {\r\n        // 比如需要这样的格式 yyyy-MM-dd hh:mm:ss\r\n        var date = new Date(date1);\r\n        let Y = date.getFullYear() + '-',\r\n            M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-',\r\n            D = date.getDate(),\r\n            h = date.getHours(),\r\n            m = date.getMinutes(),\r\n            s = date.getSeconds();\r\n        return (Y + M + D + ' ' + this.minutes(h) + ':' + this.minutes(m) + ':' + this.minutes(s))\r\n        // 输出结果：2014-04-23 18:55:49\r\n    },\r\n    minutes(h) {\r\n        let _s = h + ''\r\n        if (_s.length == 1) {\r\n            let _h = '0' + _s\r\n            return _h\r\n        } else {\r\n            return _s\r\n        }\r\n    },\r\n    loadRes(newNode) {\r\n        cc.loader.loadRes(\"/Qus/bg2\", function (err, spriteFrame) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame);\r\n        });\r\n    },\r\n    //加载网络资源\r\n    loaderUserIcon(mo, RanSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            // RanSprite.getComponent(cc.sprite).spriteFrame.setTexture(tex);\r\n            RanSprite.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    //规则\r\n    regulations() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getexamruleinfo\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid.object)\r\n            }\r\n        })\r\n    },\r\n    //邀请\r\n\r\n    // 音乐设置\r\n    winClose(e, num) {\r\n        this.ClientLog.scale = num\r\n    },\r\n    winClose2(e, num) {\r\n        this.Regulation.scale = num\r\n    },\r\n    winClose3(e, num) {\r\n        this.RankingList.scale = num\r\n        if (num == 1) {\r\n            this.GetlsexamprofitrankingInfo()\r\n        }\r\n    },\r\n    GetlsexamprofitrankingInfo() {\r\n        this.RankingLists.content.removeAllChildren()\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getlsexamprofitrankingInfo\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid.object)\r\n                mid.object.forEach((element, index) => {\r\n                    this.loaderRaing(element, (index % 2), index)\r\n                });\r\n            }\r\n        })\r\n    },\r\n    loaderRaing(mo, index, idx) {\r\n        var newNode, rang, timeLabel, moneyLabel, name\r\n        console.log(index);\r\n        console.log('排位' + idx);\r\n        cc.loader.loadRes(\"/prefab/Spriter\", (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            if (index == 1) {\r\n                console.log('index');\r\n                this.loadRes(newNode)\r\n            }\r\n            rang = newNode.getChildByName('rang');\r\n            moneyLabel = newNode.getChildByName('moneyLabel');\r\n            name = newNode.getChildByName('name');\r\n            rang.getComponent(cc.Label).string = mo.Ranking\r\n            moneyLabel.getComponent(cc.Label).string = mo.Profit\r\n            name.getComponent(cc.Label).string = mo.UserName\r\n            this.RankingLists.content.addChild(newNode)\r\n        });\r\n    },\r\n\r\n    getView() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n            console.log(json.object.circleUrl);\r\n            console.log(this.ViewWeb);\r\n            // WebView.url = json.object.circleUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId\r\n            // WebView.url = 'http://localhost:6667/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId\r\n            this.ViewWeb.url = 'http://192.168.1.106:802/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 6\r\n            // console.log(this.ViewWeb.url)\r\n            // console.log('--------------------------------------------------')\r\n        })\r\n    }\r\n\r\n});\r\n","\r\nimport { GetUserDatas } from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n  \r\n        speed: 0.1,\r\n        Gold: cc.Label,\r\n        UserName: cc.Label,\r\n        UserPic: cc.Node,\r\n        UserID: cc.Label,\r\n        titles: cc.Label,\r\n        // 游戏进行中 请等待下一局开始\r\n        // 答题开始\r\n        // ['等待其他玩家', '开始倒计时', '答题倒计时'],\r\n        // 等待其Ta玩家\r\n        StartTime: 0,\r\n        StartTimeLabel: cc.Label,\r\n        StartTimeView: cc.Label,\r\n        SetTimeA: cc.Node,\r\n        horizontal: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        question: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        ExamRoomQuestionID: 0,\r\n        Correct: 0,\r\n        Wrong: 0,\r\n        btnd: cc.Button,\r\n        btnc: cc.Button,\r\n        isCuo: true,\r\n        DengdaiTitle: cc.Label,\r\n        StartTitle: cc.Label,\r\n        ExamRoomGameNumberID: 0,\r\n        CurrentQuestions: 0,  //当前第几题\r\n        errorWin: cc.Node,\r\n        RenNumber: cc.Label,  //人数\r\n        prepareGame: cc.Label, //等待与准备提示\r\n        Annunciate: cc.Label,\r\n        setAmount: cc.Label,\r\n        allAmount: 0, //当前用户金额,\r\n        ObjectList: '',\r\n        RankingLists: cc.Node,\r\n        ten: true,\r\n        // 存储答题\r\n        QusNumber: 0,\r\n        QusNumbertitle: cc.Label,\r\n        scrollViewLcc: cc.ScrollView,\r\n        overRaing: cc.Node,\r\n        moneyEnough: cc.Node, //充值\r\n        myMonney: cc.Label,   //自己的收益\r\n        RankingNumber: cc.Label\r\n \r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.SetInfo()\r\n        // this._updataFillStart(this.horizontal, dt);\r\n\r\n        console.log('this.horizontal.fillStart');\r\n        console.log(this.horizontal.fillStart);\r\n\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.UserName.string = Global.DataUsers.UserName;\r\n        this.UserID.string = 'ID:' + Global.DataUsers.Login;\r\n        this.Gold.string = Global.DataUsers.Balance;\r\n        this.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.Getroom()\r\n        if (Global.DataUsers.wsUrl != 'undefined') {\r\n            this.nSocket()\r\n        }\r\n    },\r\n\r\n    // ゲーム　スタート\r\n    // GameStart() {\r\n    // cc.director.loadScene('Questions')\r\n    //     this.GetInroom()\r\n    // },\r\n    //りんっぐ\r\n    Getroom() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            roomnumberid: Global.questions\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getroom\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                this.unschedule(this.T2);\r\n                this.RankingList(mid)\r\n                console.log(mid)\r\n                // console.log(mid.object.CurrDateTime)\r\n                // console.log(mid.object.List);\r\n                // console.log(mid.object.Question.QuestionUrl);\r\n                // console.log(mid.object.Question.ExamRoomQuestionID);\r\n                // console.log(mid.object.Question.IsWrongAnswer);\r\n                // console.log(mid.object.IsMatch); //（0：参战，1：观战）\r\n                // console.log(mid.object.ExamRoomGameNumberID);\r\n                this.Gold.string = mid.Balance\r\n                if (this.QusNumber == mid.object.Question.QuestionsTotalsNumber) {\r\n                    //答完十题\r\n                    this.prepareGame.node.scale = 1\r\n                    this.prepareGame.string = '答题完成！请等待其他玩家！'\r\n                    this.question.node.scale = 0\r\n                    this.ten = false\r\n                } else {\r\n                    console.log(mid.object.Question.CurrentQuestions);\r\n                    console.log('__________________________');\r\n                    this._updataFillStart(this.horizontal, this.QusNumber + 1);\r\n                }\r\n                this.RenNumber.string = mid.object.List.length\r\n                this.ExamRoomGameNumberID = mid.object.ExamRoomGameNumberID\r\n                //观战\r\n                if (mid.object.IsMatch == 0) {\r\n                    this.DengdaiTitle.node.scale = 0\r\n                    if (mid.object.Question.IsEndAnswer == 1) {\r\n                        console.log('答wan啦');\r\n                    }\r\n                    if (mid.object.Status == 1) {\r\n                        this.prepareGame.node.scale = 1\r\n                        this.StartTime = mid.object.EndTimestamp - mid.object.CurrDateTime\r\n                        this.StartTimeLabel.string = this.StartTime\r\n                        this.GameTimeOuts(this.StartTimeLabel)\r\n                        console.log('准备考试');\r\n                        this.titles.string = '等待其Ta玩家'\r\n                        this.prepareGame.string = '正在等待各个玩家就位！'\r\n                    }\r\n                    if (mid.object.Status == 2) {\r\n                        if (this.isCuo && this.ten) {\r\n                            this.btnd.interactable = true\r\n                            this.btnc.interactable = true\r\n                        } else {\r\n                            console.log(this.isCuo);\r\n                        }\r\n                        // http://examimgftp.hd4yx0.cn/UploadFile/Exam/20180510/14/3714dcef-0d73-45ef-8668-60a74404e4f8.png\r\n                        // cc.loader.load('http://examimgftp.hd4yx0.cn/UploadFile/Exam/20180510/14/3714dcef-0d73-45ef-8668-60a74404e4f8.png', function (err, tex) {\r\n                        if (this.ten) {\r\n                            this.prepareGame.node.scale = 0\r\n                            this.loadImg(mid.object.Question.QuestionUrl)\r\n                        }\r\n                        this.CurrentQuestions = mid.object.Question.CurrentQuestions  //当前第几题\r\n                        this.QusNumbertitle.string = '第' + mid.object.Question.CurrentQuestions + '/' + mid.object.Question.QuestionsTotalsNumber + '题'\r\n                        this.SetTimeA.scale = 0\r\n                        this.StartTime = mid.object.EndTimestamp - mid.object.CurrDateTime\r\n                        this.StartTimeView.string = this.StartTime\r\n                        this.GameTimeOuts(this.StartTimeView)\r\n                        this.ExamRoomQuestionID = mid.object.Question.ExamRoomQuestionID\r\n                        this.Correct = mid.object.Question.Correct\r\n                        this.Wrong = mid.object.Question.Wrong\r\n                        console.log('开始考试');\r\n\r\n                    }\r\n                }\r\n                if (mid.object.IsMatch == 1) {\r\n                    console.log('观战---------------------------------------');\r\n                    this.StartTime = mid.object.EndTimestamp - mid.object.CurrDateTime\r\n                    this.StartTimeLabel.string = this.StartTime\r\n                    this.GameTimeOuts(this.StartTimeLabel)\r\n                    this.DengdaiTitle.node.scale = 1\r\n                }\r\n            }\r\n        })\r\n    },\r\n    //下载图片\r\n    loadImg(Url) {\r\n        var _this = this\r\n        cc.loader.load(Url, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            // _this.question.spriteFrame.setTexture(tex);\r\n            var spriteFrame = new cc.SpriteFrame(tex);\r\n            _this.question.spriteFrame = spriteFrame\r\n            _this.question.node.scale = 1\r\n        });\r\n    },\r\n    //倒计时\r\n    GameTimeOuts(sb) {\r\n        this.T2 = () => {\r\n            if (this.StartTime < 1) {\r\n                this.unschedule(this.T2);\r\n                this.Getroom()\r\n            } else {\r\n                // this.unschedule(this.T2);\r\n\r\n                let x = this.StartTime - 1;\r\n                sb.string = x;\r\n                if (this.StartTime < 5) {\r\n                    if (this.ten) {\r\n                        sb.node.color = new cc.Color(255, 0, 0);\r\n                        this.prepareGame.string = '开始答题'\r\n                    }\r\n                } else {\r\n                    sb.node.color = new cc.Color(255, 255, 255);\r\n                \r\n                }\r\n                this.StartTime = x;\r\n            }\r\n        };\r\n        this.schedule(this.T2, 1);\r\n    },\r\n    //游戏一局完成\r\n    GetGameQuestions() {\r\n        this.overRaing.scale = 1;\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomGameNumberID: this.ExamRoomGameNumberID\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getexamroomgamerecords\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid)\r\n                console.log(mid.object[0].Avatar)\r\n                console.log(mid.object[0].AnswerTime)\r\n                console.log(mid.object[0].Profit)\r\n                console.log(mid.object[0].RecyclingAmount)\r\n                console.log(mid.object[0].Ranking)\r\n                console.log(mid.object[0].UserName)\r\n\r\n                for (const iterator of mid.object) {\r\n                    console.log(iterator.Ranking);\r\n                    \r\n                    switch (iterator.Ranking) {\r\n                        case 1:\r\n                            this.SetRaningPreFab(iterator, 'wone', iterator.UserID)\r\n                            break;\r\n                        case 2:\r\n                            this.SetRaningPreFab(iterator, 'wTwo', iterator.UserID)\r\n                            break;\r\n                        case 3:\r\n                            this.SetRaningPreFab(iterator, 'wThree', iterator.UserID)\r\n                            break;\r\n                        default:\r\n                            this.SetRaningPreFab(iterator, 'wDef', iterator.UserID)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n    },\r\n    SetRaningPreFab(mo, fabs, uid) {\r\n        var newNode, wSprite, wLabel, wMoney, wTime, numbers\r\n        cc.loader.loadRes(\"/prefab/\" + fabs, (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            console.log(newNode.getComponent(cc.Sprite));\r\n            wSprite = newNode.getChildByName('nSprite');\r\n            wLabel = newNode.getChildByName('wLabel');\r\n            wMoney = newNode.getChildByName('wMoney');\r\n            wTime = newNode.getChildByName('wTime');\r\n            if (uid == Global.DataUsers.UserId) {\r\n                this.RankingNumber.string = mo.Ranking\r\n                this.myMonney.string = '+' + mo.RecyclingAmount\r\n                this.loadRes(newNode)\r\n            }\r\n            if (newNode.getChildByName('number')) {\r\n                numbers = newNode.getChildByName('number');\r\n                numbers.getComponent(cc.Label).string = mo.Ranking\r\n            }\r\n            let nSprite_child = wSprite.getChildByName('nSprite_child')\r\n            this.loaderUserIcon(mo.Avatar, nSprite_child)\r\n            // console.log(RanSprite.getComponent(cc.Sprite));\r\n            wLabel.getComponent(cc.Label).string = mo.UserName\r\n            wMoney.getComponent(cc.Label).string = '+' + mo.RecyclingAmount\r\n            wTime.getComponent(cc.Label).string = parseInt(mo.AnswerTime) + 's'\r\n            this.scrollViewLcc.content.addChild(newNode)\r\n        });\r\n\r\n\r\n    },\r\n    loadRes(newNode) {\r\n        cc.loader.loadRes(\"/Qus/my\", function (err, spriteFrame) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame);\r\n        });\r\n    },\r\n    rmrematch() { //再来一局\r\n        this.overRaing.scale = 0;\r\n        this.scrollViewLcc.content.removeAllChildren() //默认true\r\n        this.GameStart()\r\n    },\r\n    // ゲーム　スタート\r\n    GameStart() {\r\n        if (this.Gold.string < 100) {\r\n            this.moneyEnough.scale = 1\r\n            return\r\n        }\r\n        this.GetInroom()\r\n    },\r\n\r\n    //りんっぐ\r\n    GetInroom() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/inroom\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                Global.questions = mid.Data\r\n                console.log(Global.questions)\r\n                this.Getroom()\r\n                //初始化数据\r\n                this.QusNumber = 0\r\n                this.question.node.scale = 0\r\n                this.prepareGame.node.scale = 1\r\n                this.prepareGame.string = '正在等待各个玩家就位！'\r\n                this.SetTimeA.scale = 1\r\n                this.btnd.interactable = false\r\n                this.btnc.interactable = false\r\n                this.ten = true\r\n                this.isCuo = true\r\n                this.nSocket()\r\n            }\r\n        })\r\n    },\r\n    //正确的\r\n    Corrects() {\r\n        this.SaveCorrects(this.Correct)\r\n    },\r\n    //错误的\r\n    Wrongs() {\r\n        this.SaveCorrects(this.Wrong)\r\n    },\r\n    //发送答案exam/answer\r\n    SaveCorrects(ass) {\r\n        this.btnd.interactable = false\r\n        this.btnc.interactable = false\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            roomnumberid: Global.questions,\r\n            ExamRoomQuestionID: this.ExamRoomQuestionID,\r\n            Answer: ass\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/answer\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid)\r\n\r\n                if (mid.object.IsWrongAnswer == 1) {\r\n                    this.btnd.interactable = false\r\n                    this.btnc.interactable = false\r\n                    console.log('答错啦');\r\n                    this.isCuo = false\r\n                    this.errorWin.scale = 1\r\n                    this.scheduleOnce(() => {\r\n                        this.btnd.interactable = true\r\n                        this.btnc.interactable = true\r\n                        this.errorWin.scale = 0;\r\n                    }, 2);\r\n                }\r\n                if (mid.object.IsWrongAnswer == 0) {\r\n                    this.unschedule(this.T2);\r\n                    this.isCuo = true\r\n                    this.Getroom()\r\n                    this.QusNumber = this.QusNumber + 1\r\n                    console.log('答对:' + this.QusNumber);\r\n\r\n                }\r\n            }\r\n        })\r\n    },\r\n    //计算收益和排行榜\r\n    RankingList(mid) {\r\n        if (mid.object.List.length <= 1) {\r\n            return\r\n        }\r\n        let flag = true\r\n        let n = mid.object.List.length\r\n        let objects = mid.object.List\r\n        while (flag) {\r\n            flag = false;\r\n            for (let i = 1; i < n; i++) {\r\n                if (objects[i - 1].Ranking > objects[i].Ranking) {\r\n                    var temp = objects[i - 1];\r\n                    objects[i - 1] = objects[i];\r\n                    objects[i] = temp;\r\n                    this.ObjectList = JSON.parse(JSON.stringify(objects))\r\n                    flag = true;\r\n                } else {\r\n                    //没有重新排序\r\n                    this.ObjectList = JSON.parse(JSON.stringify(objects))\r\n                }\r\n            }\r\n            n--;\r\n        }\r\n        for (let s = this.ObjectList.length; s > 0; s--) {\r\n            var mo = this.ObjectList[s - 1]\r\n            if (s < this.ObjectList.length) {\r\n                let moe = this.ObjectList[s]\r\n                let mo2 = moe.Amount / s\r\n                let mo1 = this.allAmount / s\r\n                let offsetAmount = mo2 + mo1\r\n                mo.innerList = offsetAmount.toFixed(2)\r\n            } else {\r\n                //当前是收益\r\n                let setAmount = mo.Amount / s\r\n                this.allAmount = setAmount  //保存在全部\r\n                mo.innerList = setAmount.toFixed(2)\r\n            }\r\n        }\r\n        this.RankingLists.removeAllChildren();\r\n        for (const iterator of this.ObjectList) {\r\n            if (Global.DataUsers.UserId == iterator.UserID) {\r\n                this.setAmount.string = iterator.innerList\r\n            }\r\n            this.loaderFab(iterator)\r\n        }\r\n    },\r\n    loaderFab(mo) {\r\n        var newNode, RanSprite, RanLabel, RanBoxLabex\r\n        cc.loader.loadRes(\"/prefab/bbx\", (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            RanLabel = cc.find(\"RanIcon/RanLabel\", newNode);\r\n            RanSprite = newNode.getChildByName('RanSprite').getChildByName('nSprite');\r\n            RanBoxLabex = cc.find(\"RanBox/RanBoxLabex\", newNode);\r\n            // console.log(RanSprite.getComponent(cc.Sprite));\r\n            this.loaderUserIcon(mo.Avatar, RanSprite)\r\n            RanLabel.getComponent(cc.Label).string = mo.Ranking\r\n            RanBoxLabex.getComponent(cc.Label).string = mo.innerList\r\n            this.RankingLists.addChild(newNode)\r\n        });\r\n    },\r\n\r\n    loaderUserIcon(mo, RanSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            // RanSprite.getComponent(cc.sprite).spriteFrame.setTexture(tex);\r\n            RanSprite.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    nSocket(ns) {\r\n        console.log(ns);\r\n        \r\n        var ws = new WebSocket(Global.DataUsers.wsUrl);\r\n        if (ns==1) {\r\n            ws.close()\r\n        }\r\n        ws.onopen = (event) => {\r\n            console.log(\"サーバー　オペ\");\r\n            if (ws.readyState === WebSocket.OPEN) {\r\n                var room = {\r\n                    Code: 102,\r\n                    Data: {\r\n                        roomId: Global.questions,\r\n                        userId: Global.DataUsers.UserId,\r\n                        token: Global.DataUsers.Token,\r\n                    }\r\n                };\r\n                ws.send(JSON.stringify(room));\r\n                console.log(\"WebSocket 卫星发射...！\");\r\n            } else {\r\n                console.log(\"WebSocket 准备好卫星发射...！\");\r\n            }\r\n        };\r\n        ws.onmessage = (event) => {\r\n            let evMsg = JSON.parse(event.data)\r\n            if (evMsg.Code == 103) {\r\n                Global.socketMsg = '恭喜玩家' + evMsg.Data.UserDisplayName + '获得' + evMsg.Data.Profit + '金币'\r\n            } else {\r\n                console.log(\"サーバーのメッセージ: \" + event.data);\r\n\r\n            }\r\n\r\n            let aData = JSON.parse(event.data).Data.Status\r\n            let UserID = JSON.parse(event.data).Data.UserID\r\n            // let Floor = JSON.parse(event.data).Data.Floor\r\n            this.GetStatus(aData, UserID, ws)\r\n        };\r\n        ws.onerror = (event) => {\r\n            console.log(\"メッセージ エッロ！！\");\r\n            // this.schedule(function () {\r\n            //   // 这里的 this 指向 component\r\n            //   this.doSomething();\r\n            // }, 1, 99, 0);\r\n        };\r\n        ws.onclose = (event) => {\r\n            console.log(\"サーバー　オフ.\");\r\n        };\r\n\r\n    },\r\n\r\n    GetStatus(x, u, ws) { //sk里面的id\r\n        switch (x) {\r\n            case 0:\r\n                console.log('进入房间')\r\n                break;\r\n            case 1:\r\n                console.log('有人参战')\r\n                this.Getroom()\r\n                break;\r\n            case 2:\r\n                console.log('有人观战')\r\n                this.Getroom()\r\n                break;\r\n            case 3:\r\n                console.log('开始游戏')\r\n                this.Getroom()\r\n                break;\r\n            case 4:\r\n                console.log('推出游戏')\r\n                break;\r\n            case 5:\r\n                console.log('游戏结束')\r\n                this.GetGameQuestions()\r\n                break;\r\n            case 6:\r\n                ws.close()\r\n                console.log('解散房间')\r\n                break;\r\n            case 7:\r\n                console.log('人数不够')\r\n                break;\r\n            case 8:\r\n                console.log('退出游戏')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    goHome() {\r\n        this.nSocket(1)\r\n        cc.director.loadScene('QuestionsStart');\r\n    },\r\n    update(dt) {\r\n\r\n        this.Annunciate.string = Global.socketMsg\r\n    },\r\n\r\n    _updataFillStart: function (sprite, dt) {\r\n        var fillStart = sprite.fillStart;\r\n        // fillStart = fillStart > 0 ? fillStart -= (dt * this.speed) : 1;\r\n        console.log((dt * this.speed));\r\n        sprite.fillStart = (dt * this.speed);\r\n    },\r\n\r\n\r\n\r\n});\r\n","\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    /**\r\n     * 音效设置\r\n     */\r\n    Music: cc.Slider,\r\n    Sounds: cc.Slider,\r\n     \r\n  },\r\n\r\n\r\n  onLoad() {\r\n    // this.scrollView.runAction(cc.moveTo(2, 100, 100));\r\n    // console.log(this.content);\r\n\r\n    // this.content.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n\r\n    //   console.log(event.target);\r\n    //   // console.log(event.target._children[0].getComponent(cc.Label).string);\r\n    //   console.log('Mouse down');\r\n    // }, this);\r\n\r\n    if (Global.Audios == '') {\r\n      Global.Audios = this.node.parent.getComponentInChildren(cc.AudioSource)\r\n    }\r\n\r\n    //音乐设置\r\n    if (cc.sys.localStorage.getItem(\"Mic\") != null) {\r\n      this._updateMusicVolume(cc.sys.localStorage.getItem(\"Mic\"));\r\n      this.Music.progress = cc.sys.localStorage.getItem(\"Mic\");\r\n    } else {\r\n      this._updateMusicVolume(this.Music.progress);\r\n    }\r\n  },\r\n  /**\r\n   * 音乐设置\r\n   * @param {d} progress\r\n   */\r\n  _updateMusicVolume(progress) {\r\n    Global.Audios.volume = progress;\r\n    cc.sys.localStorage.setItem(\"Mic\", progress);\r\n  },\r\n  onSliderHEvent(sender, eventType) {\r\n    this._updateMusicVolume(sender.progress);\r\n  },\r\n  \r\n\r\n  \r\n});\r\n","\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    /**\r\n     * 音效设置\r\n     */\r\n    Music: cc.Slider,\r\n    Sounds: cc.Slider,\r\n    scrollView: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    scrollView2: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    scrollView3: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    spawnCount: 10, // how many items we actually spawn\r\n    totalCount: 0, // how many items we need for the whole list\r\n    itemTemplate: { // item template to instantiate other items\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    addressItem: {\r\n      get: function () {\r\n        return this._addressItem;\r\n      },\r\n      set: function (value) {\r\n        this._addressItem = value;\r\n      }\r\n    },\r\n    /**\r\n     * 省市区按钮\r\n     */\r\n    Sheng: cc.Button,\r\n    ShengID: 0,\r\n    Shi: cc.Button,\r\n    ShiID: 0,\r\n    Qu: cc.Button,\r\n    QuID: 0,\r\n    /**\r\n     * 地址信息\r\n     */\r\n    address: cc.EditBox,\r\n    addressTel: cc.EditBox,\r\n    addressName: cc.EditBox,\r\n    /**\r\n     * 支付信息\r\n     */\r\n    PayTab: cc.Button,            //切换支付宝和银行\r\n    PayCard: cc.Button,           //获取银行信息\r\n    PayCardId: 0,                 //银行ID\r\n    CardNumber: cc.EditBox,       //身份证\r\n    bankCard: cc.EditBox,         //银行卡\r\n    bankCardName: cc.EditBox,     //名字\r\n    CardName: cc.EditBox,         //名字\r\n    alipayCard: cc.EditBox,       //支付宝\r\n    radioButton: {                //切换支付宝银行list\r\n      default: [],\r\n      type: cc.Toggle\r\n    },\r\n    EditBoxList1: cc.Node,        //银行卡页\r\n    EditBoxList2: cc.Node,        //支付宝页\r\n    scrollViewCard: {             //银行滚动list\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    togglePay: cc.Node,\r\n    sign: 1,                     //标示银行和收货地址切换\r\n    signPay: 1,                   //银行和支付宝切换id \r\n\r\n    radioButtonTabs: {\r\n      default: [],\r\n      type: cc.Toggle\r\n    },\r\n    SaveBtn: cc.Button\r\n  },\r\n\r\n\r\n  onLoad() {\r\n    this.items = [];\r\n    this.content = this.scrollView.content;\r\n    this.content2 = this.scrollView2.content;\r\n    this.content3 = this.scrollView3.content;\r\n    Global.GetMessges(obj=>{\r\n      if (obj) {\r\n        Global.addressId = obj[0].ID\r\n        this.address.string = obj[0].DetailAddress\r\n        this.addressName.string = obj[0].contactName\r\n        this.addressTel.string = obj[0].MobilePhone\r\n        this.Sheng.getComponentInChildren(cc.Label).string = obj[0].ProvinceName\r\n        this.Shi.getComponentInChildren(cc.Label).string = obj[0].CityName\r\n        this.Qu.getComponentInChildren(cc.Label).string = obj[0].AreaName\r\n      }\r\n    })\r\n    this.GetPayInfo()\r\n    this.GetBankListPost()\r\n   \r\n    // this.scrollView.runAction(cc.moveTo(2, 100, 100));\r\n    // console.log(this.content);\r\n\r\n    // this.content.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n\r\n    //   console.log(event.target);\r\n    //   // console.log(event.target._children[0].getComponent(cc.Label).string);\r\n    //   console.log('Mouse down');\r\n    // }, this);\r\n\r\n    if (Global.Audios == '') {\r\n      Global.Audios = this.node.parent.getComponentInChildren(cc.AudioSource)\r\n    }\r\n    console.log(Global.clikcMis);\r\n\r\n    //音乐设置\r\n    if (cc.sys.localStorage.getItem(\"Mic\") != null) {\r\n      this._updateMusicVolume(cc.sys.localStorage.getItem(\"Mic\"));\r\n      this.Music.progress = cc.sys.localStorage.getItem(\"Mic\");\r\n    } else {\r\n      this._updateMusicVolume(this.Music.progress);\r\n    }\r\n    if (cc.sys.localStorage.getItem(\"Sou\") != null) {\r\n      this._updateMusicVolume(cc.sys.localStorage.getItem(\"Sou\"));\r\n      this.Sounds.progress = cc.sys.localStorage.getItem(\"Sou\");\r\n    } else {\r\n      this._updateMusicVolume(this.Sounds.progress);\r\n    }\r\n  },\r\n  /**\r\n   * 音乐设置\r\n   * @param {d} progress\r\n   */\r\n  _updateMusicVolume(progress) {\r\n    Global.Audios.volume = progress;\r\n\r\n    cc.sys.localStorage.setItem(\"Mic\", progress);\r\n  },\r\n  onSliderHEvent(sender, eventType) {\r\n    this._updateMusicVolume(sender.progress);\r\n  },\r\n\r\n  _updateAudiosVolume(progress) {\r\n    Global.clikcMis.volume = progress;\r\n    cc.sys.localStorage.setItem(\"Sou\", progress);\r\n  },\r\n  onSliderHEventAudios(sender, eventType) {\r\n    this._updateAudiosVolume(sender.progress);\r\n  },\r\n\r\n\r\n\r\n\r\n  /**\r\n   * 退出登录\r\n   */\r\n  LoginOut() {\r\n    let data = {\r\n      userid: Global.DataUsers.UserId\r\n    }, xhr = cc.loader.getXMLHttpRequest()\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + '/account/logout', data, e => {\r\n      console.log('退出')\r\n      if (e) {\r\n        cc.sys.localStorage.removeItem('SJ')\r\n        cc.director.loadScene('LoginPage')\r\n      }\r\n    })\r\n\r\n  },\r\n\r\n  ShengBotton() {\r\n    this.scrollView.node.scale = 1\r\n    this.scrollView.node.zIndex = 1;\r\n    this.GetAddress(1, e => {\r\n      this.itemclick(e, this.content, 1)\r\n      this.Shi.getComponentInChildren(cc.Label).string = ''\r\n      this.Qu.getComponentInChildren(cc.Label).string = ''\r\n      this.Shi.interactable = false;\r\n      this.Qu.interactable = false;\r\n    })\r\n  },\r\n  ShiBotton() {\r\n    this.scrollView2.node.scale = 1\r\n    this.scrollView2.node.zIndex = 1;\r\n    this.GetAddress(this.ShengID, e => {\r\n      this.itemclick(e, this.content2, 2)\r\n    })\r\n  },\r\n  QuBotton() {\r\n    this.scrollView3.node.zIndex = 1;\r\n    this.scrollView3.node.scale = 1\r\n    this.GetAddress(this.ShiID, e => {\r\n      this.itemclick(e, this.content3, 3)\r\n    })\r\n  },\r\n  GetAddress(pid, fn) {\r\n    console.log(pid)\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Token: Global.DataUsers.Token,\r\n      Userid: Global.DataUsers.UserId,\r\n      ParentID: pid\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/GetLstAreasInfo\", _data, e => {\r\n      fn(e)\r\n    })\r\n\r\n  }\r\n  ,//this.content,this.ShiID\r\n  itemclick(e, content, ParentID) {\r\n    content.removeAllChildren();\r\n    var addressObj = JSON.parse(e).object;\r\n    this.addressItem = JSON.parse(e).object;\r\n    var nodeLabel = new cc.Node('Label');\r\n    var Label = nodeLabel.addComponent(cc.Label);\r\n    for (let i = 0; i < addressObj.length; ++i) { // spawn items, we only need to do this once\r\n      Label.string = addressObj[i].Name;\r\n      Label.fontSize = 20;\r\n      Label.fontSize = 25;\r\n      let item = cc.instantiate(nodeLabel);\r\n      item.index_target = addressObj[i].Areas_ID;\r\n      content.addChild(item);\r\n      this.items.push(item);\r\n      item.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n        console.log(event.target.index_target);\r\n        console.log('Mouse down--------------------------------------------' + addressObj[i].Name);\r\n        if (ParentID == 1) {\r\n          this.scrollView.node.scale = 0;\r\n          this.scrollView.node.zIndex = -1;\r\n          this.Sheng.getComponentInChildren(cc.Label).string = addressObj[i].Name;\r\n          this.ShengID = event.target.index_target;\r\n          this.Shi.interactable = true;\r\n        }\r\n        if (ParentID == 2) {\r\n          this.scrollView2.node.scale = 0;\r\n          this.scrollView2.node.zIndex = -1;\r\n          this.Shi.getComponentInChildren(cc.Label).string = addressObj[i].Name;\r\n          this.ShiID = event.target.index_target;\r\n          this.Qu.interactable = true;\r\n        }\r\n        if (ParentID == 3) {\r\n          this.scrollView3.node.scale = 0;\r\n          this.scrollView3.node.zIndex = -1;\r\n          this.Qu.getComponentInChildren(cc.Label).string = addressObj[i].Name;\r\n          this.QuID = event.target.index_target;\r\n        }\r\n      }, this);\r\n    }\r\n\r\n  }\r\n  ,\r\n  /**\r\n   * 保存信息\r\n   */\r\n  SaveMessges() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    if (this.sign == 2) {\r\n      let _data = {\r\n        Userid: Global.DataUsers.UserId,\r\n        Token: Global.DataUsers.Token,\r\n        ID: 0,\r\n        Province: this.ShengID ? this.ShengID : 0,\r\n        City: this.ShiID ? this.ShiID : 0,\r\n        Area: this.QuID ? this.QuID : 0,\r\n        ProvinceName: this.Sheng.getComponentInChildren(cc.Label).string,\r\n        CityName: this.Shi.getComponentInChildren(cc.Label).string,\r\n        AreaName: this.Qu.getComponentInChildren(cc.Label).string,\r\n        DetailAddress: this.address.string,\r\n        contactName: this.addressName.string,\r\n        MobilePhone: this.addressTel.string,\r\n        isDefault: true\r\n      }\r\n      Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/SaveUserAddress\", _data, e => { })\r\n    }\r\n    if (this.sign == 1) {\r\n      console.info(this.sign)\r\n      if (this.signPay == 1) {\r\n        this.BindAlipayAccount()\r\n      }\r\n      if (this.signPay == 2) {\r\n        this.BindBankCard()\r\n      }\r\n    }\r\n\r\n  },\r\n  // GetMessges() {\r\n  //   let xhr = cc.loader.getXMLHttpRequest()\r\n  //   let _data = {\r\n  //     Userid: Global.DataUsers.UserId,\r\n  //     Token: Global.DataUsers.Token,\r\n  //     PageIndex: 1,\r\n  //     PageSize: 1\r\n  //   }\r\n  //   Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/GetUserAddressList\", _data, e => {\r\n  //     let obj = JSON.parse(e).object\r\n  //     if (obj) {\r\n  //       Global.addressId = obj[0].ID\r\n  //       this.address.string = obj[0].DetailAddress\r\n  //       this.addressName.string = obj[0].contactName\r\n  //       this.addressTel.string = obj[0].MobilePhone\r\n  //       this.Sheng.getComponentInChildren(cc.Label).string = obj[0].ProvinceName\r\n  //       this.Shi.getComponentInChildren(cc.Label).string = obj[0].CityName\r\n  //       this.Qu.getComponentInChildren(cc.Label).string = obj[0].AreaName\r\n  //     }\r\n  //   })\r\n  // },\r\n  // 地址 end\r\n\r\n  /***\r\n   * 支付信息\r\n   */\r\n  //%.17绑定支付宝账号信息\r\n  BindAlipayAccount() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      TrueName: this.CardName.string,\r\n      AlipayAccount: this.alipayCard.string\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/BindAlipayAccount\", _data, e => {\r\n\r\n    })\r\n  },\r\n  //%.18绑定银行卡信息\r\n  BindBankCard() {\r\n    if (this.PayCardId != 0) {\r\n      let xhr = cc.loader.getXMLHttpRequest()\r\n      let _data = {\r\n        Userid: Global.DataUsers.UserId,\r\n        Token: Global.DataUsers.Token,\r\n        AccountName: this.bankCardName.string,\r\n        AccountNumber: this.bankCard.string,\r\n        BankID: this.PayCardId,\r\n        DocumenCode: this.CardNumber.string\r\n      }\r\n      Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/BindBankCard\", _data, e => {\r\n        if (JSON.parse(e).code != 12000) {\r\n          this.alertWindw(JSON.parse(e).message)\r\n        }\r\n        if (JSON.parse(e).code == 12000) {\r\n          this.alertWindw(JSON.parse(e).message)\r\n        }\r\n      })\r\n    } else {\r\n      this.alertWindw('选择银行')\r\n    }\r\n  },\r\n  //%.19获取支付信息\r\n  GetPayInfo() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/GetPayInfo\", _data, e => {\r\n      let _e = JSON.parse(e).object\r\n      this.CardName.string = _e.TrueName\r\n      this.alipayCard.string = _e.AlipayAccount\r\n      this.bankCardName.string = _e.AccountName\r\n      this.bankCard.string = _e.AccountNumber\r\n      this.CardNumber.string = _e.DocumenCode\r\n    })\r\n  },\r\n  //%.20获取银行信息\r\n  GetBankList() {\r\n    this.scrollViewCard.node.scale = 1\r\n    this.scrollViewCard.node.zIndex = 1;\r\n  },\r\n\r\n  GetBankListPost() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/GetBankList\", _data, e => {\r\n      this.scrollViewCard.content.removeAllChildren();\r\n      let addressObj = JSON.parse(e).object;\r\n      let nodeLabel = new cc.Node('Label');\r\n      let Label = nodeLabel.addComponent(cc.Label);\r\n      for (let i = 0; i < addressObj.length; ++i) { // spawn items, we only need to do this once\r\n        Label.string = addressObj[i].EnumDisplayText;\r\n        Label.fontSize = 20;\r\n        Label.fontSize = 25;\r\n        let item = cc.instantiate(nodeLabel);\r\n        item.index_target = addressObj[i].EnumValue;\r\n        this.scrollViewCard.content.addChild(item);\r\n        item.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n          console.log(event.target.index_target);\r\n          // console.log('Mouse down--------------------------------------------' + addressObj[i].EnumDisplayText);\r\n          this.scrollViewCard.node.scale = 0;\r\n          this.scrollViewCard.node.zIndex = -1;\r\n          this.PayCard.getComponentInChildren(cc.Label).string = addressObj[i].EnumDisplayText;\r\n          this.PayCardId = event.target.index_target;\r\n        }, this);\r\n      }\r\n    })\r\n  },\r\n  /**\r\n   * 切换\r\n   */\r\n  radioButtonClicked: function (toggle) {\r\n    var index = this.radioButton.indexOf(toggle);\r\n    switch (index) {\r\n      case 0:\r\n        //支付宝\r\n        this.PayTab.getComponentInChildren(cc.Label).string = '支付宝'\r\n        this.EditBoxList1.scale = 0\r\n        this.EditBoxList2.scale = 1\r\n        this.PayCard.node.scale = 0\r\n        this.togglePay.scale = 0\r\n        this.signPay = 1\r\n        console.log('支付宝')\r\n        break;\r\n      case 1:\r\n        //银行\r\n        this.PayTab.getComponentInChildren(cc.Label).string = '银行'\r\n        this.EditBoxList2.scale = 0\r\n        this.EditBoxList1.scale = 1\r\n        this.PayCard.node.scale = 1\r\n        this.togglePay.scale = 0\r\n        this.signPay = 2\r\n        console.log('银行')\r\n        break;\r\n      case 2:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  radioButtonClickedTab(toggle) {\r\n    var index = this.radioButtonTabs.indexOf(toggle);\r\n    switch (index) {\r\n      case 0:\r\n        // console.log('1')\r\n        break;\r\n      case 1:\r\n        this.sign = 1\r\n        // console.log('账户信息')\r\n        break;\r\n      case 2:\r\n        this.sign = 2\r\n        // console.log('地址信息')\r\n        break;\r\n      case 3:\r\n        // console.log('3')\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  PayTabButton() {\r\n    this.togglePay.scale = 1\r\n  },\r\n  changed() {\r\n    if (this.CardName.string && this.alipayCard.string) {\r\n      this.SaveBtn.interactable = true\r\n    } else {\r\n      this.SaveBtn.interactable = false\r\n    }\r\n\r\n\r\n  },\r\n  CardChanged() {\r\n    if (this.CardNumber.string && this.bankCard.string && this.bankCardName.string) {\r\n      this.SaveBtn.interactable = true\r\n    } else {\r\n      this.SaveBtn.interactable = false\r\n    }\r\n  },\r\n\r\n\r\n  alertWindw(msg) {\r\n    let windowLabel = new cc.Node('Label');\r\n    let wLabel = windowLabel.addComponent(cc.Label);\r\n    wLabel.string = msg\r\n    windowLabel.color = new cc.Color(255, 0, 0)\r\n    windowLabel.zIndex = 999;\r\n    windowLabel.opacity = 0;\r\n    windowLabel.setPosition(cc.p(cc.director.getScene().getChildByName('Canvas').width / 2, cc.director.getScene().getChildByName('Canvas').height / 2))\r\n    cc.director.getScene().addChild(windowLabel)\r\n    windowLabel.runAction(cc.sequence(\r\n      cc.delayTime(0.5),\r\n      cc.fadeIn(0.5),\r\n      cc.delayTime(0.5),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ));\r\n  }\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    SetingsBtn: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    Setings: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    // 设置\r\n    this.SetingsBtn.on(\"touchstart\", this.SetingsFn, this);\r\n  },\r\n  SetingsFn() {\r\n    let Infos = cc.instantiate(this.Setings);\r\n    this.node.addChild(Infos, 104);\r\n    Infos.setPosition(0, 0);\r\n  },\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","\r\nimport { GetUserDatas, LoginTimeOut } from 'GetUserData';\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        GoodesOneList: cc.ScrollView,\r\n        GoodsWindow: cc.Node,\r\n        GoodsTitle: cc.RichText,\r\n        GoodsTitle2: cc.Label,\r\n        GoodsGold: cc.Label,\r\n        GoodsGold2: cc.Label,\r\n        GoodsImg: cc.Sprite,\r\n        J1: cc.Button,\r\n        J2: cc.Button,\r\n        J3: cc.Label,\r\n        SaveBtn: cc.Button,\r\n        User_Name: cc.Label,\r\n        User_Pic: cc.Sprite,\r\n        User_Id: cc.Label,\r\n        User_Gold: cc.Label,\r\n        GoodsNumber: 0,\r\n        GoodsGoldCoin: 0,\r\n        GoodsName: '',\r\n        GoodsID: '',\r\n        ScrollViews: cc.ScrollView,\r\n        ShowRorderBox: cc.Node,\r\n        tishi: cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // 账户数据设置\r\n    SetInfo() {\r\n        this.User_Name.string = Global.DataUsers.UserName\r\n        this.User_Id.string = 'ID:' + Global.DataUsers.Login\r\n        this.User_Gold.string = Global.DataUsers.Balance\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.User_Pic)\r\n        this.getuserorderlist()\r\n        Global.GetMessges(obj => {\r\n            if (obj) {\r\n                Global.addressId = obj[0].ID\r\n            }\r\n        })\r\n    },\r\n    onLoad() {\r\n\r\n\r\n\r\n        // 定义 SizeProvider，这里定义一个全局对象即可，不需要创建对象实例\r\n        var screenSizeProvider = {\r\n            getContentSize: function () {\r\n                return cc.size(cc.visibleRect);\r\n            },\r\n            setContentSize: function (sizeOrX, y) {\r\n                // 不做任何事情\r\n            },\r\n\r\n            _getWidth: function () {\r\n                return this.getContentSize().width;\r\n            },\r\n            _getHeight: function () {\r\n                return this.getContentSize().height;\r\n            },\r\n        };\r\n        //设置用户数据\r\n        this.SetInfo()\r\n    },\r\n\r\n    start() {\r\n        this.ShopMsg()\r\n    },\r\n    ShopMsg() {\r\n        this.GoodesOneList.content.removeAllChildren()\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/shopgoods/getgoodslist\", _data, e => {\r\n            let _e = JSON.parse(e)\r\n            for (const iterator of _e.object) {\r\n                var newNode\r\n                cc.loader.loadRes(\"/prefab/GoodsSprite\", (err, Prefab) => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                        return;\r\n                    }\r\n                    newNode = cc.instantiate(Prefab);\r\n\r\n                    newNode.getChildByName('Title').getComponent(cc.Label).string = iterator.GoodsName\r\n                    newNode.getChildByName('Money').getComponent(cc.Label).string = iterator.GoodsGoldCoin + '金币'\r\n                    newNode.getChildByName('Number').getComponent(cc.Label).string = '剩余' + iterator.GoodsNumber + '件'\r\n\r\n                    newNode.on(cc.Node.EventType.TOUCH_END, e => {\r\n                        this.GoodsNumber = iterator.GoodsNumber\r\n                        this.GoodsGoldCoin = iterator.GoodsGoldCoin\r\n                        this.GoodsName = iterator.GoodsName\r\n                        this.GoodsID = iterator.GoodsID\r\n                        this.openWindowGoods(iterator.GoodsPic, iterator.GoodsMarketPrice)/*图片，金币，件*/\r\n                        this.GoodsWindow.scale = 1\r\n                    })\r\n                    Global.loaderUserIcon(iterator.GoodsPic, newNode.getChildByName('Pic').getComponent(cc.Sprite))\r\n                    this.GoodesOneList.content.addChild(newNode);\r\n                    // this.GoodesOneList.content.setContentSize(100,100)\r\n                    // let _newNode = cc.find(\"sl/winText\", newNode)\r\n                    // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n                });\r\n            }\r\n        })\r\n    }\r\n    ,\r\n    openWindowGoods(pic, gmp) {\r\n        cc.loader.load({ url: pic, type: 'png' }, (err, tex) => {\r\n            // console.log('Should load a texture from RESTful API by specify the type: ' + (tex instanceof cc.Texture2D));\r\n            this.GoodsImg.spriteFrame.setTexture(tex);\r\n        });\r\n        this.GoodsTitle.string = \"您确定支付<color=#FDC95A>\" + this.GoodsGoldCoin + \"金币</color>兑换\" + this.GoodsName\r\n        this.GoodsGold.string = \"您当前余额为\" + this.User_Gold.string + \"金币 \"\r\n        this.GoodsGold2.string = '￥' + gmp\r\n        this.GoodsTitle2.string = this.GoodsName\r\n        if (this.User_Gold.string > this.GoodsGoldCoin) {\r\n            this.SaveBtn.interactable = true\r\n        }\r\n    },\r\n    closeWin() {\r\n        this.GoodsWindow.scale = 0\r\n    },\r\n    J1Fn() {\r\n        if (this.J3.string > 1) {\r\n            this.J3.string--\r\n            this.GoodsTitle.string = \"您确定支付<color=#FDC95A>\" + this.GoodsGoldCoin * this.J3.string + \"金币</color>兑换\" + this.GoodsName\r\n        }\r\n    },\r\n    J2Fn() {\r\n        this.J3.string++\r\n        let n = this.GoodsGoldCoin * this.J3.string\r\n        if (this.J3.string < this.GoodsNumber && n < this.User_Gold.string) {\r\n            this.GoodsTitle.string = \"您确定支付<color=#FDC95A>\" + this.GoodsGoldCoin * this.J3.string + \"金币</color>兑换\" + this.GoodsName\r\n        } else {\r\n            this.J3.string--\r\n        }\r\n    },\r\n    SaveBtnFn() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            GoodsId: this.GoodsID,\r\n            Number: this.J3.string,\r\n            AddressId: Global.addressId\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/shoporder/goodsexchange\", _data, e => {\r\n            let _e = JSON.parse(e)\r\n            if (_e.code == 12000) {\r\n                this.User_Gold.string = this.User_Gold.string - this.GoodsGoldCoin\r\n                this.GoodsWindow.scale = 0\r\n                this.tishi.scale = 1\r\n                this.tishi.getComponentsInChildren(cc.Label)[0].string = '兑换成功'\r\n\r\n                console.log('兑换成功');\r\n            }\r\n\r\n        })\r\n    },\r\n    getuserorderlist() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/shoporder/getuserorderlist\", _data, e => {\r\n            let _e = JSON.parse(e)\r\n            if (_e.code == 12000) {\r\n                for (const iterator of _e.object) {\r\n                    Global.loadPre('record', record => {\r\n                        let Labels = record.getChildByName('sNode').getComponentsInChildren(cc.Label)\r\n                        let Sp = record.getChildByName('sNode').getComponentsInChildren(cc.Sprite)\r\n                        Labels[0].string = iterator.GoodsName\r\n                        Labels[1].string = `快递单号:${iterator.ShippingNo}(${iterator.ExpressName})`\r\n                        Labels[2].string = iterator.GoodsNumber\r\n                        Labels[3].string = iterator.GoodsGoldCoin\r\n                        Labels[4].string = iterator.StrCreateTime\r\n                        Global.loaderUserIcon(iterator.GoodsPic, Sp[1])\r\n                        this.ScrollViews.content.addChild(record)\r\n                    })\r\n                }\r\n\r\n            }\r\n        })\r\n    },\r\n    ShowRorder(e, n) {\r\n        this.ShowRorderBox.scale = n\r\n        if (n == 1) {\r\n            this.ScrollViews.content.removeAllChildren()\r\n            this.getuserorderlist()\r\n        }\r\n    },\r\n    closetishi() {\r\n        this.tishi.scale = 0\r\n    }\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n// import { GetPrefab } from \"GetUserData\";\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    // PhoneView: {\r\n    //   default: null,\r\n    //   type: cc.Prefab\r\n    // }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n  },\r\n  //登陆框移动方法\r\n  Wecher() {\r\n    console.log('微信登陆s')\r\n  },\r\n\r\n  Tel() {\r\n    // console.log(this.node.parent.height)\r\n    // let PhoneViews = cc.instantiate(this.PhoneView);\r\n    // this.node.parent.addChild(PhoneViews, 101);\r\n    // PhoneViews.setPosition(this.node.parent.width, 0);\r\n    // // var ViewWidth = this.node.parent.width / 2 + this.PhoneView.width / 2;\r\n    // var SignInBox = cc.moveBy(0.2, cc.p(-this.node.parent.width, 0));\r\n    // PhoneViews.runAction(SignInBox);\r\n\r\n    this.GetPrefab('SignInTel')\r\n  },\r\n  start() { },\r\n  GetPrefab(fab) {\r\n    cc.loader.loadRes(\"/prefab/\" + fab, (err, Prefab) => {\r\n      if (err) {\r\n        console.log(err)\r\n        return;\r\n      }\r\n      var newNode = cc.instantiate(Prefab);\r\n      // console.info(this.node)\r\n      newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n      cc.director.getScene().addChild(newNode);\r\n      // let _newNode = cc.find(\"sl/winText\", newNode)\r\n      // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n    });\r\n  },\r\n  // update (dt) {},\r\n});\r\n","\r\nimport { verificationPhone } from \"filters\";\r\nimport { GetUserDatas, WeixinLoginTime } from \"GetUserData\";\r\ncc.Class({\r\n  extends: cc.Component,\r\n  properties: {\r\n    //用户手机号控件\r\n    Phone: {\r\n      default: null,\r\n      type: cc.EditBox\r\n    },\r\n    //验证码控件\r\n    SecurityCode: {\r\n      default: null,\r\n      type: cc.EditBox\r\n    },\r\n    // 短信验证码控件\r\n    Messages: {\r\n      default: null,\r\n      type: cc.EditBox\r\n    },\r\n\r\n\r\n    RedLabel: cc.Label,\r\n    GetImgCodes: cc.Sprite,\r\n    //倒计时\r\n    action_times: 60,\r\n    TimesOutBtn: cc.Button,\r\n    TimesOut: cc.Label,\r\n    GetUserDataUrl: \"/account/loginorregister\",\r\n    WebUrl: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    SignWindow: cc.Node,\r\n\r\n    LoginBtn: cc.Button,\r\n\r\n    wxBtn: cc.Node,\r\n    phoneBtn: cc.Node,\r\n    webwxlogin: ''\r\n  },\r\n  RedLabels(str) {\r\n    this.RedLabel.string = str\r\n  },\r\n  LoginList() {\r\n    console.log('加载登陆表');\r\n    let data = {}\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/GetLoginList\", data, e => {\r\n      let code = JSON.parse(e)\r\n      console.log(code.mode);\r\n      this.webwxlogin = code.webwxlogin\r\n      switch (code.mode) {\r\n        case 1:\r\n          this.wxBtn.scale = 1\r\n          this.wxBtn.setPositionX(0)\r\n\r\n          break;\r\n        case 2:\r\n          this.phoneBtn.scale = 1\r\n          this.phoneBtn.setPositionX(0)\r\n\r\n          break;\r\n        case 3:\r\n          this.phoneBtn.scale = 1\r\n          this.wxBtn.scale = 1\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    })\r\n  },\r\n  wxBtnLogin() {\r\n    console.log(this.webwxlogin + '?cbUrl=' + encodeURIComponent(location.href));\r\n    window.location.href = this.webwxlogin + '?cbUrl=' + encodeURIComponent(location.href)\r\n  },\r\n  //信息发射站\r\n  SendMessages(e, c) {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    if (!this.Phone.string) {\r\n      this.RedLabels(\"请输入手机号\")\r\n    } else {\r\n      if (verificationPhone(this.Phone.string) == false) {\r\n        this.RedLabels(\"请输入正确手机号\")\r\n      } else {\r\n        if (c == \"code\") {\r\n          if (!this.SecurityCode.string) {\r\n            this.RedLabels(\"请输入验证码\")\r\n            return;\r\n          }\r\n          let data = {\r\n            \"mobilephone\": this.Phone.string,\r\n            \"imgcode\": this.SecurityCode.string,\r\n            \"clientid\": Global.clientid\r\n          }\r\n          Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/getcode\", data, e => {\r\n            let code = JSON.parse(e)\r\n            if (code.code != 12000) {\r\n              this.RedLabels(code.message)\r\n              return;\r\n            }\r\n            if (code.code == 12000) {\r\n              this.RedLabels(code.message)\r\n              this.TimesOutBtn.interactable = false;\r\n              this.SetTimeOut()\r\n            }\r\n          })\r\n        }\r\n        if (c == \"sub\") {\r\n          if (!this.Messages.string) {\r\n            this.RedLabels(\"请输入短信验证码\");\r\n            return;\r\n          }\r\n          let data = {\r\n            \"mobilephone\": this.Phone.string,\r\n            \"vcode\": this.Messages.string,\r\n            \"code\": \"\",\r\n          }\r\n          Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/loginorregister\", data, e => {\r\n            let _e = JSON.parse(e)\r\n            if (_e.code != 12000) {\r\n              this.RedLabels(_e.message)\r\n              return;\r\n            }\r\n            if (_e.code == 12000) {\r\n              console.log('植入全局数据');\r\n              Global.DataUsers = JSON.parse(JSON.stringify(_e.object)) //植入全局数据\r\n              console.log(Global.DataUsers);\r\n              cc.sys.localStorage.setItem(\"SJ\", encodeURIComponent(JSON.stringify(_e.object)));\r\n              GetUserDatas(1)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  TableChange() {\r\n    if (this.Messages.string > 0 && this.Phone.string) {\r\n      this.LoginBtn.interactable = true\r\n    } else {\r\n      this.LoginBtn.interactable = false\r\n    }\r\n  },\r\n\r\n  // 倒数六十\r\n  SetTimeOut() {\r\n    this.t = function () {\r\n      if (this.action_times < 1) {\r\n        this.action_times = 60;\r\n        this.TimesOut.string = \"获取验证码\"\r\n        this.unschedule(this.t);\r\n        this.TimesOutBtn.interactable = true;\r\n      } else {\r\n        // this.unschedule(this.t);\r\n        // 这里的 this 指向 component\r\n        let x = this.action_times - 1;\r\n        this.TimesOut.string = x;\r\n        this.action_times = x;\r\n      }\r\n\r\n    };\r\n    this.schedule(this.t, 1);\r\n  },\r\n\r\n  CloseViews(e, num) {\r\n    console.log(num);\r\n    this.SignWindow.scale = num\r\n  },\r\n  getQueryString(name) {\r\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n    var r = window.location.search.substr(1).match(reg);\r\n    if (r != null) return decodeURI(r[2]);\r\n    return null;\r\n  },\r\n  onLoad() {\r\n    console.log(\"/执行穿越模式/\");\r\n    this.WebUrlText()  //验证码\r\n    this.LoginList()  //登陆按钮配置\r\n    if (navigator.userAgent.toLowerCase().match(/MicroMessenger/i) == \"micromessenger\") {\r\n      //在微信中打开\r\n      console.log('微信打开了');\r\n      console.log(this.getQueryString('wxtoken'));\r\n      if (this.getQueryString('wxtoken') != null) {\r\n        console.log('??');\r\n        WeixinLoginTime(this.getQueryString('wxtoken'))\r\n        Global.weixin = 1\r\n\r\n        // cc.director.loadScene('Home')\r\n      }\r\n    }\r\n    if (cc.sys.localStorage.getItem(\"SJ\") != null) {\r\n      GetUserDatas(1)\r\n    }\r\n\r\n  },\r\n  // 换验证码\r\n  WebUrlText() {\r\n    var _this = this\r\n    // console.log(Global.serverUrl + \"/common/getimgcode\")\r\n    console.log(Global.serverUrl + \"/common/getimgcode\" + '?clientid=' + Global.clientid + '&t=' + Math.random());\r\n    cc.loader.load({ url: Global.serverUrl + \"/common/getimgcode\" + '?clientid=' + Global.clientid + '&t=' + Math.random(), type: 'png' }, function (err, tex) {\r\n      // console.log('Should load a texture from RESTful API by specify the type: ' + (tex instanceof cc.Texture2D));\r\n      _this.WebUrl.spriteFrame.setTexture(tex);\r\n    });\r\n  },\r\n\r\n\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        image: cc.Node,\n        music: cc.AudioSource,\n        slider_h: cc.Slider,\n        slider_v: cc.Slider\n    },\n\n    onLoad () {\n        this.slider_v.progress = 0.5;\n        this.slider_h.progress = 0.5;\n        this._updateImageOpacity(this.slider_v.progress);\n        this._updateMusicVolume(this.slider_h.progress);\n    },\n\n    _updateImageOpacity (progress) {\n        this.image.opacity = progress * 255;\n    },\n\n    _updateMusicVolume (progress) {\n        this.music.volume = progress;\n    },\n\n    onSliderVEvent (sender, eventType) {\n        this._updateImageOpacity(sender.progress);\n    },\n\n    onSliderHEvent (sender, eventType) {\n        this._updateMusicVolume(sender.progress);\n    }\n});\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    LoadTime: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    //huatiao\r\n    action_time: 60,\r\n    //daojishi\r\n    action_times: 60,\r\n    TimesOut: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n\r\n    //掉落节点\r\n    Centers: cc.Node,\r\n    toy: {\r\n      default: [],\r\n      type: cc.Node\r\n    },\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    //   this.sp=this.getComponent(cc.Sprite)\r\n\r\n    this.TimeOuts();\r\n    for (let toys = 0; toys < this.toy.length; toys++) {\r\n      switch (toys) {\r\n        case 0:\r\n          let Centers1 = cc.moveBy(50, cc.p(100, -100));\r\n          this.toy[0].runAction(Centers1);\r\n          break;\r\n        case 1:\r\n          let Centers2 = cc.moveBy(40, cc.p(100, 100));\r\n          this.toy[1].runAction(Centers2);\r\n          break;\r\n        case 2:\r\n          let Centers3 = cc.moveBy(50, cc.p(100, 100));\r\n          this.toy[2].runAction(Centers3);\r\n          break;\r\n        case 3:\r\n          let Centers4 = cc.moveBy(40, cc.p(100, 90));\r\n          this.toy[3].runAction(Centers4);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    let Centers = cc.moveBy(0.2, cc.p(0, -500)).easing(cc.easeInOut(3.0));\r\n    this.Centers.runAction(Centers);\r\n\r\n    console.log('开始匹配')\r\n    this.now_time = 0;\r\n  },\r\n\r\n  CallOff() {\r\n    this.node.destroy()\r\n  },\r\n  TimeOuts() {\r\n    this.t = function () {\r\n      if (this.action_times === 0) {\r\n        // 在第六次执行回调时取消这个计时器\r\n        this.unschedule(this.t);\r\n      } else {\r\n        // 这里的 this 指向 component\r\n        let x = this.action_times - 1;\r\n        this.TimesOut.string = x + \"s\";\r\n        this.action_times = x;\r\n      }\r\n    };\r\n    this.schedule(this.t, 1);\r\n  },\r\n\r\n\r\n  update(dt) {\r\n    if (this.action_times != 0) {\r\n      //倒计时\r\n\r\n      this.now_time += dt;\r\n      // console.log(this.now_time )\r\n      \r\n      // var percent = this.now_time / this.action_time; //百分比\r\n      var percent = this.now_time / this.action_time\r\n\r\n      // console.log(this.action_times--);\r\n      if (percent <= 0) {\r\n        percent = 1;\r\n        this.now_time = this.action_time; //从新开始\r\n      }\r\n      this.LoadTime.fillRange = -percent;\r\n    }\r\n  }\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    ClickTab() {\r\n        this.node.destroy();\r\n        this.loaderViewText()\r\n    },\r\n    start() {\r\n\r\n    },\r\n    loaderViewText() {\r\n\r\n        cc.loader.loadRes(\"/prefab/iView\", (err, iView) => {\r\n            if (err) {\r\n                console.log(err)\r\n                return;\r\n            }\r\n            var newNode = cc.instantiate(iView);\r\n            let _h = parseInt(cc.director.getScene().getChildByName('Canvas').height/2)\r\n            let _w = parseInt(cc.director.getScene().getChildByName('Canvas').width/2)\r\n            newNode.setPosition(_w,_h)\r\n            cc.director.getScene().addChild(newNode);\r\n\r\n        });\r\n    },\r\n    // update (dt) {},\r\n});\r\n","module.exports = {\r\n    /** 将text中的html字符转义， 仅转义  ', \", <, > 四个字符\r\n     * @param  { String } str 需要转义的字符串\r\n     * @returns { String }     转义后的字符串 \r\n     */\r\n    unhtml(str) {\r\n        return str ? str.replace(/[<\">']/g, (a) => {\r\n            return {\r\n                '<': '&lt;',\r\n                '\"': '&quot;',\r\n                '>': '&gt;',\r\n                \"'\": '&#39;'\r\n            }[a]\r\n        }) : '';\r\n    },\r\n    /**\r\n     * 匹配电话号码的正则\r\n     * @param {String} tel 传入的电话号码\r\n     * @param {String} reg 正则\r\n     * @returns {bool} true false\r\n     */\r\n   verificationPhone(tel, reg) {\r\n        return tel ? reg || /^0?1[3|4|5|7|8][0-9]\\d{8}$/.test(tel) : '';\r\n        // console.log(reg.test(tel))\r\n    },\r\n    /**\r\n     * 去除多余空格\r\n     * @param { String } str 需要去空格的字符串 \r\n     */\r\n    unBlank(str) {\r\n        return str ? str.replace(/\\s/ig, '') : '';\r\n    },\r\n    /**\r\n     * 检查输入字符\r\n     * @param char\r\n     * @param reg\r\n     */\r\n    character(char, reg) {\r\n        return char ? reg || /[\\{\\}\\[\\]|、\\\\:;：；‘’\\'\\\"“”\\<\\>?《》？，。、$*￥#~`!！@\\%\\^\\…\\&\\*\\(\\)\\_\\+\\-\\=【】]/g.test(char) : '';\r\n\r\n    },\r\n    /**\r\n     * 是否为表情包\r\n     * @param {*} substring \r\n     */\r\n    isEmoji(substring) {\r\n        for (var i = 0; i < substring.length; i++) {\r\n            var hs = substring.charCodeAt(i);\r\n            if (0xd800 <= hs && hs <= 0xdbff) {\r\n                if (substring.length > 1) {\r\n                    var ls = substring.charCodeAt(i + 1);\r\n                    var uc = ((hs - 0xd800) * 0x400) + (ls - 0xdc00) + 0x10000;\r\n                    if (0x1d000 <= uc && uc <= 0x1f77f) {\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (substring.length > 1) {\r\n                var ls = substring.charCodeAt(i + 1);\r\n                if (ls == 0x20e3) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                if (0x2100 <= hs && hs <= 0x27ff) {\r\n                    return true;\r\n                } else if (0x2B05 <= hs && hs <= 0x2b07) {\r\n                    return true;\r\n                } else if (0x2934 <= hs && hs <= 0x2935) {\r\n                    return true;\r\n                } else if (0x3297 <= hs && hs <= 0x3299) {\r\n                    return true;\r\n                } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 ||\r\n                    hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b ||\r\n                    hs == 0x2b50) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 倒计时\r\n     * @param {*} codebtn \r\n     */\r\n    countDown(codebtn) {\r\n        let a = 60;\r\n        timer = setInterval(function () {\r\n            if (a > 0) {\r\n                codebtn.attr(\"disabled\", true).val(\"(\" + a + \")倒计时\").css(\"background\", \"#ccc\");\r\n                a--;\r\n            } else {\r\n                clearInterval(timer);\r\n                codebtn.attr(\"disabled\", false).val(\"获取验证码\").css(\"background\", \"#eeeeee\");\r\n                a = 60;\r\n            }\r\n        }, 1000);\r\n\r\n    },\r\n    countdowns(btn) {\r\n        let times = 60;\r\n        timer = setInterval(() => {\r\n            if (times > 0) {\r\n                btn.setAttribute('style', 'pointer-events: none');\r\n                filter.inputs(btn,`${times}s`);\r\n                times--;\r\n            } else {\r\n                clearInterval(timer);\r\n                btn.removeAttribute('style');\r\n                filter.inputs(btn,'获取验证码');\r\n                times = 60;\r\n            }\r\n        }, 1000)\r\n    },\r\n    inputs(btn,v1){\r\n        if (btn.tagName == 'INPUT') {\r\n            btn.value = v1;\r\n        } else if (btn.tagName == 'BUTTON') {\r\n            btn.innerText = v1;\r\n        }\r\n    }\r\n}","const Polyglot = require('polyglot');\nlet lang = cc.sys.language;\nif (lang !== 'zh') {\n    lang = 'en';\n}\nlet data = require(lang); // update this to set your default displaying language in editor\n// let polyglot = null;\nlet polyglot = new Polyglot({phrases: data, allowMissing: true});\n\n\nmodule.exports = {\n    /**\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\n     * such as when language is 'zh', it will load your 'zh.js' data source.\n     * @method init\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\n     */\n    init (language) {\n        lang = language;\n        data = require(lang);\n        polyglot.replace(data);\n    },\n    /**\n     * this method takes a text key as input, and return the localized string\n     * Please read https://github.com/airbnb/polyglot.js for details\n     * @method t\n     * @return {String} localized string\n     * @example\n     *\n     * var myText = i18n.t('MY_TEXT_KEY');\n     *\n     * // if your data source is defined as\n     * // {\"hello_name\": \"Hello, %{name}\"}\n     * // you can use the following to interpolate the text\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\n     */\n    t (key, opt) {\n        return polyglot.t(key, opt);\n    }\n};","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        audioSource: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        },\r\n        clikcMis: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        },\r\n        clickGameMis: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    play: function () {\r\n        this.audioSource.play();\r\n    },\r\n    pause: function () {\r\n        this.audioSource.pause();\r\n    },\r\n    // update (dt) {},\r\n   \r\n});","/**\r\n  Copyright (c) 2016 hustcc http://www.atool.org/\r\n  License: MIT \r\n  https://github.com/hustcc/onfire.js\r\n**/\r\n/* jshint expr: true */ \r\n!function (root, factory) {\r\n  if (typeof module === 'object' && module.exports)\r\n    module.exports = factory();\r\n  else\r\n    root.onfire = factory();\r\n}(typeof window !== 'undefined' ? window : this, function () {\r\n  var __onfireEvents = {},\r\n   __cnt = 0, // evnet counter\r\n   string_str = 'string',\r\n   function_str = 'function',\r\n   hasOwnKey = Function.call.bind(Object.hasOwnProperty),\r\n   slice = Function.call.bind(Array.prototype.slice);\r\n\r\n  function _bind(eventName, callback, is_one, context) {\r\n    if (typeof eventName !== string_str || typeof callback !== function_str) {\r\n      throw new Error('args: '+string_str+', '+function_str+'');\r\n    }\r\n    if (! hasOwnKey(__onfireEvents, eventName)) {\r\n      __onfireEvents[eventName] = {};\r\n    }\r\n    __onfireEvents[eventName][++__cnt] = [callback, is_one, context];\r\n\r\n    return [eventName, __cnt];\r\n  }\r\n  function _each(obj, callback) {\r\n    for (var key in obj) {\r\n      if (hasOwnKey(obj, key)) callback(key, obj[key]);\r\n    }\r\n  }\r\n  /**\r\n   *  onfire.on( event, func, context ) -> Object\r\n   *  - event (String): The event name to subscribe / bind to\r\n   *  - func (Function): The function to call when a new event is published / triggered\r\n   *  Bind / subscribe the event name, and the callback function when event is triggered, will return an event Object\r\n  **/\r\n  function on(eventName, callback, context) {\r\n    return _bind(eventName, callback, 0, context);\r\n  }\r\n  /**\r\n   *  onfire.one( event, func, context ) -> Object\r\n   *  - event (String): The event name to subscribe / bind to\r\n   *  - func (Function): The function to call when a new event is published / triggered\r\n   *  Bind / subscribe the event name, and the callback function when event is triggered only once(can be triggered for one time), will return an event Object\r\n  **/\r\n  function one(eventName, callback, context) {\r\n    return _bind(eventName, callback, 1, context);\r\n  }\r\n  function _fire_func(eventName, args) {\r\n    if (hasOwnKey(__onfireEvents, eventName)) {\r\n      _each(__onfireEvents[eventName], function(key, item) {\r\n        item[0].apply(item[2], args); // do the function\r\n        if (item[1]) delete __onfireEvents[eventName][key]; // when is one, delete it after triggle\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   *  onfire.fire( event[, data1 [,data2] ... ] )\r\n   *  - event (String): The event name to publish\r\n   *  - data...: The data to pass to subscribers / callbacks\r\n   *  Async Publishes / fires the the event, passing the data to it's subscribers / callbacks\r\n  **/\r\n  function fire(eventName) {\r\n    // fire events\r\n    var args = slice(arguments, 1);\r\n    setTimeout(function () {\r\n      _fire_func(eventName, args);\r\n    });\r\n  }\r\n  /**\r\n   *  onfire.fireSync( event[, data1 [,data2] ... ] )\r\n   *  - event (String): The event name to publish\r\n   *  - data...: The data to pass to subscribers / callbacks\r\n   *  Sync Publishes / fires the the event, passing the data to it's subscribers / callbacks\r\n  **/\r\n  function fireSync(eventName) {\r\n    _fire_func(eventName, slice(arguments, 1));\r\n  }\r\n  /**\r\n   * onfire.un( event ) -> Boolean\r\n   *  - event (String / Object): The message to publish\r\n   * When passed a event Object, removes a specific subscription.\r\n   * When passed event name String, removes all subscriptions for that event name(hierarchy)\r\n  *\r\n   * Unsubscribe / unbind an event or event object.\r\n   *\r\n   * Examples\r\n   *\r\n   *  // Example 1 - unsubscribing with a event object\r\n   *  var event_object = onfire.on('my_event', myFunc);\r\n   *  onfire.un(event_object);\r\n   *\r\n   *  // Example 2 - unsubscribing with a event name string\r\n   *  onfire.un('my_event');\r\n  **/\r\n  function un(event) {\r\n    var eventName, key, r = false, type = typeof event;\r\n    if (type === string_str) {\r\n      // cancel the event name if exist\r\n      if (hasOwnKey(__onfireEvents, event)) {\r\n        delete __onfireEvents[event];\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    else if (type === 'object') {\r\n      eventName = event[0];\r\n      key = event[1];\r\n      if (hasOwnKey(__onfireEvents, eventName) && hasOwnKey(__onfireEvents[eventName], key)) {\r\n        delete __onfireEvents[eventName][key];\r\n        return true;\r\n      }\r\n      // can not find this event, return false\r\n      return false;\r\n    }\r\n    else if (type === function_str) {\r\n      _each(__onfireEvents, function(key_1, item_1) {\r\n        _each(item_1, function(key_2, item_2) {\r\n          if (item_2[0] === event) {\r\n            delete __onfireEvents[key_1][key_2];\r\n            r = true;\r\n          }\r\n        });\r\n      });\r\n      return r;\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   *  onfire.clear()\r\n   *  Clears all subscriptions\r\n  **/\r\n  function clear() {\r\n    __onfireEvents = {};\r\n  }\r\n  return {\r\n    on: on,\r\n    one: one,\r\n    un: un,\r\n    fire: fire,\r\n    fireSync: fireSync,\r\n    clear: clear\r\n  };\r\n});","//     (c) 2012-2016 Airbnb, Inc.\n//\n//     polyglot.js may be freely distributed under the terms of the BSD\n//     license. For all licensing information, details, and documention:\n//     http://airbnb.github.com/polyglot.js\n//\n//\n// Polyglot.js is an I18n helper library written in JavaScript, made to\n// work both in the browser and in Node. It provides a simple solution for\n// interpolation and pluralization, based off of Airbnb's\n// experience adding I18n functionality to its Backbone.js and Node apps.\n//\n// Polylglot is agnostic to your translation backend. It doesn't perform any\n// translation; it simply gives you a way to manage translated phrases from\n// your client- or server-side JavaScript application.\n//\n\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return factory(root);\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Polyglot = factory(root);\n  }\n}(typeof global !== 'undefined' ? global : this, function(root) {\n  'use strict';\n\n  var replace = String.prototype.replace;\n\n  // ### Polyglot class constructor\n  function Polyglot(options) {\n    options = options || {};\n    this.phrases = {};\n    this.extend(options.phrases || {});\n    this.currentLocale = options.locale || 'en';\n    this.allowMissing = !!options.allowMissing;\n    this.warn = options.warn || warn;\n  }\n\n  // ### Version\n  Polyglot.VERSION = '1.0.0';\n\n  // ### polyglot.locale([locale])\n  //\n  // Get or set locale. Internally, Polyglot only uses locale for pluralization.\n  Polyglot.prototype.locale = function(newLocale) {\n    if (newLocale) this.currentLocale = newLocale;\n    return this.currentLocale;\n  };\n\n  // ### polyglot.extend(phrases)\n  //\n  // Use `extend` to tell Polyglot how to translate a given key.\n  //\n  //     polyglot.extend({\n  //       \"hello\": \"Hello\",\n  //       \"hello_name\": \"Hello, %{name}\"\n  //     });\n  //\n  // The key can be any string.  Feel free to call `extend` multiple times;\n  // it will override any phrases with the same key, but leave existing phrases\n  // untouched.\n  //\n  // It is also possible to pass nested phrase objects, which get flattened\n  // into an object with the nested keys concatenated using dot notation.\n  //\n  //     polyglot.extend({\n  //       \"nav\": {\n  //         \"hello\": \"Hello\",\n  //         \"hello_name\": \"Hello, %{name}\",\n  //         \"sidebar\": {\n  //           \"welcome\": \"Welcome\"\n  //         }\n  //       }\n  //     });\n  //\n  //     console.log(polyglot.phrases);\n  //     // {\n  //     //   'nav.hello': 'Hello',\n  //     //   'nav.hello_name': 'Hello, %{name}',\n  //     //   'nav.sidebar.welcome': 'Welcome'\n  //     // }\n  //\n  // `extend` accepts an optional second argument, `prefix`, which can be used\n  // to prefix every key in the phrases object with some string, using dot\n  // notation.\n  //\n  //     polyglot.extend({\n  //       \"hello\": \"Hello\",\n  //       \"hello_name\": \"Hello, %{name}\"\n  //     }, \"nav\");\n  //\n  //     console.log(polyglot.phrases);\n  //     // {\n  //     //   'nav.hello': 'Hello',\n  //     //   'nav.hello_name': 'Hello, %{name}'\n  //     // }\n  //\n  // This feature is used internally to support nested phrase objects.\n  Polyglot.prototype.extend = function(morePhrases, prefix) {\n    var phrase;\n\n    for (var key in morePhrases) {\n      if (morePhrases.hasOwnProperty(key)) {\n        phrase = morePhrases[key];\n        if (prefix) key = prefix + '.' + key;\n        if (typeof phrase === 'object') {\n          this.extend(phrase, key);\n        } else {\n          this.phrases[key] = phrase;\n        }\n      }\n    }\n  };\n\n  // ### polyglot.unset(phrases)\n  // Use `unset` to selectively remove keys from a polyglot instance.\n  //\n  //     polyglot.unset(\"some_key\");\n  //     polyglot.unset({\n  //       \"hello\": \"Hello\",\n  //       \"hello_name\": \"Hello, %{name}\"\n  //     });\n  //\n  // The unset method can take either a string (for the key), or an object hash with\n  // the keys that you would like to unset.\n  Polyglot.prototype.unset = function(morePhrases, prefix) {\n    var phrase;\n\n    if (typeof morePhrases === 'string') {\n      delete this.phrases[morePhrases];\n    } else {\n      for (var key in morePhrases) {\n        if (morePhrases.hasOwnProperty(key)) {\n          phrase = morePhrases[key];\n          if (prefix) key = prefix + '.' + key;\n          if (typeof phrase === 'object') {\n            this.unset(phrase, key);\n          } else {\n            delete this.phrases[key];\n          }\n        }\n      }\n    }\n  };\n\n  // ### polyglot.clear()\n  //\n  // Clears all phrases. Useful for special cases, such as freeing\n  // up memory if you have lots of phrases but no longer need to\n  // perform any translation. Also used internally by `replace`.\n  Polyglot.prototype.clear = function() {\n    this.phrases = {};\n  };\n\n  // ### polyglot.replace(phrases)\n  //\n  // Completely replace the existing phrases with a new set of phrases.\n  // Normally, just use `extend` to add more phrases, but under certain\n  // circumstances, you may want to make sure no old phrases are lying around.\n  Polyglot.prototype.replace = function(newPhrases) {\n    this.clear();\n    this.extend(newPhrases);\n  };\n\n\n  // ### polyglot.t(key, options)\n  //\n  // The most-used method. Provide a key, and `t` will return the\n  // phrase.\n  //\n  //     polyglot.t(\"hello\");\n  //     => \"Hello\"\n  //\n  // The phrase value is provided first by a call to `polyglot.extend()` or\n  // `polyglot.replace()`.\n  //\n  // Pass in an object as the second argument to perform interpolation.\n  //\n  //     polyglot.t(\"hello_name\", {name: \"Spike\"});\n  //     => \"Hello, Spike\"\n  //\n  // If you like, you can provide a default value in case the phrase is missing.\n  // Use the special option key \"_\" to specify a default.\n  //\n  //     polyglot.t(\"i_like_to_write_in_language\", {\n  //       _: \"I like to write in %{language}.\",\n  //       language: \"JavaScript\"\n  //     });\n  //     => \"I like to write in JavaScript.\"\n  //\n  Polyglot.prototype.t = function(key, options) {\n    var phrase, result;\n    options = options == null ? {} : options;\n    // allow number as a pluralization shortcut\n    if (typeof options === 'number') {\n      options = {smart_count: options};\n    }\n    if (typeof this.phrases[key] === 'string') {\n      phrase = this.phrases[key];\n    } else if (typeof options._ === 'string') {\n      phrase = options._;\n    } else if (this.allowMissing) {\n      phrase = key;\n    } else {\n      this.warn('Missing translation for key: \"'+key+'\"');\n      result = key;\n    }\n    if (typeof phrase === 'string') {\n      options = clone(options);\n      result = choosePluralForm(phrase, this.currentLocale, options.smart_count);\n      result = interpolate(result, options);\n    }\n    return result;\n  };\n\n\n  // ### polyglot.has(key)\n  //\n  // Check if polyglot has a translation for given key\n  Polyglot.prototype.has = function(key) {\n    return key in this.phrases;\n  };\n\n\n  // #### Pluralization methods\n  // The string that separates the different phrase possibilities.\n  var delimeter = '||||';\n\n  // Mapping from pluralization group plural logic.\n  var pluralTypes = {\n    chinese:   function(n) { return 0; },\n    german:    function(n) { return n !== 1 ? 1 : 0; },\n    french:    function(n) { return n > 1 ? 1 : 0; },\n    russian:   function(n) { return n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2; },\n    czech:     function(n) { return (n === 1) ? 0 : (n >= 2 && n <= 4) ? 1 : 2; },\n    polish:    function(n) { return (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2); },\n    icelandic: function(n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; }\n  };\n\n  // Mapping from pluralization group to individual locales.\n  var pluralTypeToLanguages = {\n    chinese:   ['fa', 'id', 'ja', 'ko', 'lo', 'ms', 'th', 'tr', 'zh'],\n    german:    ['da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hu', 'it', 'nl', 'no', 'pt', 'sv'],\n    french:    ['fr', 'tl', 'pt-br'],\n    russian:   ['hr', 'ru'],\n    czech:     ['cs', 'sk'],\n    polish:    ['pl'],\n    icelandic: ['is']\n  };\n\n  function langToTypeMap(mapping) {\n    var type, langs, l, ret = {};\n    for (type in mapping) {\n      if (mapping.hasOwnProperty(type)) {\n        langs = mapping[type];\n        for (l in langs) {\n          ret[langs[l]] = type;\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Trim a string.\n  var trimRe = /^\\s+|\\s+$/g;\n  function trim(str){\n    return replace.call(str, trimRe, '');\n  }\n\n  // Based on a phrase text that contains `n` plural forms separated\n  // by `delimeter`, a `locale`, and a `count`, choose the correct\n  // plural form, or none if `count` is `null`.\n  function choosePluralForm(text, locale, count){\n    var ret, texts, chosenText;\n    if (count != null && text) {\n      texts = text.split(delimeter);\n      chosenText = texts[pluralTypeIndex(locale, count)] || texts[0];\n      ret = trim(chosenText);\n    } else {\n      ret = text;\n    }\n    return ret;\n  }\n\n  function pluralTypeName(locale) {\n    var langToPluralType = langToTypeMap(pluralTypeToLanguages);\n    return langToPluralType[locale] || langToPluralType.en;\n  }\n\n  function pluralTypeIndex(locale, count) {\n    return pluralTypes[pluralTypeName(locale)](count);\n  }\n\n  // ### interpolate\n  //\n  // Does the dirty work. Creates a `RegExp` object for each\n  // interpolation placeholder.\n  var dollarRegex = /\\$/g;\n  var dollarBillsYall = '$$$$';\n  function interpolate(phrase, options) {\n    for (var arg in options) {\n      if (arg !== '_' && options.hasOwnProperty(arg)) {\n        // Ensure replacement value is escaped to prevent special $-prefixed\n        // regex replace tokens. the \"$$$$\" is needed because each \"$\" needs to\n        // be escaped with \"$\" itself, and we need two in the resulting output.\n        var replacement = options[arg];\n        if (typeof replacement === 'string') {\n          replacement = replace.call(options[arg], dollarRegex, dollarBillsYall);\n        }\n        // We create a new `RegExp` each time instead of using a more-efficient\n        // string replace so that the same argument can be replaced multiple times\n        // in the same phrase.\n        phrase = replace.call(phrase, new RegExp('%\\\\{'+arg+'\\\\}', 'g'), replacement);\n      }\n    }\n    return phrase;\n  }\n\n  // ### warn\n  //\n  // Provides a warning in the console if a phrase key is missing.\n  function warn(message) {\n    root.console && root.console.warn && root.console.warn('WARNING: ' + message);\n  }\n\n  // ### clone\n  //\n  // Clone an object.\n  function clone(source) {\n    var ret = {};\n    for (var prop in source) {\n      ret[prop] = source[prop];\n    }\n    return ret;\n  }\n\n  return Polyglot;\n}));\n"],"sourceRoot":"/source/","file":"project.js"}