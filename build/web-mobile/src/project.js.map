{"version":3,"sources":["assets/Script/BackPackUI.js","assets/Script/BollGame.js","assets/Script/BollLose.js","assets/Script/BollMap.js","assets/Script/BollStart.js","assets/Script/CanvasJS.js","assets/Script/Circle.js","assets/Script/CloseWin.js","assets/Script/ColliderListener.js","assets/Script/GameAwait.js","assets/Script/GetMsg.js","assets/Script/GetUserData.js","assets/Script/GoHome.js","assets/Script/GoodsList.js","assets/Script/HelloWorld.js","assets/Script/Home.js","assets/Script/Item.js","assets/Script/LeftAction.js","assets/Script/Maps.js","assets/Script/News.js","assets/Script/NodeGenerator.js","assets/Script/PayList.js","assets/Script/PigDial.js","assets/Script/PigHome.js","assets/Script/PoolHandler.js","assets/Script/QuestionsStart.js","assets/Script/Questions.js","assets/Script/SetingItemMic.js","assets/Script/SetingItem.js","assets/Script/Setings.js","assets/Script/Shop.js","assets/Script/SignInBox.js","assets/Script/SignInTel.js","assets/Script/SliderCtrl.js","assets/Script/StartLayout.js","assets/Script/TouchDragger.js","assets/Script/UserData.js","assets/Script/WinLoes.js","assets/Script/filters.js","assets/Script/i18n.js","assets/Script/music.js","assets/Script/onfire.js","assets/Script/polyglot.js"],"names":["cc","Class","extends","Component","properties","slotPrefab","default","type","Prefab","scrollView","ScrollView","totalCount","onLoad","init","home","this","heroSlots","i","length","heroSlot","addHeroSlot","push","instantiate","content","addChild","show","node","emit","toggleHomeBtns","hide","start","speed","resetX","update","dt","x","Global","_bollSpeeds","GameOverPoint","Label","string","_bollPointString","_GetUserData","require","B1","B2","B3","C1","S1","BoxArray","Track_map1","Node","Track_map2","GameOver","point","totalTime","StartBox","StartGameLose","_bollTime","sum","GetUserDatas","_bollGameOver","addPoolList","towerPool","NodePool","towerPoolBox","monster","speedSlice","enemy","enemy2","enemy3","put","addPool","MType","rand","random0To1","getPool","Pool","b","size","get","console","log","createEnemy","Track_map","rx","ry","_w","height","_w1","_h","width","_ry","y","parseInt","_bollPoint","removeNode","GameTimes","unschedule","StartBarrier","_this","_data","Userid","DataUsers","UserId","Token","streamXHREventsToLabel","loader","getXMLHttpRequest","serverUrl","e","_Object","JSON","parse","code","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","object","Symbol","iterator","next","done","value","X","Y","s","err","return","CreatorBarrier","map","_this2","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","addSpeeds","removeSpeeds","t1","t2","x1","x2","loadMap","removeAllChildren","tNode","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","children","name","NextGame","n","scale","LostBox","User_money","User_name","User_id","User_img","Sprite","AllPoint","loseBox","MyList","AllList","Scroll1","Scroll2","TabDay","Toggle","Label0","Label1","UserName","Login","Balance","loaderUserIcon","UserIcon","_bollLoseBox","LoadPoint","LoadPointList","GameList","MyListLoad","num","AllListLoad","radioButtonClicked","toggle","index","indexOf","StatrGame","totals","Type","_loop","loadPre","nodeList","com","getComponentsInChildren","SortNum","WinGold","UserGold","Avatar","_this3","_loop2","TradeId","EndTime","Times","UserInfo","UserInfoImg","UserInfoId","UserInfoName","InfoBox","Setings","SetingsBtn","Activitys","ShopsBtn","Gulds","GuldsSetings","Gold","Audios","AudioSource","clikcMis","clickGameMis","TurnTheScreen","screenOrientation","sMsg","Invitations","QcCode","buttomMsg","UserToName","UserToId","User_pic","TotalAmount","DirectlyUnderAmount","LowerMemberAmount","TotalCommission","DirectlyUnderCommission","LowerMemberCommission","sPageView","PageView","sPageView_1","sPageView_2","sPageView_3","sPageView_4","nlayer","myScrollView","AgentScrollView","qrCodeUrls","Extext","MyName","EditBox","MyId","MyIcon","QsNumber","ThunderNumber","PigNumber","QsWinNumber","ThWinNumber","ByGolds","BsGolds","ThunderScroll","QuestionScroll","pigScorll","modification","sss","getComponent","data","GetUserCenter","openUserInfo","play","getQueryString","reg","RegExp","r","window","location","search","substr","match","decodeURI","sys","localStorage","getItem","scheduleOnce","SetInfo","getversion","on","SetingsFn","ActivityWin","AddWindows","setItem","volume","GetInvitation","GetAgentRule","GetAgentDataStatisticsInfo","GetLsUserCharacterRecord","GetRecords","GetThunderTrades","getexamgamerecords","addEventListeners","checkOrient","onorientationchange","orientation","GoGameStart","d","director","loadScene","Invitation","GetParentAgentWeeklyTransaction","Shops","closeGuldsSetings","Infos","setPosition","GetPrefab","fab","_this4","loadRes","newNode","getScene","CloseViews","destroy","GoToMsg","socketMsg","xhr","clientVersion","client","qrCodeUrlFn","nSprite","v2","_this5","AccountType","ApplicationBroker","mo","model","ser","user","tips","qrCodeUrl","_this6","Agent","AgentAll","AgentCount","getChildByName","ParentAgentCount","WeekParentAgentCount","MonthParentAgentCount","Counts","UserCount","WeekCount","MonthCount","_this7","PageIndex","PageSize","Transaction","Amount","List","_this8","Data","_this9","Money","StateCode","Subtime","_this10","ExamNumber","LittlePigPekyNumber","ExamWinningRate","ThunderWinningRate","_this11","total","_loop3","PlusAmount","ExitTime","_this12","_loop4","RecyclingAmount","TradesAmount","Profit","formatDateTime","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","_this13","list","_loop5","CharacterType","CreateTime","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","timeStamp","date","Date","setTime","getFullYear","m","getMonth","getDate","h","getHours","minute","getMinutes","second","getSeconds","ViewWeb1","WebView","ViewWeb2","startView","json","circleUrl","url","CloseWin","CloseWins","removeFromParent","camera","Camera","speeds","getPhysicsManager","attachDebugDrawToCamera","getCollisionManager","enabled","touchingNumber","onCollisionEnter","other","onCollisionStay","onCollisionExit","color","Color","WHITE","StartSp","Button","Record","Rule","SendAnInvitation","OnlineNumber","CircuseeOnlookers","Recharge","UserPic","UserID","ts","GameAwait","ruleWin","viewWin","getView","getComponentInChildren","startGame","id","_GoToGame","_StageData","LoginTimeOut","openRuleWin","itemTemplate","spawnCount","spacing","items","token","userid","roomId","_e","initialize","DataLists","item","_item","GoToStart","module","exports","ns","GoLoadScene","decodeURIComponent","sData","encodeURIComponent","stringify","lobbySocket","removeItem","WeixinLoginTime","tok","outCode","ws","close","SignInBoxRight","SignIn","Logins","SignInBox","moveBy","p","runAction","SignInBoxLeft","TelBox","PhoneViews","parent","DestroyNode","AddWindow","prefab","arguments","obj","method","_fn","async","onreadystatechange","readyState","status","response","responseText","open","setRequestHeader","send","online","RoomUserLen","GameRoomData","_Golds","clientid","questions","returnHome","load","tex","spriteFrame","SpriteFrame","pre","fn","alertWindw","msg","windowLabel","addComponent","zIndex","opacity","sequence","delayTime","fadeIn","fadeOut","tintTo","WebSocket","wsUrl","onopen","event","OPEN","onmessage","evMsg","lobbyGetStatus","Code","onerror","onclose","UserDisplayName","GetMessges","Returns","GoodsPrice","GoodsName","GoodsQuantity","SpIcon","sfIcons","getRandomInt","min","max","ratio","Math","floor","toString","label","text","_properties","userID","userName","loaded","target","_defineProperty","Vec2","Boolean","String","Float","Integer","displayName","tooltip","_width","set","itemID","updateItem","tmplId","itemId","Maps","TiledMap","Player","TiledLayer","LayerOne","GotoUp","StopUp","TimesOut","radioButton","upGold","allGold","SaveGolds","User_Name","User_Pic","User_Id","xplayer","cplayer","xUserNum","IsStop","xFloor","T1","T2","T3","T4","floorNext","floorForme","ServerTimes","GetServerTimesSave","sThirty","sTimes","eTimes","eTneTime","eThreeTime","tName","n1","n2","bom","anim","Animation","animbom","animOver","anim1","anim2","anim3","goSource","timeStartSource","startTime","bombTimeSource","gameOver","gameWin","bombTime","cat","getTileGIDAt","removeTileAt","GetServerTimes","SetServerTimes","getPositionAt","Prepare","nSocket","GetBaseRoom","roomnumberid","rule","CalculateGold","loaderViewWin","gold","SetPrefab","loaderViewWinLost","find","D","EndTimestamps","CurrentTimestamps","RoomUser","CalculateAllGold","CountdownType","StartTimeOuts","GameTimeOuts","SetGameRoomData","forEach","v","CurrentFloor","setTileGID","GoToUpFn","types","Roomnumberid","message","ClickGotoUp","gid","moveToPlayer","ButtonType","StopPlayer","players","getTileAt","moveTo","finish","callFunc","F","mAcion","schedule","CurrentTime","BomTimeOuts","stop","nSocketTime","CalculateForm","numbs","frome","Floor","Chip","OutRoom","SetingBox","room","userId","aData","Status","GetStatus","u","f","Bomfn","aAnimationTimes","aAnimationBom","aAnimationTimesOver","repeatCount","arr","a","interactable","dot","_f","WinLoseData","states","_this14","GetHallMsgUrl","AddFollowUrl","DelFollowUrl","AddMyMsgUrl","AddWithdrawalUrl","scrollContent","scrollContentRight","GoldWindow","SaveId","SaveIdGive","GiveGold","hasGold","RichTextGold","RichText","User_Gold","present","addMsgs","addMsgsBtn","oldID","GetHallMsgFn","contentLeft","contentRight","hall","hallObj","msgLists","msgList","lists","Msg","btn1","IsFollow","EventType","TOUCH_START","DelFollow","SaveUser","msgFollowList","TOUCH_END","oid","FollowUserID","AddFollowObj","Withdrawal","AgentID","AddWithdrawal","closeBtn","AddMyMsgs","changeAddMyMsg","hint","regionOrigin","regionSize","Size","generateNode","_pool","_count","windowSize","view","getVisibleSize","winSize","random","angle","PI","cos","sin","sender","moneybk","radioTabPay","PayTypeID","PayList","Channel","MerchantName","Icon","SavePay","Moneys","money","div","document","createElement","className","innerHTML","body","appendChild","PayForm","submit","getElementsByClassName","remove","radioTabs","index_target","prefabMoney","pointer","pointerButton","pointerTitle","SaveNumber","pointerText","sssNumber","Winners","TheWinningRecord","TheWinningRecordWindow","PigCardLise","PigList","Roundabout","_Roundabout","_objectList","_objectLists","User_Glod","PigArray","LottleList","runtime","ShowBoxWindow","run","sim","startBtn","winNode","ruleWinNodes","Piggb","PigClick","PigShow","isMis","ViewWeb","PigArrayNumber","loadUserPointer","GetRoundaboutRecord","MisClose","PigBox","PigNumbers","RoundsNumber","sRound","_UserPointer","_UserRanking","UserRanking","_UserCharacter","UserCharacter","PigListType","RankingMsg","_object","Prize","fontSize","lineHeight","getChildren","CharactersNumber","bubbleSort","len","j","temp","_GetRound","_GetRounds","taskPic","Path","RoundaboutTypeName","DetailedTypeName","Time","GetPointerUrl","RoundaboutType","numbers","isChecked","ForPigBox","PigArrays","NumberBox","ForPigBoxTwo","tt","PigBoxItem","GoPigDial","TheWinningRecordFn","PigCardLiseFn","selectPig","ele","loadMsgPointer","str","VCode","_pointer","prize","path","prompt","turntableStart","prizeType","turntableFn","closeWinNode","turntableStop","numberSave","a1","a3","a4","a5","a6","actionBy","rotateBy","easing","easeCubicActionOut","ShowBox","img","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","closeShowBoxWindow","ruleWinNode","taskWindow","taskListView","accomplishTaskWindow","everydaySignIn","accomplishEverydaySignIn","accompBtn","ruleWindow","hintWindow","getEggbtn","eggAnima","chuiziAnima","GetEggPig","eggNumber","everyDay","PigText","GetLstUserCharacterInfo","picName","GetLstCharacterCondition","ruleWindowBtn","openTask","closeTask","closeTaskWin","openEveryday","GetSignIn","closeEveryday","closeEverydayPir","_task","btn","Name","Introduction","Reward","Total","Condition","ReceiveCondition","RuleCode","_GetSignIn","IsSign","Value","SetSignIn","_GetLst","UserOpportunity","title","GetEgg","win","scaleX","_egg","IsWinning","onFinished","CharacterName","loadPig","pic","self","openThisEgg","closeThisEgg","GoTask","GetEggPigFn","lastClick","pauseresume","now","stopAllActions","pool","paused","getActionManager","resumeTarget","pauseTarget","reuse","unuse","off","moneyEnough","ClientLog","Regulation","RankingList","RankingLists","GameLists","misNumber","misWindow","datingMis","ipst","datingMiss","ClientLogs","regulations","GetlsexamprofitrankingInfo","getvouchernumber","closeMoneyEnough","GameStart","GetInroom","closemisWindow","mid","Number","sms","ExamRoomID","IsAnswerSheet","element","loaderFab","idx","rangLabel","timeLabel","moneyLabel","moneysLabel","Ranking","date1","M","minutes","_s","RanSprite","winClose","winClose2","winClose3","loaderRaing","rang","titles","StartTime","StartTimeLabel","StartTimeView","SetTimeA","horizontal","question","ExamRoomQuestionID","Correct","Wrong","btnd","btnc","isCuo","DengdaiTitle","StartTitle","ExamRoomGameNumberID","CurrentQuestions","errorWin","RenNumber","prepareGame","Annunciate","setAmount","allAmount","ObjectList","ten","QusNumber","QusNumbertitle","scrollViewLcc","overRaing","myMonney","RankingNumber","clickmis","datingpipei","errorbtn","gameover","gamewin","datizhong","misnumber","isPlaying","fillStart","Getroom","Question","QuestionsTotalsNumber","_updataFillStart","IsMatch","IsEndAnswer","EndTimestamp","CurrDateTime","loadImg","QuestionUrl","Url","sb","GetGameQuestions","AnswerTime","SetRaningPreFab","fabs","uid","wSprite","wLabel","wMoney","wTime","nSprite_child","rmrematch","Corrects","SaveCorrects","Wrongs","ass","Answer","IsWrongAnswer","flag","objects","offsetAmount","innerList","toFixed","RanLabel","RanBoxLabex","goHome","sprite","Music","Slider","Sounds","_updateMusicVolume","progress","_updateAudiosVolume","onSliderHEvent","eventType","onSliderHEventAudios","scrollView2","scrollView3","addressItem","_addressItem","Sheng","ShengID","Shi","ShiID","Qu","QuID","address","addressTel","addressName","PayTab","PayCard","PayCardId","CardNumber","bankCard","bankCardName","CardName","alipayCard","EditBoxList1","EditBoxList2","scrollViewCard","togglePay","sign","signPay","radioButtonTabs","SaveBtn","mis","getsys","content2","content3","addressId","ID","DetailAddress","contactName","MobilePhone","ProvinceName","CityName","AreaName","GetPayInfo","GetBankListPost","LoginOut","ShengBotton","GetAddress","itemclick","ShiBotton","QuBotton","pid","ParentID","addressObj","nodeLabel","Areas_ID","SaveMessges","Province","City","Area","isDefault","info","BindAlipayAccount","BindBankCard","TrueName","AlipayAccount","AccountName","AccountNumber","BankID","DocumenCode","GetBankList","EnumDisplayText","EnumValue","radioButtonClickedTab","PayTabButton","changed","CardChanged","NoticeContent","GoodesOneList","GoodsWindow","GoodsTitle","GoodsTitle2","GoodsGold","GoodsGold2","GoodsImg","J1","J2","J3","GoodsNumber","GoodsGoldCoin","GoodsID","ScrollViews","ShowRorderBox","tishi","getuserorderlist","ShopMsg","openWindowGoods","GoodsPic","GoodsMarketPrice","gmp","setTexture","closeWin","J1Fn","J2Fn","SaveBtnFn","GoodsId","AddressId","record","Labels","Sp","ShippingNo","ExpressName","StrCreateTime","ShowRorder","closetishi","Wecher","Tel","_filters","Phone","SecurityCode","Messages","RedLabel","GetImgCodes","action_times","TimesOutBtn","GetUserDataUrl","WebUrl","SignWindow","LoginBtn","wxBtn","phoneBtn","webwxlogin","loadNode","RedLabels","LoginList","mode","setPositionX","SendMessages","c","verificationPhone","mobilephone","imgcode","SetTimeOut","vcode","TableChange","t","WebUrlText","navigator","userAgent","toLowerCase","wxBtnLogin","origin","href","image","music","slider_h","slider_v","_updateImageOpacity","onSliderVEvent","LoadTime","action_time","Centers","toy","TimeOuts","toys","Centers1","Centers2","Centers3","Centers4","easeInOut","now_time","CallOff","percent","fillRange","TouchDragger","propagate","pointAnima1","pointAnima2","pointAnima3","pointAnima4","TOUCH_MOVE","delta","touch","getDelta","stopPropagation","OverGame","aabb","world","preAabb","transform","radius","position","points","ClickTab","loaderViewText","iView","unhtml","replace","<","\"",">","'","tel","test","unBlank","character","char","isEmoji","substring","hs","charCodeAt","uc","countDown","codebtn","timer","setInterval","attr","val","css","clearInterval","countdowns","times","setAttribute","filter","inputs","removeAttribute","v1","tagName","innerText","Polyglot","lang","language","polyglot","phrases","allowMissing","key","opt","audioSource","pause","root","factory","__onfireEvents","__cnt","string_str","function_str","hasOwnKey","Function","call","bind","Object","hasOwnProperty","slice","Array","prototype","_bind","eventName","callback","is_one","context","_typeof","Error","_each","_fire_func","args","apply","one","un","key_1","item_1","key_2","item_2","fire","setTimeout","fireSync","clear","onfire","global","options","extend","currentLocale","locale","warn","VERSION","newLocale","morePhrases","prefix","phrase","unset","newPhrases","result","smart_count","_","source","ret","prop","clone","arg","replacement","dollarRegex","dollarBillsYall","interpolate","count","texts","chosenText","split","delimeter","pluralTypes","langToPluralType","mapping","langs","l","langToTypeMap","pluralTypeToLanguages","en","trimRe","choosePluralForm","has","chinese","german","french","russian","czech","polish","icelandic","define","amd"],"mappings":"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","sourcesContent":["// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    //商品节点\r\n    slotPrefab: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    //滚动视图\r\n    scrollView: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    //列表大小\r\n    totalCount: 0\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {},\r\n//循环\r\n  init(home) {\r\n    this.heroSlots = [];\r\n    this.home = home;\r\n    for (let i = 0; i < this.totalCount.length; ++i) {\r\n      let heroSlot = this.addHeroSlot();\r\n      this.heroSlots.push(heroSlot);\r\n    }\r\n  },\r\n  addHeroSlot() {\r\n    //添加到场景\r\n    let heroSlot = cc.instantiate(this.slotPrefab);\r\n    this.scrollView.content.addChild(heroSlot);\r\n    return heroSlot;\r\n  },\r\n  show() {\r\n    this.node.emit(\"fade-in\");\r\n    this.home.toggleHomeBtns(false);\r\n  },\r\n  hide() {\r\n    this.node.emit(\"fade-out\");\r\n    this.home.toggleHomeBtns(false);\r\n  },\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //-- 滚动的速度\r\n        speed: 0,\r\n        //-- X轴边缘\r\n        resetX: 0\r\n    },\r\n\r\n    update (dt) {\r\n        \r\n        // if (D.game.state !== D.GameManager.State.Run) {\r\n        //     return;\r\n        // }\r\n        var x = this.node.x;\r\n        x += Global._bollSpeeds * dt;\r\n        \r\n        if (x <= this.resetX) {\r\n            x -= this.resetX;\r\n        }\r\n        this.node.x = x;\r\n    }\r\n});\r\n","\r\n\r\n cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        GameOverPoint: cc.Label,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n\r\n    },\r\n    init() {\r\n        this.GameOverPoint.string = Global._bollPointString.string\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","import { GetUserDatas } from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        B1: cc.Prefab,\r\n        B2: cc.Prefab,\r\n        B3: cc.Prefab,\r\n        C1: cc.Prefab,\r\n        S1: cc.Prefab,\r\n        BoxArray: [],\r\n        Track_map1: cc.Node,\r\n        Track_map2: cc.Node,\r\n        resetX: -1000,\r\n        GameOver: false, //开始是TRUE \r\n        point: cc.Label,\r\n        totalTime: cc.Label,\r\n        StartBox: cc.Node,\r\n        StartGameLose: cc.Node,\r\n        _bollTime: null,\r\n        sum: -1\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    onLoad() {\r\n        GetUserDatas()\r\n        Global._bollPointString = this.point\r\n        // console.log(cc.random0To1());\r\n        Global._bollGameOver = this.GameOver\r\n        //对象池\r\n        this.addPoolList()\r\n\r\n    },\r\n    addPoolList() {\r\n        this.towerPool = new cc.NodePool('PoolHandler');\r\n        this.towerPoolBox = new cc.NodePool('PoolHandler');\r\n        this.monster = new cc.NodePool('PoolHandler');\r\n        this.point = new cc.NodePool('PoolHandler');\r\n        this.speedSlice = new cc.NodePool('PoolHandler');\r\n\r\n        let initCount = 100;\r\n        let enemy = null, enemy2 = null, enemy3 = null, point = null, speedSlice = null\r\n\r\n        for (let i = 0; i < initCount; ++i) {\r\n            enemy = cc.instantiate(this.B1); // 创建节点\r\n            enemy2 = cc.instantiate(this.B2); // 创建节点\r\n            enemy3 = cc.instantiate(this.B3); // 创建节点\r\n            point = cc.instantiate(this.C1); // 创建节点\r\n            speedSlice = cc.instantiate(this.S1); // 创建节点\r\n\r\n            this.towerPool.put(enemy); // 通过 putInPool 接口放入对象池\r\n            this.towerPoolBox.put(enemy2); // 通过 putInPool 接口放入对象池\r\n            this.monster.put(enemy3); // 通过 putInPool 接口放入对象池\r\n            this.point.put(point)\r\n            this.speedSlice.put(speedSlice)\r\n        }\r\n\r\n    },\r\n\r\n    //生成的对象池\r\n    addPool(MType) {\r\n        let rand = cc.random0To1()\r\n        switch (MType) {\r\n            case 0:\r\n                if (rand > 0.7) {\r\n                    return this.getPool(this.towerPool, this.B1)\r\n                }\r\n                if (rand > 0.3 && rand < 0.7) {\r\n                    return this.getPool(this.towerPoolBox, this.B2)\r\n                }\r\n                if (rand < 0.3) {\r\n                    return this.getPool(this.monster, this.B3)\r\n                }\r\n            case 1:\r\n                return this.getPool(this.point, this.C1)\r\n\r\n            case 2:\r\n                return this.getPool(this.speedSlice, this.S1)\r\n\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    getPool(Pool, b) {\r\n        let enemy = null;\r\n        if (Pool.size() > 0) { // 通过 size 接口判断对象池中是否有空闲的对象\r\n            enemy = Pool.get(); //获取节点后，就会调用 MenuItem 里的 reuse 方法，完成点击事件的注册。当使用 menuItemPool.put(menuItemNode) 回收节点后，会调用 MenuItem 里的 unuse 方法，完成点击事件的反注册。\r\n        } else { // 如果没有空闲对象，也就是对象池中备用对象不够时，我们就用 cc.instantiate 重新创建\r\n            console.log('对象池没对象了');\r\n            enemy = cc.instantiate(b);\r\n        }\r\n        return enemy\r\n    },\r\n    //this.createEnemy(Track_map,)\r\n    createEnemy(Track_map, rx, ry, MType) {\r\n        let enemy = this.addPool(MType)\r\n        // enemy.height = cc.random0To1() * (500 - 200) + 200\r\n        // enemy.width = cc.random0To1() * (180 - 80) + 80\r\n        let _w = (Track_map.height / 4) //136\r\n        let _w1 = _w / 2   //68\r\n        let _h = (Track_map.width / 50)    //133.4     66.7\r\n        let _ry = ry % 50\r\n        if (rx > 1) { enemy.y = parseInt(_w * rx - _w1) }\r\n        if (rx < 2) { enemy.y = parseInt(_w1) }\r\n        enemy.x = parseInt(_h * _ry);\r\n        // console.log(rx + '-' + ry);\r\n        // console.log('X:' + enemy.x + 'Y:' + enemy.y);\r\n        Track_map.addChild(enemy);\r\n\r\n        // let _enemy = cc.moveBy(Boll.FloorSpeeds, cc.p(-this.Track_map.width / 2, -250));\r\n        // let _opacity = cc.fadeIn(1.0);\r\n        // let _scaleTo = cc.scaleTo(1, 1, 1.5)\r\n        // let _callFunc = cc.callFunc(this.removeNode, this, enemy)\r\n        // let _spawn = cc.spawn(_opacity, _enemy, _scaleTo)\r\n        // let _sequence = cc.sequence(_spawn, _callFunc)\r\n        // enemy.runAction(_sequence)\r\n        // console.log(enemy);\r\n\r\n    },\r\n    start() {\r\n        // 初始化所有数据\r\n        Global._bollPoint = 0\r\n        Global._bollSpeeds = 0\r\n\r\n    },\r\n    removeNode(Pool, enemy) {\r\n        Pool.put(enemy); // 和初始化时的方法一样，将节点放进对象池，这个方法会同时调用节点的 removeFromParent\r\n    },\r\n    GameTimes() {\r\n        if (Global._bollGameOver == false) {\r\n            // 在第六次执行回调时取消这个计时器\r\n            this.unschedule(this.GameTimes);\r\n        } else {\r\n            this.totalTime.string = '坚持时间:' + (this.sum += 1) + 's'\r\n        }\r\n    },\r\n    StartBarrier() {\r\n        this.sum = 0\r\n        var _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/BallSprint/Start\", _data, e => {\r\n            let _Object = JSON.parse(e)\r\n            if (_Object.code = 12000) {\r\n                let s = 6\r\n                for (const iterator of _Object.object) {\r\n                    // iterator.MType\r\n                    // iterator.Num\r\n                    // iterator.X\r\n                    // iterator.Y\r\n                    this.createEnemy(this.Track_map1, iterator.X, iterator.Y, iterator.MType)\r\n                    Global._bollSpeeds = -100\r\n                    // this.schedule(this.GameTimes, 1);\r\n                    s--\r\n                    // if (s < 1) {\r\n                    //     break;\r\n                    // }\r\n                }\r\n                this.CreatorBarrier(this.Track_map2)\r\n            }\r\n            Global._bollGameOver = true\r\n\r\n        })\r\n    },\r\n    CreatorBarrier(map) {\r\n        var _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/BallSprint/GetRunway\", _data, e => {\r\n            let _Object = JSON.parse(e)\r\n            if (_Object.code = 12000) {\r\n                for (const iterator of _Object.object) {\r\n                    this.createEnemy(map, iterator.X, iterator.Y, iterator.MType)\r\n                }\r\n            }\r\n        })\r\n    },\r\n\r\n    addSpeeds() {\r\n        Global._bollSpeeds = Global._bollSpeeds - 100\r\n        console.log(Global._bollSpeeds);\r\n\r\n    },\r\n    removeSpeeds() {\r\n        Global._bollSpeeds = Global._bollSpeeds + 100\r\n        console.log(Global._bollSpeeds);\r\n    },\r\n    update(dt) {\r\n        var t1 = this.Track_map1, t2 = this.Track_map2, x1 = this.Track_map1.x, x2 = this.Track_map2.x;\r\n        if (Global._bollGameOver) {\r\n            x1 += Global._bollSpeeds * dt;\r\n            x2 += Global._bollSpeeds * dt;\r\n        }\r\n        if (x1 <= -t1.width + -666) {\r\n            console.log('------1------');\r\n            this.loadMap(t1)\r\n            t1.removeAllChildren()\r\n            console.log('清空第一列' + t1.x);\r\n            t1.x = t1.width - 667;\r\n            if (Global._bollGameOver) {\r\n                this.CreatorBarrier(t1)\r\n                console.log('拉去下一面数据' + t1.x);\r\n            }\r\n\r\n        } else {\r\n            t1.x = x1;\r\n        }\r\n        if (x2 <= -t2.width + -666) {\r\n            console.log('-------2-----');\r\n            this.loadMap(t2)\r\n            t2.removeAllChildren()\r\n            console.log('清空第二列');\r\n            if (Global._bollGameOver) {\r\n\r\n                this.CreatorBarrier(t2)\r\n                console.log('拉去下一面数据');\r\n            }\r\n            t2.x = t1.width - 667;\r\n        } else {\r\n            t2.x = x2;\r\n        }\r\n        // }\r\n\r\n    },\r\n    loadMap(tNode) {\r\n        for (const iterator of tNode.children) {\r\n            if (iterator.name == 'track_b1') {\r\n                this.removeNode(this.towerPool, iterator)\r\n                console.log('-1-' + this.towerPool.size());\r\n            }\r\n            if (iterator.name == 'track_b2') {\r\n                this.removeNode(this.towerPoolBox, iterator)\r\n                console.log('-4-' + this.towerPoolBox.size());\r\n            }\r\n            if (iterator.name == 'track_b3') {\r\n                this.removeNode(this.monster, iterator)\r\n                console.log('-5-' + this.monster.size());\r\n            }\r\n            if (iterator.name == 'track_c1') {\r\n                this.removeNode(this.point, iterator)\r\n                console.log('-2-' + this.point.size());\r\n            }\r\n            if (iterator.name == 'track_s1') {\r\n                this.removeNode(this.speedSlice, iterator)\r\n                console.log('-3-' + this.speedSlice.size());\r\n            }\r\n        }\r\n    },\r\n\r\n    NextGame(e, n) {\r\n        if (n == 1) {  //再来一次\r\n            this.StartGameLose.scale = 0\r\n        }\r\n        if (n == 2) { //回去首页\r\n            this.StartGameLose.scale = 0\r\n            this.StartBox.scale = 1\r\n        }\r\n        Global._bollPointString.string = 0\r\n        Global._bollPoint = 0\r\n        this.totalTime.string = '坚持时间:0s'\r\n        this.Track_map1.x = -667\r\n        this.Track_map2.x = this.Track_map2.width - 667\r\n        console.log(this.Track_map1.x);\r\n        console.log(this.Track_map2.x);\r\n        this.Track_map1.removeAllChildren()\r\n        this.Track_map2.removeAllChildren()\r\n        Global._bollSpeeds = -100\r\n\r\n    },\r\n    LostBox() {\r\n\r\n    }\r\n});\r\n\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        User_money: cc.Label,\r\n        User_name: cc.Label,\r\n        User_id: cc.Label,\r\n        User_img: cc.Sprite,\r\n\r\n        AllPoint: cc.Label,\r\n        loseBox: cc.Node,\r\n\r\n        MyList: cc.Node,\r\n        AllList: cc.Node,\r\n        Scroll1: cc.ScrollView,\r\n        Scroll2: cc.ScrollView,\r\n\r\n        TabDay: {\r\n            default: [],\r\n            type: cc.Toggle\r\n        },\r\n        Label0: cc.Label,\r\n        Label1: cc.Label\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.User_name.string = Global.DataUsers.UserName;\r\n        this.User_id.string = 'ID:' + Global.DataUsers.Login;\r\n        this.User_money.string = Global.DataUsers.Balance;\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.User_img)\r\n        Global._bollLoseBox = this.loseBox\r\n        this.LoadPoint()\r\n        this.LoadPointList(1)\r\n        this.GameList()\r\n    },\r\n    MyListLoad(e, num) {\r\n        this.MyList.scale = num\r\n        if (num == 1) {\r\n            this.GameList()\r\n        }\r\n    },\r\n    AllListLoad(e, num) {\r\n        this.AllList.scale = num\r\n        if (num == 1) {\r\n            this.LoadPointList(1)\r\n        }\r\n    },\r\n\r\n    radioButtonClicked: function (toggle) {\r\n        var index = this.TabDay.indexOf(toggle);\r\n        switch (index) {\r\n            case 0:\r\n                this.LoadPointList(index)\r\n                break;\r\n            case 1:\r\n                this.LoadPointList(index)\r\n                break;\r\n            default:\r\n                this.LoadPointList(index)\r\n                break;\r\n        }\r\n    },\r\n    StatrGame() {\r\n        this.node.scale = 0\r\n    },\r\n    //%.98资金池总记录\r\n    LoadPoint() {\r\n        var _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/BallSprint/GetLsTradeTotal\", _data, e => {\r\n            let _Object = JSON.parse(e)\r\n            if (_Object.code = 12000) {\r\n                this.AllPoint.string = _Object.totals\r\n            }\r\n        })\r\n    },\r\n    //%.97资金池记录\r\n    LoadPointList(n) {\r\n        this.Scroll1.content.removeAllChildren()\r\n        var _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            Type: n\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/BallSprint/GetLsTradeTop\", _data, e => {\r\n            let _Object = JSON.parse(e)\r\n            if (_Object.code = 12000) {\r\n                if (n == 0) {\r\n                    this.Label0.string = _Object.totals\r\n                } else {\r\n                    this.Label1.string = _Object.totals\r\n                }\r\n                for (const iterator of _Object.object) {\r\n                    Global.loadPre('BollMyList', nodeList => {\r\n                        let com = nodeList.getComponentsInChildren(cc.Label)\r\n                        com[0].string = iterator.SortNum\r\n                        com[1].string = iterator.UserName\r\n                        com[2].string = iterator.WinGold\r\n                        com[3].string = iterator.UserGold\r\n                        Global.loaderUserIcon(iterator.Avatar, nodeList.getComponentsInChildren(cc.Sprite))\r\n                        this.Scroll1.content.addChild(nodeList)\r\n                    })\r\n                }\r\n                console.log(_Object);\r\n            }\r\n        })\r\n    },\r\n    //%.96游戏记录\r\n    GameList() {\r\n        this.Scroll2.content.removeAllChildren()\r\n        var _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/BallSprint/GetLsUserBallTrade\", _data, e => {\r\n            let _Object = JSON.parse(e)\r\n            if (_Object.code = 12000) {\r\n                for (const iterator of _Object.object) {\r\n                    Global.loadPre('BollMyList', nodeList => {\r\n                        let com = nodeList.getComponentsInChildren(cc.Label)\r\n                        com[0].string = iterator.TradeId\r\n                        com[1].string = iterator.EndTime\r\n                        com[2].string = iterator.WinGold\r\n                        com[3].string = iterator.Times\r\n                        this.Scroll2.content.addChild(nodeList)\r\n                    })\r\n                }\r\n            }\r\n        })\r\n    }\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas, AddWindow, WeixinLoginTime } from \"GetUserData\";\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    UserInfo: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    UserInfoImg: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    UserInfoId: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    UserInfoName: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    //用户信息\r\n    InfoBox: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    //设置\r\n    Setings: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    SetingsBtn: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    //活动页面\r\n    Activitys: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    //商店\r\n    ShopsBtn: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    // 金币\r\n    Gulds: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    GuldsSetings: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    Gold: cc.Label,\r\n\r\n    Audios: cc.AudioSource,\r\n\r\n    clikcMis: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //??\r\n    clickGameMis: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n\r\n    TurnTheScreen: cc.Node,\r\n    screenOrientation: '',\r\n    sMsg: cc.Label,\r\n    Invitations: cc.Node,//邀请\r\n\r\n    // 二维码\r\n    QcCode: cc.Sprite,\r\n    buttomMsg: cc.Label,\r\n    UserToName: cc.Label,\r\n    UserToId: cc.Label,\r\n    User_pic: cc.Sprite,\r\n\r\n    TotalAmount: cc.Label,\r\n    DirectlyUnderAmount: cc.Label,\r\n    LowerMemberAmount: cc.Label,\r\n    TotalCommission: cc.Label,\r\n    DirectlyUnderCommission: cc.Label,\r\n    LowerMemberCommission: cc.Label,\r\n\r\n    sPageView: cc.PageView,\r\n    sPageView_1: cc.Sprite,\r\n    sPageView_2: cc.Sprite,\r\n    sPageView_3: cc.Sprite,\r\n    sPageView_4: cc.Sprite,\r\n\r\n    nlayer: cc.Node,\r\n\r\n    myScrollView: cc.ScrollView,\r\n    AgentScrollView: cc.ScrollView,\r\n\r\n    qrCodeUrls: cc.Node,\r\n\r\n    Extext: cc.Node,\r\n\r\n    // 个人中心\r\n    MyName: cc.EditBox,\r\n    MyId: cc.Label,\r\n    MyIcon: cc.Sprite,\r\n    QsNumber: cc.Label,\r\n    ThunderNumber: cc.Label,\r\n    PigNumber: cc.Label,\r\n    QsWinNumber: cc.Label,\r\n    ThWinNumber: cc.Label,\r\n\r\n    ByGolds: cc.ScrollView,\r\n    BsGolds: cc.ScrollView,\r\n\r\n    ThunderScroll: cc.ScrollView,\r\n    QuestionScroll: cc.ScrollView,\r\n\r\n    pigScorll:cc.ScrollView\r\n\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  modification() {\r\n    let sss = this.Extext.getComponent(cc.EditBox).string\r\n    //   this.Extext.removeComponent(cc.EditBox)\r\n    //  let txt= this.Extext.addComponent(cc.Label)\r\n    //   txt.string  = '787878'\r\n    // console.log(this.Extext.getComponent(cc.EditBox));\r\n    // console.log(this.Extext.getComponent(cc.Label).string);\r\n    if (sss == '') {\r\n      this.Extext.getComponent(cc.EditBox).string = Global.DataUsers.UserName\r\n      return\r\n    }\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      UserName: sss\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/UpdateUserName\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        this.GetUserCenter()\r\n      }\r\n    })\r\n  },\r\n  openUserInfo(e, num) {\r\n    this.UserInfo.scale = num\r\n    this.clikcMis.play()\r\n  },\r\n  getQueryString(name) {\r\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n    var r = window.location.search.substr(1).match(reg);\r\n    if (r != null) return decodeURI(r[2]);\r\n    return null;\r\n  },\r\n  onLoad() {\r\n    console.log(cc.sys.localStorage.getItem(\"SJ\") != null);\r\n    this.scheduleOnce(() => {\r\n      this.SetInfo()\r\n    }, .5);\r\n\r\n\r\n    // console.log(navigator.userAgent.toLowerCase().match(/MicroMessenger/i) == \"micromessenger\");\r\n\r\n    this.getversion()\r\n\r\n    // 设置\r\n    this.SetingsBtn.on(\"touchstart\", this.SetingsFn, this);\r\n    //活动界面\r\n    this.Activitys.on(\"touchstart\", this.ActivityWin, this);\r\n    //金币\r\n    this.Gulds.on(\"touchstart\", this.AddWindows, this);\r\n    //音乐初始化\r\n    if (cc.sys.localStorage.getItem(\"Mic\") == null) {\r\n      cc.sys.localStorage.setItem(\"Mic\", 0.5);\r\n    }\r\n    if (cc.sys.localStorage.getItem(\"Sou\") == null) {\r\n      cc.sys.localStorage.setItem(\"Sou\", 0.5);\r\n    }\r\n    Global.Audios = this.Audios;\r\n    Global.clikcMis = this.clikcMis\r\n\r\n\r\n    Global.Audios.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.clikcMis.volume = cc.sys.localStorage.getItem(\"Sou\");\r\n\r\n    // //判断有没有账户\r\n    // console.log(cc.sys.localStorage.getItem('SJ') != 'undefined');\r\n    // console.log(cc.sys.localStorage.getItem('SJ') != null);\r\n\r\n  },\r\n  SetInfo() {\r\n    if (Global.DataUsers == null) {\r\n      return\r\n    }\r\n    console.log('设置数据');\r\n    // console.log(Global.DataUsers);\r\n    this.UserInfoName.string = Global.DataUsers.UserName;\r\n    this.MyName.string = Global.DataUsers.UserName;\r\n    this.MyId.string = 'ID:' + Global.DataUsers.Login;\r\n    this.UserInfoId.string = 'ID:' + Global.DataUsers.Login;\r\n    Global.loaderUserIcon(Global.DataUsers.UserIcon, this.UserInfoImg)\r\n    Global.loaderUserIcon(Global.DataUsers.UserIcon, this.MyIcon)\r\n    this.Gold.string = Global.DataUsers.Balance;\r\n    this.GetInvitation()\r\n    this.GetAgentRule()\r\n    this.GetAgentDataStatisticsInfo()\r\n    this.GetLsUserCharacterRecord()\r\n    //个人中心 金币购买\r\n    this.GetUserCenter()\r\n    this.GetRecords(1)\r\n    this.GetRecords(2)\r\n\r\n    //游戏记录\r\n    this.GetThunderTrades()\r\n    this.getexamgamerecords()\r\n\r\n  },\r\n  addEventListeners() {\r\n    this.checkOrient();\r\n    window.onorientationchange = this.screenOrientation;\r\n  },\r\n\r\n\r\n  //通过window.orientation来判断设备横竖屏\r\n  checkOrient() {\r\n    let _this = this\r\n    if (window.orientation == 0 || window.orientation == 180) {//竖屏的时候\r\n      this.screenOrientation = 'portrait';\r\n      // alert(window.orientation)\r\n      _this.TurnTheScreen.scale = 1\r\n    }\r\n    else if (window.orientation == 90 || window.orientation == -90) {//横屏的时候\r\n      this.screenOrientation = 'landscape';\r\n      _this.TurnTheScreen.scale = 0\r\n      // alert(window.orientation)\r\n    }\r\n  },\r\n  GoGameStart(e, d) {\r\n    cc.director.loadScene(d)\r\n  },\r\n\r\n\r\n  Invitation(e, n) {\r\n    if (n == 1) {\r\n      this.GetInvitation()\r\n      this.GetAgentRule()\r\n      this.GetAgentDataStatisticsInfo()\r\n      this.GetParentAgentWeeklyTransaction(1)\r\n      this.GetParentAgentWeeklyTransaction(2)\r\n    }\r\n    this.Invitations.scale = n\r\n    this.clikcMis.play()\r\n  },\r\n  Shops() {\r\n    cc.director.loadScene(\"Shop\");\r\n  },\r\n  ActivityWin() {\r\n    cc.director.loadScene(\"Activity\");\r\n  },\r\n\r\n  AddWindows() {\r\n    this.GuldsSetings.scale = 1\r\n    this.clikcMis.play()\r\n  },\r\n  closeGuldsSetings() {\r\n    this.GuldsSetings.scale = 0\r\n    this.clikcMis.play()\r\n  },\r\n  SetingsFn() {\r\n    let Infos = cc.instantiate(this.Setings);\r\n    this.node.addChild(Infos, 104);\r\n    Infos.setPosition(0, 0);\r\n    this.clikcMis.play()\r\n  },\r\n  //SignIn\r\n  GetPrefab(fab) {\r\n    cc.loader.loadRes(\"/prefab/\" + fab, (err, Prefab) => {\r\n      if (err) {\r\n        console.log(err)\r\n        return;\r\n      }\r\n      var newNode = cc.instantiate(Prefab);\r\n      newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n      cc.director.getScene().addChild(newNode);\r\n      // let _newNode = cc.find(\"sl/winText\", newNode)\r\n      // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n    });\r\n  },\r\n\r\n  CloseViews() {\r\n    this.node.destroy()\r\n  },\r\n  start() {\r\n  }\r\n  ,\r\n  GoToMsg() {\r\n    cc.director.loadScene(\"News\");\r\n  },\r\n  update(dt) {\r\n    this.sMsg.string = Global.socketMsg\r\n  },\r\n  getversion() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      \"clientVersion\": '0.0.1',\r\n      \"client\": 0\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/common/getversion\", data, e => {\r\n      let code = JSON.parse(e)\r\n\r\n      if (code.code == 12000) {\r\n\r\n\r\n      }\r\n    })\r\n  },\r\n  //二维码\r\n  qrCodeUrlFn(e, num) {\r\n    var nSprite = cc.instantiate(this.User_pic.node);\r\n    nSprite.setPosition(cc.v2(0, 0))\r\n    nSprite.scale = 2\r\n    this.qrCodeUrls.addChild(nSprite)\r\n    this.qrCodeUrls.scale = num;\r\n  },\r\n  //邀请                                                                               %.65获取代理本周佣金\r\n  GetInvitation() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetWeeklyTransaction\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.AccountType == 1) {\r\n        this.ApplicationBroker()\r\n      }\r\n      if (code.code == 12000 && code.AccountType == 2) {\r\n        let mo = code.model\r\n        let ser = code.user\r\n        let tips = code.tips\r\n        this.UserToName.string = ser.UserName\r\n        this.UserToId.string = ' ID:' + ser.Login\r\n        this.TotalAmount.string = mo.TotalAmount\r\n        this.DirectlyUnderAmount.string = mo.DirectlyUnderAmount\r\n        this.LowerMemberAmount.string = mo.LowerMemberAmount\r\n        this.TotalCommission.string = mo.TotalCommission\r\n        this.DirectlyUnderCommission.string = mo.DirectlyUnderCommission\r\n        this.LowerMemberCommission.string = mo.LowerMemberCommission\r\n        this.buttomMsg.string = tips[0] + tips[1]\r\n        Global.loaderUserIcon(code.qrCodeUrl, this.User_pic)\r\n      }\r\n    })\r\n  },\r\n  //                                                                                       %.64成为超级玩家\r\n  ApplicationBroker() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/ApplicationBroker\", data, e => {\r\n      let code = JSON.parse(e)\r\n      // console.log(code);\r\n      if (code.code == 12000) {\r\n\r\n      }\r\n    })\r\n  },\r\n  //%.                                                                                      66获取代理周数据统计\r\n  GetAgentDataStatisticsInfo() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetAgentDataStatisticsInfo\", data, e => {\r\n      let Agent = JSON.parse(e)\r\n      if (Agent.code == 12000) {\r\n        let AgentAll = Agent.model\r\n        let AgentCount = this.nlayer.getChildByName('ask_list_one').getComponentsInChildren(cc.Label)\r\n        AgentCount[0].string = '我的代理:' + AgentAll.ParentAgentCount\r\n        AgentCount[1].string = '本周新增:' + AgentAll.WeekParentAgentCount\r\n        AgentCount[2].string = '本月新增:' + AgentAll.MonthParentAgentCount\r\n\r\n        let Counts = this.nlayer.getChildByName('ask_list_two').getComponentsInChildren(cc.Label)\r\n        Counts[0].string = '我的代理:' + AgentAll.UserCount\r\n        Counts[1].string = '本周新增:' + AgentAll.WeekCount\r\n        Counts[2].string = '本月新增:' + AgentAll.MonthCount\r\n      }\r\n    })\r\n  },\r\n  // % .67获取直属代理\r\n  GetParentAgentWeeklyTransaction(num) {\r\n    if (num == 1) {\r\n      this.myScrollView.content.removeAllChildren()\r\n    }\r\n    if (num == 2) {\r\n      this.AgentScrollView.content.removeAllChildren()\r\n    }\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 1,\r\n      Type: num //1我的代理，2直属会员\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetParentAgentWeeklyTransaction\", data, e => {\r\n      let Transaction = JSON.parse(e)\r\n      if (Transaction.code == 12000) {\r\n        // console.log(Transaction.List);\r\n        for (const iterator of Transaction.List) {\r\n          Global.loadPre('wlist', newNode => {\r\n            Global.loaderUserIcon(iterator.Avatar, newNode.getChildByName('wSprite').getComponent(cc.Sprite))\r\n            newNode.getChildByName('nLabel').getComponent(cc.Label).string = iterator.UserName;\r\n            newNode.getChildByName('ILabel').getComponent(cc.Label).string = iterator.Login;\r\n            newNode.getChildByName('yLabel').getComponent(cc.Label).string = iterator.Amount;\r\n            if (num == 1) {\r\n              this.myScrollView.content.addChild(newNode)\r\n            }\r\n            if (num == 2) {\r\n              this.AgentScrollView.content.addChild(newNode)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n  },\r\n  //%.69获取佣金规则\r\n  GetAgentRule() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Agent/GetAgentRule\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        Global.loaderUserIcon(code.Data[0], this.sPageView_1)\r\n        Global.loaderUserIcon(code.Data[1], this.sPageView_2)\r\n        Global.loaderUserIcon(code.Data[2], this.sPageView_3)\r\n        Global.loaderUserIcon(code.Data[3], this.sPageView_4)\r\n      }\r\n    })\r\n  },\r\n\r\n\r\n\r\n  // % .26获交易数据\r\n  GetRecords(num) {\r\n    this.ByGolds.content.removeAllChildren()\r\n    this.BsGolds.content.removeAllChildren()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 10,\r\n      Type: num\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/GetRecords\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code);\r\n        // console.log(code.object);\r\n        // console.log(code.object.List[0]);\r\n        for (const iterator of code.object.List) {\r\n          Global.loadPre('boxs', nodeList => {\r\n            let com = nodeList.getComponentsInChildren(cc.Label)\r\n            com[0].string = iterator.Money\r\n            com[1].string = iterator.StateCode\r\n            com[2].string = iterator.Subtime\r\n            if (num == 1) {\r\n              this.ByGolds.content.addChild(nodeList)\r\n            }\r\n            if (num == 2) {\r\n              this.BsGolds.content.addChild(nodeList)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    })\r\n\r\n  },\r\n  //%.27获取用户中心\r\n  GetUserCenter() {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/GetUserCenter\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code.object);\r\n        this.QsNumber.string = '极速答题周对局：' + code.object.ExamNumber\r\n        this.ThunderNumber.string = '排雷先锋周对局：' + code.object.ThunderNumber\r\n        this.PigNumber.string = '集小猪佩奇总数量：' + code.object.LittlePigPekyNumber\r\n        this.QsWinNumber.string = code.object.ExamWinningRate + '%'\r\n        this.ThWinNumber.string = code.object.ThunderWinningRate + '%'\r\n        this.UserInfoName.string = code.object.UserName;\r\n        this.MyName.string = code.object.UserName;\r\n        this.MyId.string = 'ID:' + code.object.Login;\r\n        this.UserInfoId.string = 'ID:' + code.object.Login;\r\n      }\r\n      if (code.code == 12002) {\r\n        cc.director.loadScene('LoginPage')\r\n      }\r\n    })\r\n  },\r\n  GetThunderTrades() {\r\n    this.ThunderScroll.content.removeAllChildren()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 10,\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/GetThunderTrades\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code);\r\n        if (code.object.total != 0) {\r\n          for (const iterator of code.object.List) {\r\n            Global.loadPre('boxs', nodeList => {\r\n              // console.log(nodeList.getComponentsInChildren(cc.Label))\r\n              let com = nodeList.getComponentsInChildren(cc.Label)\r\n              com[0].string = iterator.PlusAmount > 0 ? '胜利' : '失败'\r\n              com[1].string = iterator.PlusAmount\r\n              com[2].string = iterator.ExitTime\r\n              this.ThunderScroll.content.addChild(nodeList)\r\n\r\n              // this.QuestionScroll.content.addChild(nodeList)\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })\r\n  },\r\n  getexamgamerecords() {\r\n    this.QuestionScroll.content.removeAllChildren()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 10,\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/exam/getexamgamerecords\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code);\r\n        if (code.object != '') {\r\n          for (const iterator of code.object) {\r\n            Global.loadPre('boxs', nodeList => {\r\n              let com = nodeList.getComponentsInChildren(cc.Label)\r\n              com[0].string = (iterator.RecyclingAmount - iterator.TradesAmount) > 0 ? '胜利' : '失败'\r\n              com[1].string = iterator.Profit\r\n              com[2].string = this.formatDateTime(iterator.ExitTime)\r\n              this.QuestionScroll.content.addChild(nodeList)\r\n              // console.log(this.formatDateTime(iterator.ExitTime));\r\n\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })\r\n  },\r\n  GetLsUserCharacterRecord(){\r\n    this.pigScorll.content.removeAllChildren()\r\n    let data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      PageIndex: 1,\r\n      PageSize: 10,\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetLsUserCharacterRecord\", data, e => {\r\n      let code = JSON.parse(e)\r\n      if (code.code == 12000) {\r\n        // console.log(code);\r\n        if (code.list != '') {\r\n          for (const iterator of code.list) {\r\n            Global.loadPre('pig', nodeList => {\r\n              let com = nodeList.getComponentsInChildren(cc.Label)\r\n              com[1].string = iterator.CharacterType\r\n              com[0].string = iterator.CreateTime\r\n              this.pigScorll.content.addChild(nodeList)\r\n              // console.log(this.formatDateTime(iterator.ExitTime));\r\n            })\r\n          }\r\n        }\r\n      }\r\n    })\r\n  },\r\n  formatDateTime(timeStamp) {\r\n    var date = new Date();\r\n    date.setTime(timeStamp * 1000);\r\n    var y = date.getFullYear();\r\n    var m = date.getMonth() + 1;\r\n    m = m < 10 ? ('0' + m) : m;\r\n    var d = date.getDate();\r\n    d = d < 10 ? ('0' + d) : d;\r\n    var h = date.getHours();\r\n    h = h < 10 ? ('0' + h) : h;\r\n    var minute = date.getMinutes();\r\n    var second = date.getSeconds();\r\n    minute = minute < 10 ? ('0' + minute) : minute;\r\n    second = second < 10 ? ('0' + second) : second;\r\n    return y + '-' + m + '-' + d + ' ' + h + ':' + minute + ':' + second;\r\n  }\r\n});\r\n// ","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        ViewWeb1: cc.WebView,\r\n        ViewWeb2: cc.WebView,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.startView(0,1)\r\n    },\r\n    startView(e, n) {\r\n        console.log(e);\r\n        console.log(n);\r\n        console.log(Global.DataUsers.Token);\r\n\r\n\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        \r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n            // let serverUrl = 'http://192.168.1.106:802'\r\n            let serverUrl = 'http://localhost:6667'\r\n            // let serverUrl = json.object.circleUrl\r\n            console.log(json.object.circleUrl);\r\n\r\n            if (n == 2) {\r\n                this.ViewWeb2.url = serverUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 10002\r\n            }\r\n            if (n == 1 ) {\r\n                this.ViewWeb1.url = serverUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 10001\r\n            }\r\n\r\n            console.log(this.ViewWeb1.url)\r\n            console.log(this.ViewWeb2.url)\r\n            console.log('--------------------------------------------------')\r\n        })\r\n    },\r\n    start() {\r\n        // let newNode = cc.director.getScene().getChildByName('Canvas')\r\n        // let WebView = cc.find(\"bg/WebView\", newNode).getComponent(cc.WebView)\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","/**\r\n * 关闭弹窗用，挂载到父组件canvas\r\n */\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    CloseWin: {\r\n      default: null,\r\n      type: cc.Node\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    this.CloseWin.on(\"touchstart\", this.CloseWins, this);\r\n  },\r\n\r\n  CloseWins() {\r\n      this.node.removeFromParent();\r\n  }\r\n\r\n  // update (dt) {},\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        // foo: {\n        //    default: null,\n        //    url: cc.Texture2D,  // optional, default is typeof default\n        //    serializable: true, // optional, default is true\n        //    visible: true,      // optional, default is true\n        //    displayName: 'Foo', // optional\n        //    readonly: false,    // optional, default is false\n        // },\n        // ...\n        camera: cc.Camera,\n        speeds: 20\n    },\n\n    // use this for initialization\n\n    onLoad: function () {\n        cc.director.getPhysicsManager().attachDebugDrawToCamera(this.camera);\n        cc.director.getCollisionManager().attachDebugDrawToCamera(this.camera);\n\n        cc.director.getCollisionManager().enabled = true;\n        // cc.director.getCollisionManager().enabledDebugDraw = true;\n        // cc.director.getCollisionManager().enabledDrawBoundingBox = true;\n\n        this.touchingNumber = 0\n    },\n    /**\n     * 当碰撞产生的时候调用\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionEnter: function (other) {\n        // this.node.color = cc.Color.RED;\n        this.touchingNumber++;\n        // cc.director.loadScene('BollLose')\n        //装上后操作\n    },\n    /**\n     * 当碰撞产生后，碰撞结束前的情况下，每次计算碰撞结果后调用\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionStay: function (other) {\n        // console.log('on collision stay');\n    },\n    /**\n     * 当碰撞结束后调用\n     * @param  {Collider} other 产生碰撞的另一个碰撞组件\n     * @param  {Collider} self  产生碰撞的自身的碰撞组件\n     */\n    onCollisionExit: function () {\n        this.touchingNumber--;\n        if (this.touchingNumber === 0) {\n            this.node.color = cc.Color.WHITE;\n        }\n\n\n\n    },\n\n    // called every frame, uncomment this function to activate update callback\n\n\n\n});\n","\r\nimport { GetUserDatas, GoLoadScene, LoginTimeOut } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        //开始按钮\r\n        StartSp: {\r\n            default: null,\r\n            type: cc.Button\r\n        },\r\n        // //开始加入资源\r\n        // StartLayout: {\r\n        //     default: null,\r\n        //     type: cc.Prefab\r\n        // },\r\n        //参加记录\r\n        Record: cc.Node,\r\n        //规则\r\n        Rule: cc.Node,\r\n        //邀请\r\n        SendAnInvitation: cc.Node,\r\n        //在线人数\r\n        OnlineNumber: cc.Node,\r\n        // 围观\r\n        CircuseeOnlookers: cc.Node,\r\n        //充值按钮\r\n        Recharge: cc.Node,\r\n        //金币\r\n        Gold: cc.Label,\r\n        UserName: cc.Label,\r\n        UserPic: cc.Sprite,\r\n        UserID: cc.Label,\r\n        ts: cc.Prefab,\r\n        GameAwait: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        },\r\n\r\n        ruleWin: cc.Node,\r\n        viewWin: cc.WebView,\r\n    },\r\n    onLoad() {\r\n        if (cc.sys.localStorage.getItem(\"Mic\") == null) {\r\n            cc.sys.localStorage.setItem(\"Mic\", 0.5);\r\n        }\r\n        Global.GameAwait = this.GameAwait\r\n        console.log(Global.GameAwait);\r\n\r\n        Global.GameAwait.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n        //判断有没有账户\r\n        this.SetInfo()\r\n        this.getView()\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        if (Global.DataUsers == null) {\r\n            return\r\n        }\r\n        this.UserName.string = Global.DataUsers.UserName;\r\n        this.UserID.string = 'ID:' + Global.DataUsers.Login;\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.Gold.string = Global.DataUsers.Balance;\r\n        this.OnlineNumber.getComponentInChildren(cc.Label).string = '在线人数:' + cc.sys.localStorage.getItem('online')\r\n    },\r\n    /**\r\n     * \r\n     * @param {*} e 默认的event\r\n     * @param {*} id 0是开始游戏 1是参观\r\n     */\r\n    startGame(e, id) {\r\n        if (this.Gold.string < 30) {\r\n            let ts = cc.instantiate(this.ts);\r\n            this.node.addChild(ts, 107);\r\n            ts.setPosition(0, 0);\r\n            return;\r\n        }\r\n        //游戏匹配倒计时图\r\n        if (this.Gold.string > 9) {\r\n            // let Game = cc.instantiate(this.StartLayout);\r\n            // this.node.addChild(Game, 106);\r\n            // Game.setPosition(0, 0);\r\n\r\n            let xhr = cc.loader.getXMLHttpRequest()\r\n            let _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                Type: id\r\n            }\r\n            Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/caileigame/inroom\", _data, e => {\r\n                //匹配进入游戏\r\n                console.log('匹配进入游戏')\r\n                let _GoToGame = JSON.parse(e);\r\n                Global._StageData = _GoToGame\r\n                if (_GoToGame.code != 12000) {\r\n                    LoginTimeOut(Global._StageData.code)\r\n                } else {\r\n                    cc.director.loadScene(\"Stage\")\r\n                }\r\n            })\r\n        }\r\n    },\r\n    openRuleWin(e, num) {\r\n        this.ruleWin.scale = num\r\n    },\r\n    getView() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n            console.log(json.object.circleUrl);\r\n            console.log(this.viewWin);\r\n            this.viewWin.url = json.object.circleUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 3\r\n            // this.viewWin.url = 'http://192.168.1.106:802/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 3\r\n        })\r\n    }\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        itemTemplate: { // item template to instantiate other items\r\n            default: null,\r\n            type: cc.Prefab\r\n        },\r\n        scrollView: {\r\n            default: null,\r\n            type: cc.ScrollView\r\n        },\r\n        spawnCount: 2, // how many items we actually spawn\r\n        spacing: 0, // space between each item\r\n        totalCount: 0, // how many items we need for the whole list\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n        this.content = this.scrollView.content;\r\n        this.items = []; // array to store spawned items\r\n\r\n        let _data = {\r\n            token: Global.DataUsers.Token,\r\n            userid: Global.DataUsers.UserId,\r\n            roomId: Global._StageData.Data\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/GetThunderTrades\", _data, e => {\r\n            let _e = JSON.parse(e);\r\n            let e_list = _e.object.List\r\n            this.initialize(_e.object.List);\r\n\r\n        })\r\n    },\r\n    initialize(List) {\r\n        let DataLists = List\r\n        // this.content.height = this.totalCount * (this.itemTemplate.height + this.spacing) + this.spacing; // get total content height\r\n        this.content.height = 45 * this.spawnCount\r\n        for (let i = 0; i < this.spawnCount; ++i) { // spawn items, we only need to do this once\r\n            let item = cc.instantiate(this.itemTemplate);\r\n            console.log(DataLists[i].UserID)\r\n            let _item = item.getComponentsInChildren(cc.Label)\r\n            _item[0].string = 'ID:' + DataLists[i].UserID\r\n            _item[1].string = DataLists[i].PlusAmount\r\n            // _item[2].string = \"第\" + (i + 1) + \"名\"\r\n            _item[2].string = \"\"\r\n            this.content.addChild(item);\r\n            item.setPosition(0, -item.height * (0.5 + i) - this.spacing * (i + 1));\r\n            // item.getComponent('Item').updateItem(i, i);\r\n            this.items.push(item);\r\n        }\r\n    },\r\n    GoToStart(){\r\n        cc.director.loadScene(\"GameStart\");\r\n    },\r\n    start() {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","module.exports = {\r\n    GetUserDatas(ns) {\r\n        if (cc.sys.localStorage.getItem('SJ') == 'undefined' || cc.sys.localStorage.getItem('SJ') == null) {\r\n            Global.GoLoadScene()\r\n            console.log('什么数据都没有');\r\n            return\r\n        }\r\n        Global.DataUsers = JSON.parse(decodeURIComponent(cc.sys.localStorage.getItem('SJ')))\r\n        let _data = {\r\n            token: Global.DataUsers.Token,\r\n            UserId: Global.DataUsers.UserId\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/getuserinfo\", _data, e => {\r\n            console.log('獲取用戶數據')\r\n            let sData = JSON.parse(e)\r\n            if (sData.code == 12000) {\r\n                console.log(sData);\r\n                cc.sys.localStorage.setItem(\"SJ\", encodeURIComponent(JSON.stringify(sData.object)));\r\n                Global.DataUsers = JSON.parse(JSON.stringify(sData.object))\r\n                if (ns == 1) {\r\n                    cc.director.loadScene('Home')\r\n                    Global.lobbySocket()\r\n                    // setTimeout(() => {\r\n                    // }, 1000);\r\n                }\r\n            }\r\n            if (sData.code == 12002) {\r\n                cc.sys.localStorage.removeItem('SJ')\r\n                return\r\n            }\r\n        })\r\n        return;\r\n    },\r\n    WeixinLoginTime(tok) {\r\n        let _data = {\r\n            token: tok,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/Weixin/WebLoginByToken\", _data, e => {\r\n            console.log('微信獲取用戶數據')\r\n            let sData = JSON.parse(e)\r\n            if (sData.code == 12000) {\r\n                console.log(sData);\r\n                console.log('微信獲取用戶數據成功')\r\n                Global.DataUsers = JSON.parse(JSON.stringify(sData.object))\r\n                cc.sys.localStorage.setItem(\"SJ\", encodeURIComponent(JSON.stringify(sData.object)));\r\n                Global.lobbySocket()\r\n                cc.director.loadScene('Home')\r\n\r\n            }\r\n        })\r\n        return true;\r\n    },\r\n    //登陆超时\r\n    LoginTimeOut(outCode) {\r\n        if (outCode != 12000) {\r\n            cc.sys.localStorage.removeItem('SJ')\r\n            Global.GoLoadScene()\r\n            Global.ws.close()\r\n            return;\r\n        }\r\n    },\r\n    //登陆框移动方法\r\n    SignInBoxRight(node, SignIn) {\r\n        let Logins = cc.instantiate(SignIn);\r\n        node.addChild(Logins, 100);\r\n        Logins.setPosition(-node.width, 0);\r\n        // let ViewWidth = node.width / 2 + SignIn.width / 2;\r\n        let SignInBox = cc.moveBy(0.2, cc.p(node.width, 0));\r\n        Logins.runAction(SignInBox);\r\n    },\r\n    //登陆框移动方法\r\n    SignInBoxLeft(node, TelBox) {\r\n        let PhoneViews = cc.instantiate(TelBox);\r\n        node.parent.addChild(PhoneViews, 101);\r\n        PhoneViews.setPosition(node.parent.width, 0);\r\n        // var ViewWidth = node.parent.width / 2 + TelBox.width / 2;\r\n        var SignInBox = cc.moveBy(1, cc.p(-node.parent.width, 0));\r\n        PhoneViews.runAction(SignInBox);\r\n    },\r\n    DestroyNode(node) {\r\n        node.destroy();\r\n    },\r\n    CloseWins(node) {\r\n        node.removeFromParent();\r\n    },\r\n    //添加弹窗到场景\r\n    AddWindow(node, prefab, x = 0, y = 0) {\r\n        let obj = cc.instantiate(prefab);\r\n        node.addChild(obj, 103);\r\n        obj.setPosition(x, y);\r\n    },\r\n    // 场景跳转\r\n\r\n}\r\n// Global.streamXHREventsToLabel(xhr, \"POST\",Global.serverUrl + \"/account/GetWebSocket\", JSON.stringify(data),e=>{})\r\nwindow.Global = {\r\n    serverUrl: 'http://192.168.1.200:819',\r\n    // serverUrl: 'http://192.168.1.168:819',\r\n    // serverUrl: 'http://h5.huizhisuo.com',\r\n    // serverUrl: 'http://h5.3dou.com',\r\n\r\n    streamXHREventsToLabel: function (xhr, method, url, _data, _fn, async = true) {\r\n        xhr.onreadystatechange = function () {\r\n            if (xhr.readyState == 4 && (xhr.status >= 200 && xhr.status < 400)) {\r\n                var response = xhr.responseText;\r\n                _fn(response) || function (response) { }\r\n                // console.log(response);\r\n            }\r\n        };\r\n        xhr.open(method, url, async);\r\n        xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded;charset=UTF-8\");\r\n        xhr.send(\"data=\" + JSON.stringify(_data))\r\n    },\r\n    DataUsers: null,\r\n    online: 0,\r\n    RoomUserLen: 0,\r\n    Audios: '',\r\n    //房间数据\r\n    _StageData: '',\r\n    //保存游戏中的用户数据\r\n    GameRoomData: '',\r\n    //保存金额列表\r\n    _Golds: '',\r\n    clientid: '',\r\n    questions: 0,\r\n    returnHome() {\r\n        if (Global.DataUsers == null) {\r\n            Global.GoLoadScene()\r\n            return\r\n        }\r\n    },\r\n    //加载头像图片\r\n    loaderUserIcon(url, nSprite) {\r\n        cc.loader.load({ url: url, type: 'png' }, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            nSprite.spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    loadPre(pre, fn) {\r\n        cc.loader.loadRes(\"/prefab/\" + pre, (err, Prefab) => {\r\n            if (err) {\r\n                console.log(err)\r\n                return;\r\n            }\r\n            var newNode = cc.instantiate(Prefab)\r\n            fn(newNode)\r\n        })\r\n    },\r\n    alertWindw(msg) {\r\n        let windowLabel = new cc.Node('Label');\r\n        let wLabel = windowLabel.addComponent(cc.Label);\r\n        wLabel.string = msg\r\n        windowLabel.color = new cc.Color(255, 0, 0)\r\n        windowLabel.zIndex = 999;\r\n        windowLabel.opacity = 0;\r\n        windowLabel.setPosition(cc.p(cc.director.getScene().getChildByName('Canvas').width / 2, cc.director.getScene().getChildByName('Canvas').height / 2))\r\n        cc.director.getScene().addChild(windowLabel)\r\n        windowLabel.runAction(cc.sequence(\r\n            cc.delayTime(0.5),\r\n            cc.fadeIn(0.5),\r\n            cc.delayTime(1),\r\n            cc.fadeOut(1),\r\n            cc.tintTo(2, 255, 255, 255)\r\n        ));\r\n    },\r\n    socketMsg: '恭喜玩家空空获得1210金币',\r\n    ws: '',\r\n    GoLoadScene() {\r\n        cc.director.loadScene('LoginPage')\r\n    },\r\n    lobbySocket() {\r\n        console.log('连接sk');\r\n\r\n        Global.ws = new WebSocket(Global.DataUsers.wsUrl);\r\n        Global.ws.onopen = (event) => {\r\n            console.log(\"サーバー　オペ\");\r\n            if (Global.ws.readyState === WebSocket.OPEN) {\r\n                // var room = {\r\n                //     Code: 100,\r\n                //     Data: Global.DataUsers.UserId,\r\n                //     Message: \"用户登录\"\r\n                // };\r\n                //Global.ws.send(JSON.stringify(room));\r\n                console.log(\"WebSocket 用户登录...！\");\r\n            } else {\r\n                console.log(\"WebSocket 准备好用户登录...！\");\r\n            }\r\n        };\r\n        Global.ws.onmessage = (event) => {\r\n            let evMsg = JSON.parse(event.data)\r\n            console.log(\"サーバーのメッセージ: \" + event.data);\r\n            Global.lobbyGetStatus(evMsg.Code, evMsg)\r\n\r\n        };\r\n        Global.ws.onerror = (event) => {\r\n            console.log(\"メッセージ エッロ！！\");\r\n            // this.schedule(function () {\r\n            //   // 这里的 this 指向 component\r\n            //   this.doSomething();\r\n            // }, 1, 99, 0);\r\n        };\r\n        Global.ws.onclose = (event) => {\r\n            console.log(\"サーバー　オフ.\");\r\n        };\r\n\r\n    },\r\n    lobbyGetStatus(x, evMsg) { //sk里面的id\r\n        switch (x) {\r\n            case 100:\r\n                Global.GoLoadScene()\r\n                break;\r\n            case 101:\r\n                console.log('101')\r\n                break;\r\n            case 102:\r\n                console.log('102')\r\n                break;\r\n            case 103:\r\n                Global.socketMsg = '恭喜玩家' + evMsg.Data.UserDisplayName + '获得' + evMsg.Data.Profit + '金币'\r\n                break;\r\n            case 104:\r\n                console.log('104')\r\n                Global.online = evMsg.Data\r\n                cc.sys.localStorage.setItem('online', evMsg.Data)\r\n                // { \"Success\": true, \"Data\": 3, \"Code\": 104, \"Message\": \"当前在线人数\" }\r\n                // Global.ws.close()\r\n                break;\r\n            default:\r\n                cc.sys.localStorage.removeItem('SJ')\r\n                Global.GoLoadScene()\r\n                break;\r\n        }\r\n    },\r\n    //获取收获\r\n    GetMessges(fn) {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            PageIndex: 1,\r\n            PageSize: 1\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/GetUserAddressList\", _data, e => {\r\n            let obj = JSON.parse(e).object\r\n            fn(obj)\r\n        })\r\n    },\r\n    //qiuqiu\r\n    _bollPoint: 0,\r\n    _bollPointString: null,\r\n    _bollSpeeds: 0,\r\n    _bollTime: null,\r\n    _bollGameOver:null\r\n};\r\n\r\n","cc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    Returns: {\r\n      default: null,\r\n      type: cc.Node\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    this.Returns.on(\r\n      \"touchstart\",\r\n      function() {\r\n        cc.director.loadScene(\"Home\");\r\n      },\r\n      this\r\n    );\r\n  },\r\n\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","cc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    //价格\r\n    GoodsPrice: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    GoodsName: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    GoodsQuantity: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n    //图标\r\n    SpIcon: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    //图标集\r\n    sfIcons: {\r\n      default: [],\r\n      type: cc.SpriteFrame\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    function getRandomInt(min, max) {\r\n      let ratio = cc.random0To1();\r\n      return min + Math.floor((max - min) * ratio);\r\n    }\r\n    this.GoodsPrice.string = \"$\" + getRandomInt(1, 100).toString();\r\n    this.SpIcon.SpriteFrame = this.sfIcons[getRandomInt(0, this.sfIcons)];\r\n  },\r\n\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        label: {\n            default: null,\n            type: cc.Label\n        },\n        // defaults, set visually when attaching this script to the Canvas\n        text: 'Hello, World!'\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.label.string = this.text;\n    },\n\n    // called every frame\n    update: function (dt) {\n\n    },\n});\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n    //声明属性用、\r\n    properties: {\r\n        userID: 20,\r\n        userName: \"Foobar\",\r\n        //当声明的属性为基本 JavaScript 类型时，可以直接赋予默认值：\r\n        height: 20, // number\r\n        type: \"actor\", // string\r\n        loaded: false, // boolean                \r\n        target: null, // object\r\n        //当声明的属性具备类型时（如：cc.Node，cc.Vec2 等），可以在声明处填写他们的构造函数来完成\r\n        target: cc.Node,\r\n        pos: cc.Vec2,\r\n        //当声明属性的类型继承自 cc.ValueType 时（如：cc.Vec2，cc.Color 或 cc.Rect），除了上面的构造函数，还可以直接使用实例作为默认值：\r\n        pos: new cc.Vec2(10, 20),\r\n        color: new cc.Color(255, 255, 255, 128),\r\n        //当声明属性是一个数组时，可以在声明处填写他们的类型或构造函数来完成声明\r\n        any: [], // 不定义具体类型的数组\r\n        bools: [cc.Boolean],\r\n        strings: [cc.String],\r\n        floats: [cc.Float],\r\n        ints: [cc.Integer],\r\n\r\n        values: [cc.Vec2],\r\n        nodes: [cc.Node],\r\n        frames: [cc.SpriteFrame],\r\n        //除了以上几种情况，其他类型我们都需要使用完整声明的方式来进行书写。\r\n\r\n        //有些情况下，我们需要为属性声明添加参数，这些参数控制了属性在 属性检查器 中的显示方式，以及属性在场景序列化过程中的行为\r\n        score: {\r\n            default: 0,\r\n            displayName: \"Score (player)\",\r\n            tooltip: \"The score of player\",\r\n        },\r\n        //在属性中设置了 get 或 set 以后，访问属性的时候，就能触发预定义的 get 或 set 方法。定义方法如下：\r\n        width: {\r\n            get: function() {\r\n                return this._width;\r\n            },\r\n            set: function(value) {\r\n                this._width = value;\r\n            }\r\n        }\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},|\r\n    //获得组件所在的节点\r\n    start() {\r\n        // var node = this.node;\r\n        // node.x = 100;\r\n\r\n        var label = this.getComponent(cc.Label);\r\n        var text = this.String + '111';\r\n\r\n        // Change the text in Label Component\r\n        label.string = text;\r\n    },\r\n\r\n    // update (dt) {},\r\n});","// const i18n = require('i18n');\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        label: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        itemID: 0\r\n    },\r\n\r\n    onLoad: function () {\r\n        this.node.on('touchend', function () {\r\n            console.log(\"Item \" + this.itemID + ' clicked');\r\n        }, this);\r\n    },\r\n\r\n    updateItem: function (tmplId, itemId) {\r\n        this.itemID = itemId;\r\n        // this.label.textKey = i18n.t(\"cases/02_ui/05_scrollView/Item.js.1\") + tmplId + ' Item#' + this.itemID;\r\n    },\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","import { GetUserDatas, AddWindow, LoginTimeOut } from \"GetUserData\";\r\n// var netControl = require('NetControl');\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    Maps: {\r\n      default: null,\r\n      type: cc.TiledMap\r\n    },\r\n    Player: {\r\n      default: null,\r\n      type: cc.TiledLayer\r\n    },\r\n    LayerOne: {\r\n      default: null,\r\n      type: cc.TiledLayer\r\n    },\r\n    // 上楼按钮\r\n    GotoUp: {\r\n      default: null,\r\n      type: cc.Button\r\n    },\r\n    StopUp: {\r\n      default: null,\r\n      type: cc.Button\r\n    },\r\n    TimesOut: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n\r\n    radioButton: {\r\n      default: [],\r\n      type: cc.Toggle\r\n    },\r\n\r\n    // Audios: cc.AudioSource,\r\n    Setings: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    },\r\n    //金币\r\n    Gold: cc.Label,         //金币总数\r\n    upGold: cc.Label,       //前进所需要的金币\r\n    allGold: cc.Label,      //金币池\r\n    SaveGolds: 0,            //保存總金額\r\n    //用户名字设置\r\n    User_Name: cc.Label,\r\n    User_Pic: cc.Sprite,\r\n    User_Id: cc.Label,\r\n    //当前楼层    \r\n    xplayer: 15,             //楼层数\r\n    cplayer: 15,             //楼层数\r\n    xUserNum: 0,             //设置人物位置\r\n    IsStop: 0,               //停止的楼层\r\n    xFloor: 1,               //记录当前玩家移动楼层\r\n    T1: '',\r\n    T2: '',\r\n    T3: '',\r\n    T4: '',\r\n    floorNext: cc.Label,      //下一层收益\r\n    floorForme: cc.Label,     //当前收益\r\n    ServerTimes: 0,           //记录服务器时间\r\n    GetServerTimesSave: 0,    //记录服务器的请求间隔时间\r\n    sThirty: 30,              //倒计时用的参数\r\n    sTimes: 0,                //开始时间\r\n    eTimes: 0,                //结束时间\r\n    eTneTime: 10,             //十秒的倒计时\r\n    eThreeTime: '--',            //三秒\r\n    tName: cc.Label,          //倒计时的文字\r\n    n1: 0,                    //爆炸上一楼有多少人\r\n    n2: 0,                    //爆炸此楼有多少人\r\n    bom: 0,                   //保存炸弹的楼层\r\n\r\n    anim: cc.Animation,\r\n    animbom: cc.Animation,\r\n    animOver: cc.Animation,\r\n    anim1: cc.Node,\r\n    anim2: cc.Node,\r\n    anim3: cc.Node,\r\n    //前进一步\r\n    goSource: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //倒数后开始声音\r\n    timeStartSource: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //扫雷匹配中\r\n    startTime: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //扫雷游戏中\r\n    bombTimeSource: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //游戏结果\r\n    gameOver: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //游戏胜利\r\n    gameWin: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    //排雷雷暴声音\r\n    bombTime: {\r\n      type: cc.AudioSource,\r\n      default: null\r\n    },\r\n    cat: true\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    // for (let i = 2; i < 12; i++) {\r\n    //   this.Player.setTileGID(0, i, 14, 0);\r\n    // }\r\n\r\n    console.log('---setTileOpacity---');\r\n    for (let x = Global.RoomUserLen + 1; x < 13; x++) {\r\n      console.log(this.Player.getTileGIDAt(x, 14));\r\n      this.Player.removeTileAt(x, 14)\r\n    }\r\n\r\n\r\n    this.startTime.play()\r\n    console.log('进入游戏界面')\r\n    this.SetInfo()          //设置用户数据\r\n    this.GetServerTimes()   //获取服务器时间接口\r\n    this.SetServerTimes()   //服务器时间自动计时\r\n    //判断有没有账户\r\n    // Global.Audios = this.Audios;\r\n    Global.goSource = this.goSource;\r\n    Global.timeStartSource = this.timeStartSource;\r\n    Global.startTime = this.startTime;\r\n    Global.bombTimeSource = this.bombTimeSource;\r\n    Global.gameOver = this.gameOver;\r\n    Global.gameWin = this.gameWin;\r\n    Global.bombTime = this.bombTime;\r\n    // Global.Audios.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.goSource.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.timeStartSource.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.startTime.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.bombTimeSource.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.gameWin.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    Global.gameOver.volume = cc.sys.localStorage.getItem(\"Mic\");\r\n    //将像素坐标转化为瓦片坐标，posInPixel：目标节点的position\r\n    let pos = this.Player.getPositionAt(0, 0);\r\n    let pos1 = this.Player.getPositionAt(3, 14); //Vec2 {x: 50, y: 400}\r\n    let pos2 = this.Player.getPositionAt(3, 13); //Vec2 {x: 100, y: 425}\r\n    let pos3 = this.Player.getPositionAt(3, 12); //Vec2 {x: 150, y: 450}\r\n\r\n\r\n\r\n\r\n\r\n    // this.Player.setTileGID(pos1, 3, 14, pos1);\r\n\r\n\r\n\r\n\r\n    // console.log(this.Player.setTexture()) //setTexture 设置纹理。\r\n    //选择人物前面+1 移动后面-1\r\n\r\n    //获取GID 没有就是0 用来判断地雷\r\n\r\n    // let three = 3\r\n    // this.T3 = function () {\r\n    //   if (three < 1) {\r\n    //     this.unschedule(this.T3);\r\n    //     this.anim.stop();\r\n    //   } else {\r\n    //     three--;\r\n    //   }\r\n    // };\r\n    // this.schedule(this.T3, 1);\r\n\r\n\r\n  },\r\n\r\n  start() {\r\n    this.Prepare()          //获取房间数据\r\n    this.nSocket()\r\n  },\r\n\r\n  //获取规则\r\n  GetBaseRoom() {\r\n    if (Global._StageData.Data == undefined) {\r\n      cc.director.loadScene('GameStart')\r\n      return\r\n    }\r\n    let _data = {\r\n      token: Global.DataUsers.Token,\r\n      userid: Global.DataUsers.UserId,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/getbaseroom\", _data, e => {\r\n      let _e = JSON.parse(e);\r\n      cc.sys.localStorage.setItem('_Golds', JSON.stringify(_e.object.rule.List));\r\n      // console.log(_e.object.rule.List)\r\n      this.CalculateGold()\r\n    })\r\n  },\r\n\r\n  loaderViewWin(gold) {\r\n    this.SetPrefab('Win', gold)\r\n  },\r\n\r\n  loaderViewWinLost(gold) {\r\n    this.SetPrefab('lose', gold)\r\n\r\n  },\r\n  SetPrefab(fab, gold) {\r\n    cc.loader.loadRes(\"/prefab/\" + fab, function (err, fab) {\r\n      if (err) {\r\n        console.log(err)\r\n        return;\r\n      }\r\n      var newNode = cc.instantiate(fab);\r\n      cc.director.getScene().addChild(newNode);\r\n      let _newNode = cc.find(\"sl/winText\", newNode)\r\n      _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n    });\r\n  },\r\n\r\n\r\n  // 获取准备房间信息 等待开始 60  \r\n  Prepare() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/caileigame/getroom\", _data, e => {\r\n      console.log('已获取房间数据')\r\n      let _StageData = JSON.parse(e);\r\n      if (_StageData.code == 12000) {\r\n        cc.sys.localStorage.setItem('_StageData', e);\r\n        let D = _StageData.object\r\n        this.eTimes = D.EndTimestamps;\r\n        this.sTimes = D.CurrentTimestamps\r\n        this.Gold.string = _StageData.Balance\r\n        Global.RoomUserLen = D.RoomUser.length\r\n        Global.GameRoomData = D.RoomUser;\r\n        this.CalculateAllGold()\r\n\r\n        // console.log(this.sThirty)\r\n        // console.log('设置结束时间：' + D.EndTimestamps)\r\n        // console.log('设置开始时间：' + D.CurrentTimestamps)\r\n        // console.log(D.CountdownType)\r\n        //当前游戏状态 1:等待开始,2:前进,3:开雷\r\n        if (D.CountdownType == 1) {\r\n          this.tName.string = '等待玩家..'\r\n          this.sThirty = D.EndTimestamps - D.CurrentTimestamps\r\n          this.unschedule(this.T1);\r\n          this.StartTimeOuts()\r\n        }\r\n        if (D.CountdownType == 2) {\r\n          this.cat = false\r\n          this.tName.string = '上一层'\r\n          this.eTneTime = D.EndTimestamps - D.CurrentTimestamps\r\n          // this.eTneTime = 10\r\n          this.unschedule(this.T2);\r\n          this.GameTimeOuts()\r\n        }\r\n        if (D.CountdownType == 3) {\r\n          this.tName.string = '排雷中...'\r\n          this.TimesOut.string = '--';\r\n          // this.eThreeTime = 3\r\n          this.unschedule(this.T2); //爆炸的时候清除第二个定时器\r\n          // this.unschedule(this.T3);\r\n          // this.BomTimeOuts()\r\n        }\r\n        console.log('参的咸鱼')\r\n        console.log(D.RoomUser)\r\n        this.SetGameRoomData()\r\n        \r\n      } else {\r\n        console.log('GetRoom 错误，在房间躺枪了')\r\n      }\r\n    })\r\n  },\r\n  // 设置房间数据\r\n  SetGameRoomData() {\r\n    Global.GameRoomData.forEach((v, i) => {\r\n      if (v.UserId == Global.DataUsers.UserId) {\r\n        //设置人物位置数据\r\n        this.xUserNum = i + 2;\r\n        console.log('自己在' + v.CurrentFloor);\r\n        this.xplayer = (15 - v.CurrentFloor)\r\n        if (this.cat) {\r\n          this.Player.setTileGID(38, this.xUserNum, v.CurrentFloor > 0 ? this.xplayer : 14, 38);\r\n        }\r\n        \r\n        console.log('楼层赋值' + this.xUserNum)\r\n        console.log('楼层' + this.xplayer)\r\n      }\r\n\r\n      if (v.UserId != Global.DataUsers.UserId) {\r\n        //设置人物位置数据\r\n        this.cplayer = (15 - v.CurrentFloor)\r\n        if (this.cat) {\r\n          this.Player.setTileGID(28, (i + 2), v.CurrentFloor > 0 ? this.cplayer : 14, 28);\r\n        }\r\n        console.log('--------------楼层赋值----------------')\r\n      }\r\n    })\r\n\r\n\r\n  },\r\n\r\n  //上一楼\r\n  GoToUpFn(types) {\r\n    console.log(types)\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      Roomnumberid: Global._StageData.Data,\r\n      Type: types\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/gameaction\", _data, e => {\r\n      let _StageData = JSON.parse(e);\r\n      console.log(_StageData)\r\n      if (_StageData.code == 12000) {\r\n        this.IsStop = _StageData.type\r\n      } else {\r\n        console.log(_StageData.message)\r\n        console.log('在房间躺枪了上一层')\r\n      }\r\n    })\r\n  },\r\n  //前进\r\n  ClickGotoUp(e, n) {\r\n    console.log(\"前进\");\r\n    this.GoToUpFn(n)\r\n    this.xFloor++\r\n    console.log(this.xUserNum);\r\n    console.log(this.xplayer);\r\n    let gid = this.Player.getTileGIDAt(this.xUserNum, this.xplayer);\r\n    console.log('GID' + gid)\r\n    this.moveToPlayer(this.xUserNum, this.xplayer);\r\n    this.ButtonType(2)\r\n    this.CalculateAllGold()\r\n    this.CalculateGold()\r\n    this.goSource.play()\r\n  },\r\n  //不走\r\n  StopPlayer(e, n) {\r\n    console.log(\"不走了\");\r\n    this.GoToUpFn(n)\r\n    //前进按钮设置false\r\n    this.ButtonType(2)\r\n  },\r\n\r\n  //移动人物用\r\n  moveToPlayer(n, x) {\r\n    //获取玩家\r\n    let players = this.Player.getTileAt(n, x);\r\n    //获取玩家GID\r\n    let gid = this.Player.getTileGIDAt(n, x);\r\n    console.log(gid)\r\n\r\n    // 设置玩家运动\r\n    // let moveTo = cc.moveBy(1, cc.p(50, 25)); //x=50 y=25 z=50\r\n    let moveTo = cc.moveBy(0.1, cc.p(10, 100)); //x=50 y=25 z=50\r\n    //回调切换位置\r\n    let finish = cc.callFunc(() => {\r\n      //删除原坐标\r\n      this.Player.removeTileAt(n, x);\r\n      let F = x - 1;\r\n      //设置新坐标   \r\n      this.Player.setTileGID(gid, n, F, gid);\r\n      // this.xplayer = F;\r\n    }, players);\r\n    //顺序执行\r\n    let mAcion = cc.sequence(moveTo, finish);\r\n    // 启动运动\r\n    // players.runAction(moveTo);\r\n    players.runAction(mAcion);\r\n    //运动结束后重新设置GID\r\n  },\r\n\r\n  //服务器计时器\r\n  SetServerTimes() {\r\n    this.schedule(function () {\r\n      // 这里的 this 指向 component\r\n      if (this.GetServerTimesSave == 10) {\r\n        this.GetServerTimes()\r\n        this.GetServerTimesSave = 0\r\n        return;\r\n      }\r\n      this.GetServerTimesSave++;\r\n      this.ServerTimes++;\r\n      // console.log('我是计时器')\r\n      // console.log(this.GetServerTimesSave)\r\n      // console.log(this.ServerTimes)\r\n    }, 1);\r\n  },\r\n  //获取服务器时间接口\r\n  GetServerTimes() {\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/getheartbeat\", _data, e => {\r\n      let obj = JSON.parse(e)\r\n      this.ServerTimes = obj.CurrentTime\r\n      // console.log('获取服务器时间：' + obj.CurrentTime)\r\n    })\r\n  },\r\n\r\n  StartTimeOuts() {\r\n    this.T1 = function () {\r\n      if (this.sThirty < 1) {\r\n        this.unschedule(this.T1);\r\n        //启动十秒倒计时\r\n      } else {\r\n        let x = this.sThirty - 1;\r\n        this.TimesOut.string = x;\r\n        this.sThirty = x;\r\n      }\r\n    };\r\n    this.schedule(this.T1, 1);\r\n    // 上面的计时器将在10秒后开始计时，每5秒执行一次回调，重复3次。\r\n  },\r\n  GameTimeOuts() {\r\n    this.T2 = function () {\r\n      if (this.eTneTime < 1) {\r\n        // this.GetServerTimes()\r\n        this.unschedule(this.T2);\r\n      } else {\r\n        // this.unschedule(this.T2);\r\n        let x = this.eTneTime - 1;\r\n        this.TimesOut.string = x;\r\n        this.eTneTime = x;\r\n      }\r\n    };\r\n    this.schedule(this.T2, 1);\r\n  },\r\n  BomTimeOuts() {\r\n    this.T3 = function () {\r\n      if (this.eThreeTime < 1) {\r\n        // this.GetServerTimes()\r\n        this.unschedule(this.T3);\r\n        this.anim.stop();\r\n      } else {\r\n        // this.unschedule(this.T3);\r\n        let x = this.eThreeTime - 1;\r\n        this.TimesOut.string = x;\r\n        this.eThreeTime = x;\r\n      }\r\n    };\r\n    this.schedule(this.T3, 1);\r\n  },\r\n  nSocketTime() {\r\n    this.T4 = () => {\r\n      this.nSocket()\r\n    };\r\n    this.schedule(this.T4, 5);\r\n  },\r\n  CalculateAllGold() {\r\n    let s = 0\r\n    Global.GameRoomData.forEach((v, i) => {\r\n      s += v.Amount\r\n    })\r\n    this.allGold.string = s;\r\n    this.SaveGolds = s\r\n    this.CalculateForm()\r\n  },\r\n\r\n  CalculateForm() {\r\n    let numbs = 0, frome = 0, next = 0;\r\n    Global.GameRoomData.forEach((v, i) => {\r\n      if (this.xFloor == v.CurrentFloor) {\r\n        numbs++\r\n        console.log('计算' + numbs)\r\n        console.log(this.xFloor == v.CurrentFloor)\r\n      }\r\n      // c = c < v.CurrentFloor ? v.CurrentFloor : c;\r\n    })\r\n    if (numbs != 0) {\r\n      frome = parseInt(this.SaveGolds / numbs)\r\n      next = parseInt(parseInt(this.SaveGolds) + parseInt(this.upGold.string) / numbs)\r\n      this.floorForme.string = frome;\r\n      this.floorNext.string = next\r\n    }\r\n  },\r\n\r\n  //金币计算\r\n  CalculateGold() {\r\n    Global._Golds = JSON.parse(cc.sys.localStorage.getItem('_Golds'))\r\n    for (const iterator of Global._Golds) {\r\n      if (iterator.Floor == (this.xFloor + 1)) {\r\n        this.upGold.string = iterator.Chip\r\n      }\r\n      if (iterator.Floor == this.xFloor) {\r\n        this.Gold.string = this.Gold.string - iterator.Chip\r\n      }\r\n    }\r\n\r\n\r\n  },\r\n\r\n  // 退出房间\r\n  OutRoom() {\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/outroom\", _data, e => {\r\n      let _Stage = JSON.parse(e);\r\n      if (_Stage.code == 12000) {\r\n        cc.director.loadScene(\"Home\")\r\n        console.log('退出房间成功');\r\n        this.unschedule(this.T1);\r\n        this.unschedule(this.T2);\r\n      }\r\n    })\r\n  },\r\n\r\n \r\n  /**\r\n * 设置按钮\r\n */\r\n  SetingBox() {\r\n    AddWindow(this.node.parent, this.Setings, 0, 0);\r\n  },\r\n  // 账户数据设置\r\n  SetInfo() {\r\n    Global.loaderUserIcon(Global.DataUsers.UserIcon, this.User_Pic)\r\n    this.User_Name.string = Global.DataUsers.UserName;\r\n    this.User_Id.string = 'ID:' + Global.DataUsers.Login;\r\n    this.GetBaseRoom()\r\n  },\r\n  nSocket() {\r\n    var ws = new WebSocket(Global.DataUsers.wsUrl);\r\n    ws.onopen = (event) => {\r\n      this.unschedule(this.T4);\r\n      console.log(\"サーバー　オペ\");\r\n      if (ws.readyState === WebSocket.OPEN) {\r\n        var room = {\r\n          Code: 101,\r\n          Data: {\r\n            roomId: Global._StageData.Data,\r\n            userId: Global.DataUsers.UserId,\r\n            token: Global.DataUsers.Token,\r\n          }\r\n        };\r\n\r\n        ws.send(JSON.stringify(room));\r\n        console.log(\"WebSocket 房间...！\");\r\n      } else {\r\n        console.log(\"WebSocket 准备好房间卫星发射...！\");\r\n      }\r\n    };\r\n    ws.onmessage = (event) => {\r\n      // console.log(\"サーバーのメッセージ: \" + event.data);\r\n      let aData = JSON.parse(event.data).Data.Status\r\n      let UserID = JSON.parse(event.data).Data.UserID\r\n      let Floor = JSON.parse(event.data).Data.Floor\r\n      this.GetStatus(aData, UserID, Floor, ws)\r\n    };\r\n    ws.onerror = (event) => {\r\n      console.log(\"メッセージ エッロ！！\");\r\n      // this.schedule(function () {\r\n      //   // 这里的 this 指向 component\r\n      //   this.doSomething();\r\n      // }, 1, 99, 0);\r\n    };\r\n    ws.onclose = (event) => {\r\n      console.log(\"サーバー　オフ.\");\r\n      // this.nSocketTime()\r\n    };\r\n\r\n  },\r\n\r\n\r\n  GetStatus(x, u, f, ws) { //sk里面的id\r\n    switch (x) {\r\n      case 0:\r\n        console.log('什么宝物都没有')\r\n        break;\r\n      case 1:\r\n        console.log('有人参战')\r\n        this.Prepare()\r\n        break;\r\n      case 2:\r\n        console.log('有人观战')\r\n        break;\r\n      case 3:\r\n        console.log('准备战斗')\r\n        break;\r\n      case 4:\r\n        console.log('取消准备')\r\n        break;\r\n      case 5:\r\n        console.log('开始游戏')\r\n        this.Prepare()\r\n        this.startTime.stop()\r\n        this.timeStartSource.play()\r\n        this.scheduleOnce(() => {\r\n          this.bombTimeSource.play()\r\n        }, 1)\r\n\r\n        this.CalculateGold()\r\n        this.ButtonType(1)\r\n        break;\r\n      case 6:\r\n        console.log('上一层楼')\r\n        this.Prepare()\r\n        Global.GameRoomData.forEach((v, i) => {\r\n          console.log('移动其他玩家的棋子')\r\n          if (v.UserId == u && v.UserId != Global.DataUsers.UserId) {\r\n            //设置人物位置数据\r\n            this.moveToPlayer((i + 2), (15 - v.CurrentFloor));\r\n            this.CalculateGold()\r\n          }\r\n        })\r\n        break;\r\n      case 7:\r\n        console.log('停住')\r\n        if (u == Global.DataUsers.UserId) {\r\n          this.IsStop = 1\r\n        }\r\n        break;\r\n      case 8:\r\n        console.log('退出游戏')\r\n        break;\r\n      case 9:\r\n        this.ButtonType(2)\r\n        console.log('游戏结束')\r\n        this.Prepare()\r\n        this.scheduleOnce(() => {\r\n          // 这里的 this 指向 component\r\n          this.Bomfn(x, f)\r\n        }, 4);\r\n        break;\r\n      case 10:\r\n        console.log('解散房间')\r\n        ws.close()\r\n        break;\r\n      case 11:\r\n        this.aAnimationTimes()\r\n        this.ButtonType(2)\r\n        // this.Prepare()  //获取爆炸倒计时\r\n        console.log('要爆炸了')\r\n        break;\r\n      case 12:\r\n        console.log('爆炸了')\r\n        this.bom = f\r\n        this.aAnimationBom()\r\n        break;\r\n      case 13:\r\n        console.log('没死人')\r\n        this.aAnimationTimesOver()\r\n        this.ButtonType(1)\r\n        this.Prepare()\r\n        break;\r\n      case 14:\r\n        console.log('开始失败重新倒计时')\r\n        this.Prepare()\r\n        break;\r\n      case 15:\r\n        console.log('未准备的更改为观战')\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  //动画1\r\n  aAnimationTimes() {\r\n    let aAnimation1 = this.anim.play();\r\n    aAnimation1.repeatCount = 1;\r\n    this.anim1.runAction(cc.sequence(\r\n      cc.delayTime(0.1),\r\n      cc.fadeIn(0.5),\r\n      cc.delayTime(1),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ));\r\n  },\r\n  aAnimationBom() {\r\n    this.bombTime.play()\r\n    let aAnimation1 = this.animbom.play();\r\n    aAnimation1.repeatCount = 1;\r\n    this.anim2.runAction(cc.sequence(\r\n      cc.delayTime(0.5),\r\n      cc.fadeIn(1),\r\n      cc.delayTime(1),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ))\r\n    this.scheduleOnce(() => {\r\n      //咸鱼在当前的爆炸层\r\n      const arr = [14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4]\r\n      for (let i = 11; i > 1; i--) {\r\n        let gid = this.Player.getTileGIDAt(i, arr[this.bom - 1]);\r\n        if (gid != 0) {\r\n          this.Player.removeTileAt(i, arr[this.bom - 1]);\r\n          this.Player.setTileGID(37, i, arr[this.bom - 1], 37);\r\n        }\r\n        //爆炸的楼层 \r\n        this.LayerOne.setTileGID(40, (i + 1), arr[(this.bom - 2)], 40);\r\n      }\r\n    }, 2.2);\r\n  },\r\n  aAnimationTimesOver() {\r\n    let aAnimation1 = this.animOver.play();\r\n    aAnimation1.repeatCount = 1;\r\n    this.anim3.runAction(cc.sequence(\r\n      cc.delayTime(0),\r\n      cc.fadeIn(0.5),\r\n      cc.delayTime(0),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ));\r\n\r\n  },\r\n  //1 释放按钮  2 禁止按钮 && this.IsStop != 1\r\n  ButtonType(a) {\r\n    if (a == 1 && this.IsStop != 1) {\r\n      this.GotoUp.interactable = true;\r\n      this.StopUp.interactable = true;\r\n    }\r\n    if (a == 2) {\r\n      this.GotoUp.interactable = false;\r\n      this.StopUp.interactable = false;\r\n    }\r\n  },\r\n  Bomfn(x, f) {\r\n    let dot = false;\r\n    let _f;\r\n    /***\r\n     * 爆炸的输赢逻辑\r\n     */\r\n    if (this.bom != 0) {\r\n      Global.GameRoomData.forEach((v, i) => {\r\n        _f = this.bom - 1;\r\n        v.CurrentFloor == _f ? this.n1++ : ''\r\n        v.CurrentFloor == this.bom ? this.n2++ : ''\r\n        i < 1 ? dot = true : ''\r\n      })\r\n      if (dot && this.xFloor == this.bom) {\r\n        console.log(this.xFloor)\r\n        //如果上一层没有人就赢了  否则 输了\r\n        if (this.n1 != 0) { //后面有人就输了\r\n          console.log('你输了')\r\n          this.WinLoseData(2)\r\n          return;\r\n        } else {\r\n          this.WinLoseData(1)\r\n          console.log('你赢了')\r\n          return;\r\n        }\r\n      }\r\n      if (dot && this.xFloor == _f) {\r\n        if (this.n2 > 0) { //你前面有人\r\n          this.WinLoseData(1)\r\n          console.log('就赢了2')\r\n          return;\r\n        }\r\n      }\r\n      if (dot && this.xFloor != this.bom && this.n2 == 0 && this.n1 == 0) {\r\n        this.WinLoseData(1)\r\n        console.log('你赢了3')\r\n      } else {\r\n        this.WinLoseData(2)\r\n        console.log('你输了3')\r\n      }\r\n    }\r\n    /***\r\n     * 没爆炸的逻辑\r\n     * 爆発の階段　bomb　　\r\n     * 状態階段ｘ\r\n     */\r\n\r\n    if (this.bom == 0 && x == 9) {\r\n      //位置  人物坐标  瓦片位置\r\n      if (this.xFloor == f) {\r\n        this.WinLoseData(1)\r\n        console.log('你赢了')\r\n      } else {\r\n        console.log('你输了2')\r\n        this.WinLoseData(2)\r\n      }\r\n    }\r\n\r\n  },\r\n  WinLoseData(states) {\r\n    let _data = {\r\n      token: Global.DataUsers.Token,\r\n      userid: Global.DataUsers.UserId,\r\n      roomnumberid: Global._StageData.Data\r\n    }\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/caileigame/GetThunderTradesByThunderRoomID\", _data, e => {\r\n      let _e = JSON.parse(e);\r\n      let lists = _e.object.List\r\n\r\n      lists.forEach((v, i) => {\r\n        if (v.UserID == Global.DataUsers.UserId) {\r\n          //设置人物位置数据\r\n          if (states == 1) {\r\n            this.loaderViewWin(v.PlusAmount)\r\n            this.gameWin.play()\r\n          }\r\n          if (states == 2) {\r\n            this.loaderViewWinLost(v.PlusAmount)\r\n            this.gameOver.play()\r\n          }\r\n        }\r\n\r\n      })\r\n    })\r\n  },\r\n  update(dt) {\r\n\r\n  },\r\n});\r\n// console.log(this.Maps.getMapSize()) //getMapSize 设置地图大小。\r\n// console.log(this.Maps.setMapSize()) //setMapSize 设置地图大小。\r\n// console.log(this.Maps.getTileSize()) //getTileSize 获取地图背景中 tile 元素的大小。\r\n// console.log(this.Maps.setTileSize()) //setTileSize 设置地图背景中 tile 元素的大小。\r\n// console.log(this.Maps.getMapOrientation()) //getMapOrientation 获取地图方向。\r\n// console.log(this.Maps.setMapOrientation()) //setMapOrientation 设置地图方向。\r\n// console.log(this.Maps.getObjectGroups()) //getObjectGroups 获取所有的对象层。\r\n// console.log(this.Maps.getProperties()) //getProperties 获取地图的属性。\r\n// console.log(this.Maps.setProperties()) //setProperties 设置地图的属性。\r\n// console.log(this.Maps.allLayers()) //allLayers 返回包含所有 layer 的数组。\r\n// console.log(this.Maps.getLayer(\"roles\")) //getLayer 获取指定名称的 layer。\r\n// console.log(this.Maps.getObjectGroup(\"roles\")); //getObjectGroup 获取指定的 TMXObjectGroup。\r\n// console.log(this.Maps.getProperty()) //getProperty 通过属性名称，获取指定的属性。\r\n// console.log(this.Maps.getPropertiesForGID()) //getPropertiesForGID 通过 GID ，获取指定的属性。\r\n// console.log(this.Maps.update()) //update 如果该组件启用，则每帧调用 update。\r\n// console.log(this.Maps.lateUpdate()) //lateUpdate 如果该组件启用，则每帧调用 LateUpdate。\r\n\r\n// console.log(this.Player.getLayerName()) //getLayerName 获取层的名称。\r\n// console.log(this.Player.SetLayerName()) //getLayerName 获取层的名称。\r\n// console.log(this.Player.getProperty()) //getProperty 获取指定属性名的值。\r\n// console.log(this.Player.getPositionAt(0,0)) //getPositionAt 获取指定 tile 的像素坐标。\r\n// console.log(this.Player.removeTileAt()) //removeTileAt 删除指定坐标上的 tile。\r\n// console.log(this.Player.setTileGID(2, 14)) //setTileGID 设置给定坐标的 tile 的 gid (gid = tile 全局 id)， tile 的 GID 可以使用方法 “tileGIDAt” 来获得。如果一个 tile 已经放在那个位置，那么它将被删除。\r\n// console.log(this.Player.getTileGIDAt(2,14)) //getTileGIDAt 通过给定的 tile 坐标、flags（可选）返回 tile 的 GID. 如果它返回 0，则表示该 tile 为空。该方法要求 tile 地图之前没有被释放过(如：没有调用过layer.releaseMap()).\r\n// console.log(this.Player.getTileAt(2,14)) //getTileAt 通过指定的 tile 坐标获取对应的 tile(Sprite)。 返回的 tile(Sprite) 应是已经添加到 TMXLayer，请不要重复添加。 这个 tile(Sprite) 如同其他的 Sprite 一样，可以旋转、缩放、翻转、透明化、设置颜色等。 你可以通过调用以下方法来对它进行删除:layer.removeChild(sprite, cleanup); 或 layer.removeTileAt(cc.v2(x,y));\r\n// console.log(this.Player.releaseMap()) //releaseMap 从内存中释放包含 tile 位置信息的地图。除了在运行时想要知道 tiles 的位置信息外，你都可安全的调用此方法。如果你之后还要调用 layer.tileGIDAt(), 请不要释放地图.\r\n// console.log(this.Player.setContentSize()) //setContentSize 设置未转换的 layer 大小。\r\n// console.log(this.Player.getTexture()) //getTexture 获取纹理。\r\n// console.log(this.Player.setTexture()) //setTexture 设置纹理。\r\n// console.log(this.Player.setTileOpacity()) //setTileOpacity 设置所有 Tile 的透明度\r\n// console.log(this.Player.getLayerSize()) //getLayerSize 获得层大小。\r\n// console.log(this.Player.setLayerSize()) //setLayerSize 设置层大小。\r\n// console.log(this.Player.getMapTileSize()) //getMapTileSize 获取 tile 的大小( tile 的大小可能会有所不同)。\r\n// console.log(this.Player.setMapTileSize()) //setMapTileSize 设置 tile 的大小。\r\n// console.log(this.Player.getTiles()) // getTiles 获取地图 tiles。\r\n// console.log(this.Player.setTiles()) //setTiles 设置地图 tiles\r\n// console.log(this.Player.getTileSet()) //getTileSet 获取 layer 的 Tileset 信息。\r\n// console.log(this.Player.setTileSet()) //  setTileSet 设置 layer 的 Tileset 信息。\r\n// console.log(this.Player.getLayerOrientation()) //getLayerOrientation 获取 Layer 方向(同地图方向)。\r\n// console.log(this.Player.setLayerOrientation()) //setLayerOrientation 设置 Layer 方向(同地图方向)。\r\n// console.log(this.Player.getProperties()) //getProperties 获取 layer 的属性，可以使用 Tiled 编辑器添加属性。\r\n// console.log(this.Player.setProperties()) //setProperties 设置层属性。\r\n","\r\nimport { GetUserDatas } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        GetHallMsgUrl: '/caileigame/GetHallMsg',           //%.38获取大厅消息\r\n        AddFollowUrl: '/caileigame/AddFollow',             //%.39大厅关注\r\n        DelFollowUrl: '/caileigame/DelFollow',             //%.40大厅取消关注\r\n        AddMyMsgUrl: '/caileigame/AddMyMsg',               //% 41大厅发送消息\r\n        AddWithdrawalUrl: '/caileigame/AddWithdrawal',     //%.42金币转增\r\n        scrollContent: cc.ScrollView,\r\n        scrollContentRight: cc.ScrollView,\r\n        GoldWindow: cc.Node,\r\n        SaveId: cc.Label,\r\n        SaveIdGive: '',\r\n        GiveGold: cc.EditBox,\r\n        hasGold: cc.Label,\r\n        RichTextGold: cc.RichText,\r\n        User_Name: cc.Label,\r\n        User_Id: cc.Label,\r\n        User_Pic: cc.Sprite,\r\n        User_Gold: cc.Label,\r\n        present: cc.Button,\r\n        addMsgs: cc.EditBox,\r\n        addMsgsBtn: cc.Button, oldID: ''\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // 账户数据设置\r\n    SetInfo() {\r\n        this.User_Name.string = Global.DataUsers.UserName\r\n        this.User_Id.string = 'ID:' + Global.DataUsers.Login\r\n        this.User_Gold.string = Global.DataUsers.Balance\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.User_Pic)\r\n        this.GetHallMsgFn()\r\n    },\r\n    onLoad() {\r\n        GetUserDatas()\r\n        this.SetInfo()          //设置用户数据\r\n        this.contentLeft = this.scrollContent.content\r\n        this.contentRight = this.scrollContentRight.content\r\n    },\r\n    GetHallMsgFn() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.GetHallMsgUrl, _data, e => {\r\n            let hall = JSON.parse(e)\r\n            if (hall.code == 12000) {\r\n                this.contentLeft.removeAllChildren()\r\n                this.contentRight.removeAllChildren()\r\n                let hallObj = hall.object\r\n                //msgList大厅消息参数介绍\r\n                let msgLists = hallObj.msgList\r\n                for (const lists of msgLists) {\r\n                    console.log(lists)\r\n                    cc.loader.loadRes(\"/prefab/NodeMsg\", (err, Prefab) => {\r\n                        if (err) {\r\n                            console.log(err)\r\n                            return;\r\n                        }\r\n                        var newNode = cc.instantiate(Prefab);\r\n                        // newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n                        newNode.getChildByName('VIP').getComponentInChildren(cc.Label).string = 'ID:' + lists.UserName\r\n                        newNode.getChildByName('liaotian').getComponentInChildren(cc.Label).string = lists.Msg\r\n\r\n                        let btn1 = newNode.getChildByName('ImgSprite').getComponentsInChildren(cc.Button)\r\n\r\n                        if (lists.Status != 1) {\r\n                            btn1[1].node.scale = 0\r\n                            btn1[0].interactable = false\r\n                        } else {\r\n                            if (lists.IsFollow) {//已关注\r\n                                btn1[0].node.scale = 0\r\n                            }\r\n                            if (!lists.IsFollow) {\r\n                                btn1[1].node.scale = 0\r\n                            }\r\n\r\n                            this.oldID = lists.UserId\r\n                            btn1[1].node.on(cc.Node.EventType.TOUCH_START, event => {\r\n                                // console.log( newNode.getChildByName('ImgSprite').getComponentInChildren(cc.Button).normalSprite)\r\n                                // console.log(new cc.SpriteFrame(cc.url.raw(\"resources/news/ysc.png\")))\r\n                                // console.log('已经关注！')\r\n                                this.DelFollow(lists.UserId) //发送关注的id\r\n                                btn1[0].node.scale = 1\r\n                                btn1[1].node.scale = 0\r\n                            })\r\n                            btn1[0].node.on(cc.Node.EventType.TOUCH_START, event => {\r\n                                // console.log('这是真的还没关注')\r\n                                this.SaveUser(lists.UserId)\r\n                                btn1[0].node.scale = 0\r\n                                btn1[1].node.scale = 1\r\n                            })\r\n\r\n                        }\r\n                        this.contentLeft.addChild(newNode);\r\n                        console.log(newNode.getChildByName('ImgSprite').getComponentsInChildren(cc.Button))\r\n\r\n                        // let _newNode = cc.find(\"sl/winText\", newNode)\r\n                        // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n                    });\r\n                }\r\n\r\n                //msgFollowList 关注用户列表参数介绍\r\n                let msgFollowList = hallObj.msgFollowList\r\n                for (const msg of msgFollowList) {\r\n                    console.log(msg)\r\n                    cc.loader.loadRes(\"/prefab/RightNode\", (err, Prefab) => {\r\n                        if (err) {\r\n                            console.log(err)\r\n                            return;\r\n                        }\r\n                        var newNode = cc.instantiate(Prefab);\r\n                        // newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n                        newNode.getChildByName('OSprite').getComponentInChildren(cc.Label).string = 'ID:' + msg.UserName\r\n                        newNode.getChildByName('zhuanzhang').on(cc.Node.EventType.TOUCH_END, event => {\r\n                            // 金币转正弹窗\r\n                            this.GoldWindow.scale = 1\r\n                            this.SaveIdGive = msg.UserName\r\n                            this.SaveId.string = 'ID:' + msg.UserName\r\n                            this.hasGold.string = '您当前的金币余额' + this.User_Gold.string + '金币'\r\n                            this.RichTextGold.string = \"您确定转赠<color=#FDC95A>\" + this.GiveGold.string + \"金币</color>给ID：\" + msg.UserName + \"吗？\"\r\n                        })\r\n                        this.contentRight.addChild(newNode);\r\n\r\n                        // let _newNode = cc.find(\"sl/winText\", newNode)\r\n                        // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n                    });\r\n                }\r\n\r\n            } else {\r\n                console.log('cuow');\r\n\r\n            }\r\n\r\n        })\r\n    },\r\n    //关注用户\r\n    SaveUser(oid) {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                FollowUserID: oid\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.AddFollowUrl, _data, e => {\r\n            let AddFollowObj = JSON.parse(e)\r\n\r\n            if (AddFollowObj.code == 12000) {\r\n                Global.alertWindw(AddFollowObj.message)\r\n            }else{\r\n                Global.alertWindw(AddFollowObj.message)\r\n            }\r\n            this.GetHallMsgFn()\r\n            // console.log(AddFollowObj)\r\n        })\r\n    },\r\n    //关注用户\r\n    DelFollow(oid) {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                FollowUserID: oid\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.DelFollowUrl, _data, e => {\r\n            let AddFollowObj = JSON.parse(e)\r\n            this.GetHallMsgFn()\r\n            // console.log(AddFollowObj)\r\n        })\r\n    },\r\n    //转赠金币\r\n    Withdrawal() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                AgentID: this.oldID,\r\n                Money: this.GiveGold.string\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.AddWithdrawalUrl, _data, e => {\r\n            let AddWithdrawal = JSON.parse(e)\r\n            if (AddWithdrawal.code == 12000) {\r\n                this.GoldWindow.scale = 0\r\n            }\r\n            Global.alertWindw(AddWithdrawal.message)\r\n            // console.log(AddWithdrawal)\r\n        })\r\n    },\r\n    start() {\r\n\r\n    },\r\n    SaveGolds() {\r\n        if (this.User_Gold.string < this.GiveGold.string) {\r\n            this.present.interactable = false\r\n            return;\r\n        } else {\r\n            this.present.interactable = false\r\n        }\r\n        if (this.GiveGold.string > 0) {\r\n            this.present.interactable = true\r\n        }\r\n        this.RichTextGold.string = \"您确定转赠<color=#FDC95A>\" + this.GiveGold.string + \"金币</color>给\" + this.SaveId.string + \"吗？\"\r\n\r\n    },\r\n    closeBtn() {\r\n        this.GoldWindow.scale = 0\r\n    },\r\n    AddMyMsgs() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n            , _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                Msg: this.addMsgs.string\r\n            }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + this.AddMyMsgUrl, _data, e => {\r\n            let AddWithdrawal = JSON.parse(e)\r\n            Global.alertWindw(AddWithdrawal.message)\r\n            this.GetHallMsgFn()\r\n            this.addMsgs.string = ''\r\n            this.addMsgsBtn.interactable = false\r\n            // console.log(AddWithdrawal)\r\n        })\r\n    },\r\n    changeAddMyMsg() {\r\n        if (this.addMsgs.string) {\r\n            this.addMsgsBtn.interactable = true\r\n        } else {\r\n            this.addMsgsBtn.interactable = false\r\n        }\r\n    }\r\n    // update (dt) {},\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        prefab: cc.Prefab,\n        hint: cc.Label,\n        regionOrigin: cc.Vec2,\n        regionSize: cc.Size\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.schedule(this.generateNode, 1);\n        console.log('-----------------------1---------------------');\n        this._pool = new cc.NodePool('PoolHandler');　//创建对象池\n        this._count = 0;\n\n\n        let windowSize = cc.view.getVisibleSize();\n        cc.log(\"width=\" + windowSize.width + \",height=\" + windowSize.height);;\n        windowSize = cc.winSize;//推荐  原因  短  \n        cc.log(\"width=\" + windowSize.width + \",height=\" + windowSize.height);\n\n    },\n\n    generateNode: function () {\n        var monster = this._pool.get(); //从对象池里面获取\n        if (!monster) { //如果对象池没这个节点就实例化\n            monster = cc.instantiate(this.prefab);\n            this._count++;\n            // this.hint.string = 'Node Created: ' + this._count;\n\n            // Add pool handler component which will control the touch event\n            monster.addComponent('PoolHandler');\n        }\n        // monster.x = this.regionOrigin.x + Math.floor(Math.random() * this.regionSize.width);\n        // monster.x = Math.floor(Math.random() * (300 - 100) + 100);\n        monster.x = cc.random0To1() * (cc.winSize.width - 100) + 100;\n        monster.y = this.regionOrigin.y + Math.floor(Math.random() * this.regionSize.height);\n        console.log(monster.x);\n        // console.log(monster.getPositionX());\n\n        var angle = Math.random() * Math.PI * 2;\n\n        var dx = 500 * Math.cos(angle);\n        var dy = 500 * Math.sin(angle);\n\n        monster.runAction(cc.sequence(\n            cc.moveBy(1, 0, 0),\n            cc.callFunc(this.removeNode, this, monster)\n        ));\n\n        this.node.addChild(monster); //添加到节点树\n    },\n\n    removeNode: function (sender, monster) {\n        this._pool.put(monster); //回收节点\n    }\n});\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        moneybk: cc.Node,\r\n        radioTabPay: {\r\n            default: [],\r\n            type: cc.Toggle\r\n        },\r\n        PayTypeID: 0,\r\n        object: ''\r\n    },\r\n    onLoad() {\r\n        GetUserDatas()\r\n        if (Global.DataUsers!=null) {\r\n            this.PayList()\r\n        }\r\n    },\r\n    start() {\r\n      \r\n    },\r\n    PayList() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            Channel: ''\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Transaction/GetPayList\", _data, e => {\r\n            this.object = JSON.parse(e).object\r\n\r\n            for (let i = 0; i < this.object.length; i++) {\r\n                this.radioTabPay[i].node.scale = 1\r\n                // console.log(this.radioTabPay[i].node.getChildByName('mLabel'));\r\n                this.radioTabPay[i].node.getChildByName('mLabel').getComponent(cc.Label).string = this.object[i].MerchantName\r\n                Global.loaderUserIcon(this.object[i].Icon, this.radioTabPay[i].node.getChildByName('mSprite').getComponent(cc.Sprite))\r\n\r\n                for (const iterator of this.object[i].Moneys) {\r\n                    Global.loadPre('jbpre', fab => {\r\n                        let PayTypeID = this.object[i].PayTypeID\r\n                        fab.getChildByName('jbLabel').getComponent(cc.Label).string = iterator.Gold + '金币'\r\n                        fab.getChildByName('jbm').getComponent(cc.Label).string = '￥' + iterator.Money\r\n                        fab.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                            this.SavePay(iterator.Gold, PayTypeID)\r\n                        })\r\n                        this.moneybk.addChild(fab);\r\n                    })\r\n\r\n\r\n\r\n                }\r\n\r\n            }\r\n\r\n\r\n        })\r\n    },\r\n\r\n    SavePay(money, PayTypeID) {\r\n        console.log(money, PayTypeID);\r\n        // window.location.href=\"http://www.baidu.com\"\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        if (PayTypeID != 0) {\r\n            let _data = {\r\n                Userid: Global.DataUsers.UserId,\r\n                Token: Global.DataUsers.Token,\r\n                Money: money,\r\n                PayTypeID: PayTypeID,\r\n                Channel: ''\r\n            }\r\n            Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Transaction/Pay\", _data, e => {\r\n                var div = document.createElement(\"div\");\r\n                div.className = 'wojiuzhidaohuigai'\r\n                div.innerHTML = JSON.parse(e).object\r\n                document.body.appendChild(div);\r\n                document.PayForm.submit();\r\n\r\n                this.scheduleOnce(function () {\r\n                    document.getElementsByClassName('wojiuzhidaohuigai')[0].remove()\r\n                }, 2);\r\n\r\n                return\r\n                // window.location.href = JSON.parse(e).code_url\r\n            })\r\n        }\r\n\r\n    },\r\n    radioTabs(toggle) {\r\n        this.moneybk.removeAllChildren();\r\n        var index = this.radioTabPay.indexOf(toggle);\r\n        switch (index) {\r\n            case 0:\r\n                console.log('0')\r\n                this.PayTypeID = this.object[0].PayTypeID\r\n                for (const iterator of this.object[0].Moneys) {\r\n                    cc.loader.loadRes(\"/prefab/money\", (err, prefab) => {\r\n                        var newNode = cc.instantiate(prefab);\r\n                        newNode.getComponentInChildren(cc.Label).string = iterator\r\n                        newNode.index_target = iterator\r\n                        newNode.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                            // console.log(event.target.index_target);\r\n                            this.SavePay(event.target.index_target)\r\n                        })\r\n                        this.moneybk.addChild(newNode);\r\n                    });\r\n                }\r\n                break;\r\n            case 1:\r\n                console.log('1')\r\n                this.prefabMoney(1)\r\n                break;\r\n            case 2:\r\n                console.log('2')\r\n                this.PayTypeID = this.object[2].PayTypeID\r\n                for (const iterator of this.object[2].Moneys) {\r\n                    cc.loader.loadRes(\"/prefab/money\", (err, prefab) => {\r\n                        var newNode = cc.instantiate(prefab);\r\n                        newNode.getComponentInChildren(cc.Label).string = iterator\r\n                        newNode.index_target = iterator\r\n                        newNode.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                            // console.log(event.target.index_target);\r\n                            this.SavePay(event.target.index_target)\r\n                        })\r\n                        this.moneybk.addChild(newNode);\r\n                    });\r\n                }\r\n                break;\r\n            case 3:\r\n                console.log('3')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    prefabMoney(n) {\r\n        this.PayTypeID = this.object[n].PayTypeID\r\n        for (const iterator of this.object[n].Moneys) {\r\n            cc.loader.loadRes(\"/prefab/money\", (err, prefab) => {\r\n                var newNode = cc.instantiate(prefab);\r\n                newNode.getComponentInChildren(cc.Label).string = iterator\r\n                newNode.index_target = iterator\r\n                newNode.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n                    // console.log(event.target.index_target);\r\n                    this.SavePay(event.target.index_target)\r\n                })\r\n                this.moneybk.addChild(newNode);\r\n            });\r\n        }\r\n    }\r\n    // update (dt) {},\r\n});\r\n","import { GetUserDatas } from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n    properties: {\r\n        pointer: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        pointerButton: {\r\n            default: null,\r\n            type: cc.Node\r\n        },\r\n        pointerTitle: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        SaveNumber: 0,           //存盘id\r\n        pointerText: {\r\n            default: null,\r\n            type: cc.Label\r\n        },\r\n        speed: 20,\r\n        sssNumber: 0, //目标数字\r\n        Winners: cc.Node, //获奖名单\r\n        TheWinningRecord: cc.Node, //获奖记录\r\n        TheWinningRecordWindow: cc.Node, //获奖记录窗口\r\n        PigCardLise: cc.Node,\r\n        PigList: {\r\n            default: [],\r\n            type: cc.Toggle\r\n        },\r\n        radioButton: {\r\n            default: [],\r\n            type: cc.Toggle\r\n        },\r\n        Roundabout: {\r\n            get: function () {\r\n                return this._Roundabout;\r\n            },\r\n            set: function (value) {\r\n                this._Roundabout = value;\r\n            }\r\n        },\r\n        _objectList: {\r\n            get: function () {\r\n                return this._objectLists;\r\n            },\r\n            set: function (value) {\r\n                this._objectLists = value;\r\n            }\r\n        },\r\n        User_Glod: cc.Label,\r\n        PigArray: [],\r\n        LottleList: cc.ScrollView,\r\n        runtime: 0,  //已经被旋转的角度\r\n        ShowBoxWindow: cc.Node,\r\n        run: 10,\r\n        sim: 5,\r\n        startBtn: cc.Button,\r\n        winNode: cc.Node,\r\n        ruleWinNodes: cc.Node,\r\n        Piggb: cc.AudioSource,\r\n        PigClick: cc.AudioSource,\r\n        PigShow: cc.AudioSource,\r\n        isMis: true,\r\n        ViewWeb: cc.WebView,\r\n        PigArrayNumber: []\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.User_Glod.string = Global.DataUsers.Balance;\r\n        this.loadUserPointer()\r\n        this.GetRoundaboutRecord()   //先加载一次 顺序就对了\r\n        this.getView()\r\n\r\n    },\r\n    MisClose() {\r\n        if (this.isMis) {\r\n            this.Piggb.stop()\r\n            // this.PigClick.stop()\r\n            // this.PigShow.stop()\r\n            this.isMis = !this.isMis\r\n        } else {\r\n            this.isMis = !this.isMis\r\n            this.Piggb.play()\r\n        }\r\n    },\r\n    onLoad() {\r\n        this.SetInfo()\r\n        this.PigBox = []\r\n        this.PigNumbers = 0\r\n        // console.log(360 / 9);\r\n        this.RoundsNumber = 0\r\n        // console.log(this.pointer.node.rotation = this.pointer.node.rotation + 40);\r\n\r\n\r\n        // this.scheduleOnce( ()=> {\r\n        //     this.sssNumber = this.sssNumber+1\r\n        //     console.log('我操？');\r\n\r\n        // }, 5);\r\n\r\n\r\n        // console.log(this.sssNumber);\r\n\r\n        this.sRound = true\r\n    },\r\n\r\n    loadUserPointer() {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetRoundabout\", _data, e => {\r\n            let _UserPointer = JSON.parse(e);\r\n            console.log(_UserPointer);\r\n            // UserRanking 排行榜\r\n            let _UserRanking = _UserPointer.UserRanking\r\n            //UserCharacter 用户有什么人物\r\n            let _UserCharacter = _UserPointer.UserCharacter\r\n            if (_UserPointer.code = 12000) {\r\n                // this.eggNumber.string = _UserPointer.UserOpportunity\r\n                this.PigListType(_UserCharacter)\r\n                // this.PigList\r\n                this.RankingMsg(_UserRanking)\r\n            }\r\n            //RoundaboutInfo 转盘信息\r\n\r\n            let _Roundabout = _UserPointer.Roundabout\r\n            this.Roundabout = _Roundabout\r\n\r\n            let _object = _UserPointer.object\r\n            this._objectList = _object\r\n            this.radioButtonClicked(this.radioButton[this.RoundsNumber])\r\n        })\r\n    },\r\n    //抽到的东西\r\n    RankingMsg(_UserRanking) {\r\n        for (const iterator of _UserRanking) {\r\n            var node = new cc.Node('Sprite');\r\n            var RichText = node.addComponent(cc.RichText);\r\n            RichText.string = '<color=#0fffff>恭喜 ' + iterator.UserDisplayName + ' 获得</color><color=#ffff00>' + iterator.Prize + '</c>'\r\n            RichText.fontSize = 24\r\n            RichText.lineHeight = 37\r\n            if (this.Winners.getChildren().length > 2) {\r\n                break\r\n            } else {\r\n                this.Winners.addChild(node)\r\n            }\r\n        }\r\n    },\r\n    //猪\r\n    PigListType(_UserCharacter) {\r\n        this.PigArrayNumber = []\r\n        this.PigList.forEach((iterator, index) => {\r\n            if (_UserCharacter[index].CharactersNumber < 1) {\r\n                iterator.getComponent(cc.Button).interactable = false\r\n            }\r\n            iterator.node.getChildByName('PigNum').getComponent(cc.Label).string = _UserCharacter[index].CharactersNumber;\r\n            this.PigArrayNumber.push(_UserCharacter[index].CharactersNumber)\r\n\r\n        });\r\n\r\n\r\n    },\r\n    bubbleSort(arr) {\r\n        var len = arr.length;\r\n        for (var i = 0; i < len; i++) {\r\n            for (var j = 0; j < len - 1 - i; j++) {\r\n                if (arr[j] > arr[j + 1]) { //相邻元素两两对比\r\n                    var temp = arr[j + 1]; //元素交换\r\n                    arr[j + 1] = arr[j];\r\n                    arr[j] = temp;\r\n                }\r\n            }\r\n        }\r\n        return arr;\r\n    },\r\n    GetRoundaboutRecord() {\r\n        this.LottleList.content.removeAllChildren()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            PageIndex: 1,\r\n            PageSize: 10\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetRoundaboutRecord\", _data, e => {\r\n            let _GetRound = JSON.parse(e);\r\n            console.log(_GetRound);\r\n            if (_GetRound.code == 12000) {\r\n                this._GetRounds(_GetRound)\r\n            }\r\n        })\r\n    },\r\n    _GetRounds(_GetRound) {\r\n        for (const iterator of _GetRound.list) {\r\n            cc.loader.loadRes(\"/prefab/Lottery\", (err, Prefab) => {\r\n                if (err) {\r\n                    console.log(err)\r\n                    return;\r\n                }\r\n                let newNode = cc.instantiate(Prefab)\r\n                let taskPic = newNode.getChildByName('taskPic').getComponent(cc.Sprite)\r\n                let btn = newNode.getChildByName('btn')\r\n                this.loaderUserIcon(iterator.Path, taskPic)\r\n                newNode.getChildByName('text').getComponent(cc.Label).string = iterator.RoundaboutTypeName\r\n                newNode.getChildByName('text2').getComponent(cc.Label).string = iterator.DetailedTypeName\r\n                newNode.getChildByName('prizeNum').getChildByName('time').getComponent(cc.Label).string = iterator.Time\r\n                this.LottleList.content.addChild(newNode)\r\n            })\r\n        }\r\n    },\r\n    //下面的切换列表\r\n    radioButtonClicked: function (toggle) {\r\n        var index = this.radioButton.indexOf(toggle);\r\n        switch (index) {\r\n            case 0:\r\n                //5卡\r\n                this.GetPointerUrl(index)\r\n                this.RoundsNumber = 0\r\n                break;\r\n            case 1:\r\n                //6卡\r\n                this.GetPointerUrl(index)\r\n                this.RoundsNumber = 1\r\n                break;\r\n            case 2:\r\n                //7卡\r\n                this.GetPointerUrl(index)\r\n                this.RoundsNumber = 2\r\n                break;\r\n            case 3:\r\n                //8卡\r\n                this.GetPointerUrl(index)\r\n                this.RoundsNumber = 3\r\n                break;\r\n            case 4:\r\n                //9卡\r\n                this.GetPointerUrl(index)\r\n                this.RoundsNumber = 4\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    GetPointerUrl(index) {\r\n\r\n        // this.pointerTitle.string = this._objectList[index].Conditions\r\n        this.SaveNumber = this._objectList[index].RoundaboutType\r\n        //\r\n        this.loaderUserIcon(this.Roundabout[index].Path, this.pointer)\r\n        var numbers = 0\r\n        for (let i = 0; i < this.PigList.length; i++) {\r\n            this.PigList[i].isChecked = false;\r\n            if (this.PigList[i].node.getChildByName('PigNum').getComponent(cc.Label).string > 0) {\r\n                // if (i < this.SaveNumber) {\r\n                //if 没有卡片的 就不选中\r\n                this.PigList[i].isChecked = true\r\n                this.PigList[i].interactable = true\r\n                // console.log(this.PigList[i].isChecked);\r\n                // } \r\n                if (this.PigList[i].isChecked) {\r\n                    numbers++\r\n                }\r\n                if (numbers > this.SaveNumber) {\r\n                    this.PigList[i].isChecked = false;\r\n                    this.PigList[i].interactable = false\r\n                }\r\n            } else {\r\n                //自动干掉选择\r\n                this.PigList[i].isChecked = false;\r\n                this.PigList[i].interactable = false\r\n            }\r\n\r\n        }\r\n        // console.log(this._objectList[index]);\r\n        // console.log(this.Roundabout[index].Path);\r\n        this.ForPigBox()\r\n    },\r\n    ForPigBox() {\r\n        this.PigBox = []\r\n        this.PigNumbers = 0\r\n        // console.log(this.bubbleSort(this.PigArrayNumber));\r\n        let PigArrays = this.bubbleSort(this.PigArrayNumber)\r\n        for (const iterator of PigArrays) {\r\n            if (iterator > 0) {\r\n                this.PigBox.push(iterator)\r\n            }\r\n        }\r\n        this.NumberBox = this.PigBox;\r\n        this.ForPigBoxTwo()\r\n    },\r\n    ForPigBoxTwo() {\r\n        let tt = []\r\n        if (this.NumberBox.length >= this.SaveNumber) {\r\n            for (const PigBoxItem of this.NumberBox) {\r\n                if (PigBoxItem > 0) {\r\n                    tt.push(PigBoxItem - 1)\r\n                }\r\n            }\r\n            if (tt.length >= this.SaveNumber) {\r\n                this.PigNumbers++\r\n            } else {\r\n                // console.log('不够了');\r\n            }\r\n            this.NumberBox = tt\r\n            this.ForPigBoxTwo()\r\n        } else {\r\n            // console.log('长度不够');\r\n        }\r\n        // console.log(this.PigNumbers + '次数');\r\n        this.pointerTitle.string = this.PigNumbers\r\n    },\r\n    loaderUserIcon(mo, nSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            nSprite.spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    //炸弹\r\n    GoPigDial() {\r\n        cc.director.loadScene('PigHome')\r\n    },\r\n    TheWinningRecordFn(e, num) {\r\n        this.TheWinningRecordWindow.scale = num\r\n        if (num == 1) {\r\n            this.GetRoundaboutRecord()\r\n        }\r\n        this.PigClick.play()\r\n    },\r\n    PigCardLiseFn(e, num) {\r\n        this.PigCardLise.scale = num\r\n        this.PigClick.play()\r\n    },\r\n    //选择小猪卡片\r\n    selectPig(toggle) {\r\n        var index = this.PigList.indexOf(toggle);\r\n        let n = 0;\r\n        this.PigList.forEach((ele, i) => {\r\n            if (ele.isChecked) {\r\n                n++\r\n            }\r\n        });\r\n        if (n == this.SaveNumber) {\r\n            console.log('有' + this.SaveNumber + '个');\r\n            this.PigList.forEach((ele, i) => {\r\n                if (!ele.isChecked) {\r\n                    ele.interactable = false\r\n                }\r\n            });\r\n        } else {\r\n            this.PigList.forEach((ele, i) => {\r\n                if (!ele.isChecked) {\r\n                    if (this.PigList[i].node.getChildByName('PigNum').getComponent(cc.Label).string > 0) {\r\n                        ele.interactable = true\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    },\r\n    //抽奖发送\r\n    loadMsgPointer(str) {\r\n        for (const radio of this.radioButton) {\r\n            radio.interactable = false\r\n        }\r\n\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            VCode: str,\r\n            Type: this.SaveNumber\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/LuckDraw\", _data, e => {\r\n            let _pointer = JSON.parse(e);\r\n            console.log(_pointer);\r\n            if (_pointer.code == 12000) {\r\n                this.pointerTitle.string = this.pointerTitle.string - 1\r\n                console.log(_pointer.prize.path);\r\n                console.log(_pointer.prize.prompt);\r\n                this.turntableStart(_pointer.prize.prizeType)\r\n                //拉去猪列表\r\n            }\r\n\r\n        })\r\n    },\r\n    /**\r\n     * 下面是转盘专用\r\n     */\r\n\r\n    //转盘旋转功能\r\n    turntableFn() {\r\n        this.startBtn.interactable = false;\r\n        this.PigArray = []\r\n        this.PigList.forEach((ele, index) => {\r\n            // console.log(ele.isChecked);\r\n            ele.isChecked ? this.PigArray.push(index + 1) : '';\r\n        });\r\n        console.log(this.PigArray.toString());\r\n        if (this.PigArray.length < this.SaveNumber) {\r\n            this.closeWinNode(1)\r\n            this.startBtn.interactable = true\r\n            return\r\n        }\r\n        this.loadMsgPointer(this.PigArray.toString())\r\n\r\n    },\r\n    //转盘停止功能\r\n    turntableStop() { },\r\n    //转盘初始化数据\r\n    turntableStart(numberSave) {\r\n        // 创建一个移动动作\r\n        // var rotateTo = cc.rotateTo(持续时间, 旋转角度X，旋转角度Y);\r\n        // var actionBy = cc.rotateBy(持续时间, 旋转角度X，旋转角度Y);\r\n        // var actionBy = cc.rotateBy(2, 360 * 5).easing(cc.easeCubicActionOut());\r\n\r\n        // 旋转的剩下80 280+40 是娃娃 \r\n\r\n        // 移动40 金币x10\r\n\r\n        // 移动80 答题卡\r\n\r\n        // 移动120 炸弹\r\n\r\n        // 移动160 再来一次\r\n\r\n        // 移动 200 扫雷卡\r\n\r\n        // 移动240 话费30\r\n\r\n        // 移动280 谢谢\r\n\r\n        // 移动320 娃娃一套\r\n\r\n        // 移动 360 京东卡\r\n\r\n\r\n        let a1 = parseInt(Math.random() * 35 + 25)\r\n        // let a2 = parseInt(Math.random() * 35 + 105)\r\n        let a3 = parseInt(Math.random() * 35 + 64)\r\n        let a4 = parseInt(Math.random() * 35 + 145)\r\n        let a5 = parseInt(Math.random() * 35 + 260)\r\n        let a6 = parseInt(Math.random() * 35 + 105)\r\n        // console.log('----------上次的角度------------');\r\n        // console.log(this.runtime);\r\n        // console.log('----------这次的角度------------');\r\n        // console.log(this.runtime + a3);\r\n        // 1金币\r\n        // 2人物\r\n        // 3答题卡\r\n        // 4再抽一次奖\r\n        // 5谢谢参与\r\n        // 6小猪佩奇砸金蛋机会\r\n        let sim = this.sim\r\n        let run = this.run\r\n        switch (numberSave) {\r\n            case 1:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a1)).easing(cc.easeCubicActionOut());\r\n                this.runtime = 360 - a1\r\n                // 执行动作\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'bit')\r\n                //显示获奖信息\r\n                break;\r\n            case 2:\r\n                // var actionBy = cc.rotateBy(sim, 360 * run + 40).easing(cc.easeCubicActionOut());\r\n                // // 执行动作\r\n                // this.pointer.node.runAction(actionBy);\r\n\r\n                break;\r\n            case 3:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a3)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a3\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'datika')\r\n                break;\r\n            case 4:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a4)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a4\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'next')\r\n                break;\r\n            case 5:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a5)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a5\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'xiexie')\r\n\r\n                break;\r\n            case 6:\r\n                var actionBy = cc.rotateBy(sim, 360 * run + (this.runtime + a6)).easing(cc.easeCubicActionOut());\r\n                // 执行动作\r\n                this.runtime = 360 - a6\r\n                this.pointer.node.runAction(actionBy);\r\n                this.ShowBox(numberSave, 'zhadan')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n\r\n        // 停止一个动作\r\n        // node.stopAction(action);\r\n        // 停止所有动作\r\n        // node.stopAllActions();\r\n    },\r\n    ShowBox(num, img) {\r\n        if (num == 1 || num == 2 || num == 4 || num == 5) {\r\n            this.ShowBoxWindow.getChildByName('queding').setPosition(cc.v2(0, -216))\r\n            this.ShowBoxWindow.getChildByName('liji').scale = 0\r\n        }\r\n        if (num == 3 || num == 6) {\r\n            this.ShowBoxWindow.getChildByName('queding').setPosition(cc.v2(-146, -216))\r\n            this.ShowBoxWindow.getChildByName('liji').scale = 1\r\n            if (num == 3) {\r\n                this.ShowBoxWindow.getChildByName('liji').on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('QuestionsStart')\r\n                })\r\n            }\r\n            if (num == 6) {\r\n                this.ShowBoxWindow.getChildByName('liji').on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('PigHome')\r\n                })\r\n            }\r\n        }\r\n        this.scheduleOnce(() => {\r\n            this.ShowBoxWindow.scale = 1\r\n            this.startBtn.interactable = true\r\n            for (const radio of this.radioButton) {\r\n                radio.interactable = true\r\n            }\r\n        }, this.sim);\r\n\r\n        cc.loader.loadRes(\"/Qus/\" + img, (err, spriteFrame) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            this.ShowBoxWindow.getChildByName('nSprite').getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame)\r\n        })\r\n    },\r\n    closeShowBoxWindow() {\r\n        this.ShowBoxWindow.scale = 0\r\n        this.loadUserPointer()\r\n        this.PigClick.play()\r\n    },\r\n    closeWinNode(num) {\r\n        this.winNode.scale = num\r\n        this.PigClick.play()\r\n    },\r\n    ruleWinNode(e, num) {\r\n        this.ruleWinNodes.scale = num\r\n        this.PigClick.play()\r\n    },\r\n    getView() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n            // console.log(json.object.circleUrl);\r\n            // console.log(this.ViewWeb);\r\n            this.ViewWeb.url = json.object.circleUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 7\r\n            // this.ViewWeb.url = 'http://192.168.1.106:802/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 7\r\n            console.log(this.ViewWeb.url)\r\n            console.log('--------------------------------------------------')\r\n        })\r\n    }\r\n})\r\n\r\n\r\n\r\n\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas } from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        taskWindow: cc.Node,                   //   任务窗口\r\n\r\n        taskListView: cc.ScrollView,           //   任务列表\r\n\r\n        accomplishTaskWindow: cc.Node,         //   完成任务\r\n\r\n        everydaySignIn: cc.Node,               //   每日签到\r\n\r\n        accomplishEverydaySignIn: cc.Node,     //   签到成功\r\n\r\n        accompBtn: cc.Button,                  //   签到按钮\r\n\r\n        ruleWindow: cc.Node,                   //   游戏规则\r\n\r\n        hintWindow: cc.Node,                   //   提示窗口\r\n\r\n        getEggbtn: cc.Button,                  //   砸蛋按钮\r\n\r\n        eggAnima: cc.Animation,                //   鸡蛋动画\r\n\r\n        chuiziAnima: cc.Animation,             //   垂子动画\r\n\r\n        GetEggPig: cc.Node,                      //获得饺子的窗口\r\n\r\n        eggNumber: cc.Label,\r\n\r\n        everyDay: {\r\n            default: [],\r\n            type: cc.Node\r\n        },\r\n        PigList: {\r\n            default: [],\r\n            type: cc.Node\r\n        },\r\n        //uid 名字 头像\r\n        User_Name: cc.Label,\r\n        User_Id: cc.Label,\r\n        UserPic: cc.Sprite,\r\n\r\n        Winners: cc.Node,                       //获奖名单\r\n        PigText: 0, //记录蛋蛋\r\n\r\n        ViewWeb: cc.WebView,\r\n\r\n        Piggb: cc.AudioSource,\r\n        PigClick: cc.AudioSource,\r\n        PigShow: cc.AudioSource,\r\n        isMis: true,\r\n    },\r\n    //用户数据\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.User_Name.string = Global.DataUsers.UserName;\r\n        this.User_Id.string = 'ID:' + Global.DataUsers.Login;\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.GetLstUserCharacterInfo()\r\n        this.getView()\r\n    },\r\n    loaderUserIcon(mo, nSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            nSprite.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    loadRes(newNode, picName) {\r\n        cc.loader.loadRes(\"/Qus/\" + picName, function (err, spriteFrame) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame);\r\n        });\r\n    },\r\n    onLoad() {\r\n        this.SetInfo()\r\n        this.GetLstCharacterCondition()\r\n        // let egg = cc.director.getScene().getChildByName('Canvas').getChildByName('egg').getComponent(cc.Animation)\r\n        // let chuizi = cc.director.getScene().getChildByName('Canvas').getChildByName('chuizi').getComponent(cc.Animation)\r\n        // egg.play()\r\n        // chuizi.play()\r\n        // console.log(egg);\r\n\r\n    },\r\n    MisClose() {\r\n        if (this.isMis) {\r\n            this.Piggb.stop()\r\n            // this.PigClick.stop()\r\n            // this.PigShow.stop()\r\n            this.isMis = !this.isMis\r\n        } else {\r\n            this.isMis = !this.isMis\r\n            this.Piggb.play()\r\n        }\r\n    },\r\n    start() {\r\n\r\n    },\r\n    ruleWindowBtn(e, num) {\r\n        this.ruleWindow.scale = num\r\n        this.PigClick.play()\r\n    },\r\n\r\n    //获奖名单\r\n    //鸡蛋动画\r\n    //点击砸蛋\r\n    //规则书名\r\n    //音乐\r\n    //返回\r\n    // 每日任务\r\n    openTask() {\r\n        this.taskWindow.scale = 1\r\n        this.GetLstCharacterCondition()\r\n        this.PigClick.play()\r\n    },\r\n    closeTask() {\r\n        this.taskWindow.scale = 0\r\n        this.PigClick.play()\r\n    },\r\n    closeTaskWin() {\r\n        this.PigClick.play()\r\n        this.accomplishTaskWindow.scale = 0\r\n        this.GetLstCharacterCondition()  //关闭再拉去数据\r\n        this.GetLstUserCharacterInfo()\r\n    },\r\n    // 每日签到\r\n    openEveryday() {\r\n        this.GetSignIn()\r\n        this.everydaySignIn.scale = 1\r\n        this.PigClick.play()\r\n    },\r\n    closeEveryday() {\r\n        this.everydaySignIn.scale = 0\r\n        this.PigClick.play()\r\n    },\r\n    closeEverydayPir() {\r\n        this.GetSignIn()\r\n        this.accomplishEverydaySignIn.scale = 0\r\n        this.PigClick.play()\r\n    },\r\n    // 分享\r\n\r\n    //转盘\r\n    GoPigDial() {\r\n        cc.director.loadScene('PigDial')\r\n    },\r\n    //猪的卡片操作\r\n\r\n    //获取任务列表\r\n    GetLstCharacterCondition() {\r\n        this.taskListView.content.removeAllChildren()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetLstCharacterCondition\", _data, e => {\r\n            let _task = JSON.parse(e);\r\n\r\n            // console.log(_task.object)\r\n\r\n            for (const iterator of _task.object) {\r\n                this.loadPre(iterator)\r\n            }\r\n        })\r\n    },\r\n    loadPre(iterator) {\r\n        cc.loader.loadRes(\"/prefab/taskList\", (err, Prefab) => {\r\n            if (err) {\r\n                console.log(err)\r\n                return;\r\n            }\r\n            var newNode = cc.instantiate(Prefab)\r\n            var taskPic = newNode.getChildByName('taskPic')\r\n            var btn = newNode.getChildByName('btn')\r\n            newNode.getChildByName('title').getComponent(cc.Label).string = iterator.Name\r\n            newNode.getChildByName('text').getComponent(cc.Label).string = iterator.Introduction\r\n            newNode.getChildByName('prize').getComponent(cc.Label).string = iterator.Reward\r\n            newNode.getChildByName('prizeNum').getComponent(cc.Label).string = `${iterator.Total}/${iterator.Condition}`\r\n\r\n            if (iterator.Status == 100) {\r\n                // 2 前往\r\n                // 100领取奖品\r\n                // 0已领取\r\n                this.loadRes(btn, 'lingqu')\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    this.ReceiveCondition(iterator.Type)\r\n                })\r\n            }\r\n            if (iterator.Status == 2) {\r\n                this.RuleCode(btn, iterator)\r\n            }\r\n            if (iterator.Status == 0) {\r\n                this.loadRes(btn, 'yilingqu')\r\n                btn.getComponent(cc.Button).interactable = false\r\n            }\r\n            this.loaderUserIcon(iterator.Icon, taskPic)\r\n            this.taskListView.content.addChild(newNode)\r\n\r\n        })\r\n\r\n\r\n    },\r\n    RuleCode(btn, iterator) {\r\n\r\n        switch (iterator.RuleCode) {\r\n            case 'rotarydraw':\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    // console.log('转盘抽奖');\r\n                })\r\n                break;\r\n            case 'jisudatitransaction1':\r\n                // console.log('极速答题');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('QuestionsStart')\r\n                })\r\n                break;\r\n            case 'jisudatitransaction0':\r\n                // console.log('极速答题');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('QuestionsStart')\r\n                })\r\n                break;\r\n            case 'paileitransaction1':\r\n                // console.log('排雷先锋');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('GameStart')\r\n                })\r\n                break;\r\n            case 'paileitransaction0':\r\n                // console.log('排雷先锋');\r\n                btn.on(cc.Node.EventType.TOUCH_END, () => {\r\n                    cc.director.loadScene('GameStart')\r\n                })\r\n                break;\r\n            case 'invitingFriends':\r\n                // console.log(\"邀请好友并注册\");\r\n                break;\r\n            case 'accumulativeRecharge':\r\n                // console.log(\"累积充值\");\r\n                break;\r\n            case 'recharge':\r\n                // console.log('首次充值');\r\n                break;\r\n            case 'signIn':\r\n                // console.log('每日签到');\r\n                break;\r\n            case 'register':\r\n                // console.log('用户注册');\r\n                break;\r\n\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n    //领取 任务\r\n    ReceiveCondition(num) {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            Type: num\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/ReceiveCondition\", _data, e => {\r\n            this.accomplishTaskWindow.scale = 1;\r\n            let _egg = JSON.parse(e);\r\n            if (_egg.code == 12000) {\r\n                this.GetLstUserCharacterInfo()\r\n            }\r\n        })\r\n    },\r\n\r\n\r\n\r\n    //获取签到信息\r\n    GetSignIn() {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/Sign/getsign\", _data, e => {\r\n            let _GetSignIn = JSON.parse(e);\r\n            let _object = _GetSignIn.object\r\n            // console.log(_GetSignIn)\r\n            if (_GetSignIn.IsSign) {\r\n                this.accompBtn.interactable = false\r\n            }\r\n            this.everyDay.forEach((iterator, index) => {\r\n                // console.log(_object[index].Value)\r\n                if (_object[index].IsSign == 1) {\r\n                    iterator.getChildByName('getBox').scale = 1\r\n                }\r\n                iterator.getChildByName('everyDayLabel').getComponent(cc.Label).string = `砸蛋机会x${_object[index].Value}`\r\n            });\r\n        })\r\n    },\r\n\r\n    //签到\r\n    SetSignIn() {\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/Sign/signin\", _data, e => {\r\n            let _SetSignIn = JSON.parse(e);\r\n            if (_SetSignIn.code = 12000) {\r\n                this.accomplishEverydaySignIn.scale = 1\r\n            }\r\n        })\r\n    },\r\n    //获取各个列表\r\n    GetLstUserCharacterInfo() {\r\n        this.Winners.removeAllChildren()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/GetLstUserCharacterInfo\", _data, e => {\r\n            let _GetLst = JSON.parse(e);\r\n            let _object = _GetLst.object\r\n            let _UserRanking = _GetLst.UserRanking\r\n            if (_GetLst.code = 12000) {\r\n                this.eggNumber.string = _GetLst.UserOpportunity\r\n                // this.PigList\r\n                this.PigList.forEach((iterator, index) => {\r\n                    if (_object[index].CharactersNumber < 1) {\r\n                        console.log(_object[index].CharactersNumber);\r\n                        iterator.getComponent(cc.Button).interactable = false\r\n                    } else {\r\n                        iterator.getComponent(cc.Button).interactable = true\r\n                    }\r\n                    iterator.getChildByName('pigNum').getComponent(cc.Label).string = 'x' + _object[index].CharactersNumber;\r\n                });\r\n\r\n                for (const iterator of _UserRanking) {\r\n                    this.PigShow.play()\r\n                    var node = new cc.Node('Sprite');\r\n                    var RichText = node.addComponent(cc.RichText);\r\n                    RichText.string = '<color=#0fffff>恭喜 ' + iterator.UserDisplayName + ' 获得</color><color=#ffff00>' + iterator.Prize + '</c>'\r\n                    RichText.fontSize = 24\r\n                    RichText.lineHeight = 37\r\n                    // console.log(this.Winners.getChildren().length);\r\n\r\n                    if (this.Winners.getChildren().length > 2) {\r\n                        break\r\n                    } else {\r\n                        this.Winners.addChild(node)\r\n\r\n                    }\r\n                }\r\n\r\n\r\n            }\r\n        })\r\n    },\r\n    radioButtonClicked: function (e, toggle) {\r\n        // console.log(toggle);\r\n        switch (toggle) {\r\n            case 0:\r\n                title += \"1\";\r\n                break;\r\n            case 1:\r\n                title += \"2\";\r\n                break;\r\n            case 2:\r\n                title += \"3\";\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n\r\n    //炸弹接口\r\n    GetEgg() {\r\n        if (this.eggNumber.string < 1) {\r\n            this.hintWindow.scale = 1\r\n            let win = this.hintWindow.getChildByName('windows')\r\n            win.getChildByName('msg').getComponent(cc.Label).string = '还没有砸蛋机会哦~!做任务吧！'\r\n            win.getChildByName('gotask').scaleX = 1\r\n            win.getChildByName('kanseru').scaleX = 1\r\n            win.getChildByName('queren').scaleX = 0\r\n            return;\r\n        }\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/LittlePigPeky/QuailEggs\", _data, e => {\r\n            let _egg = JSON.parse(e);\r\n            this.eggNumber.string = this.eggNumber.string - 1\r\n            this.getEggbtn.interactable = false\r\n            // console.log(_egg.IsWinning)\r\n            if (_egg.IsWinning == 0) {\r\n                this.PigText = _egg.IsWinning\r\n                this.chuiziAnima.play()\r\n                this.chuiziAnima.on('finished', this.onFinished, this);\r\n\r\n            }\r\n            //有奖品\r\n            if (_egg.IsWinning == 1) {\r\n                this.PigText = _egg.IsWinning\r\n                this.chuiziAnima.play()\r\n                this.chuiziAnima.on('finished', this.onFinished, this);\r\n            }\r\n            if (_egg.CharacterType > 0) {\r\n                this.GetEggPig.getChildByName('title').getComponent(cc.Label).string = _egg.CharacterName\r\n\r\n                switch (_egg.CharacterType) {\r\n                    case 1:\r\n                        console.log('佩奇');\r\n                        this.loadPig(1)\r\n                        break;\r\n                    case 2:\r\n                        console.log('乔治');\r\n                        this.loadPig(2)\r\n                        break;\r\n                    case 3:\r\n                        this.loadPig(3)\r\n                        console.log('猪爸爸');\r\n                        break;\r\n                    case 4:\r\n                        this.loadPig(4)\r\n                        console.log('猪妈妈');\r\n                        break;\r\n                    case 5:\r\n                        this.loadPig(5)\r\n                        console.log('小马');\r\n                        break;\r\n                    case 6:\r\n                        this.loadPig(6)\r\n                        console.log('小羊');\r\n                        break;\r\n                    case 7:\r\n                        this.loadPig(7)\r\n                        console.log('小兔');\r\n                        break;\r\n                    case 8:\r\n                        this.loadPig(8)\r\n                        console.log('大象');\r\n                        break;\r\n                    case 9:\r\n                        this.loadPig(9)\r\n                        console.log('羚羊');\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n            }\r\n        })\r\n    },\r\n    loadPig(pic) {\r\n        var self = this;\r\n        cc.loader.loadRes(\"pig/pig\" + pic, cc.SpriteFrame, function (err, spriteFrame) {\r\n            self.GetEggPig.getChildByName('pic').getComponent(cc.Sprite).spriteFrame = spriteFrame;\r\n        });\r\n    },\r\n    onFinished() {\r\n        this.eggAnima.play()\r\n        this.eggAnima.on('finished', this.openThisEgg, this);\r\n    },\r\n    openThisEgg() {\r\n        this.scheduleOnce(function () {\r\n            // 这里的 this 指向 component\r\n            if (this.PigText == 0) {\r\n                this.hintWindow.scale = 1\r\n            }\r\n            if (this.PigText == 1) {\r\n                this.GetEggPig.scale = 1\r\n            }\r\n            this.getEggbtn.interactable = true\r\n            this.eggAnima.stop()\r\n        }, 0.2);\r\n\r\n    },\r\n    closeThisEgg() {\r\n        this.hintWindow.scale = 0\r\n    },\r\n    //去任务\r\n    GoTask() {\r\n        this.hintWindow.scale = 0\r\n        this.openTask()\r\n    },\r\n    GetEggPigFn() {\r\n        this.GetEggPig.scale = 0\r\n        this.GetLstUserCharacterInfo()\r\n    },\r\n    getView() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n            // console.log(json.object.circleUrl);\r\n            // console.log(this.ViewWeb);\r\n            this.ViewWeb.url = json.object.circleUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 7\r\n            // this.ViewWeb.url = 'http://192.168.1.106:802/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 7\r\n            console.log(this.ViewWeb.url)\r\n            console.log('--------------------------------------------------')\r\n        })\r\n    }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    // update (dt) {},\r\n});\r\n","var lastClick = 0;\n\nfunction pauseresume () {\n    var now = Date.now();\n    // Double click in 300 ms\n    if (now - lastClick < 300) {\n        this.stopAllActions();\n        var pool = this.getComponent('PoolHandler')._pool;\n        if (pool) {\n            pool.put(this);\n        }\n        else {\n            this.removeFromParent(true);\n        }\n    }\n    // Click\n    else {\n        if (this.paused) {\n            cc.director.getActionManager().resumeTarget(this);\n        }\n        else {\n            cc.director.getActionManager().pauseTarget(this);\n        }\n        this.paused = !this.paused;\n    }\n    lastClick = now;\n}\n/**\n * 对象池用的\n */\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        _pool: null\n    },\n    \n    onLoad: function () {\n        this.reuse();\n    },\n    \n    unuse: function () {\n        this.node.off(cc.Node.EventType.TOUCH_END, pauseresume, this.node);\n    },\n    \n    reuse: function () {\n        this.node.paused = false;\n        this.node.on(cc.Node.EventType.TOUCH_END, pauseresume, this.node);\n    }\n});\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas } from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n\r\n        Gold: cc.Label,\r\n        UserName: cc.Label,\r\n        UserPic: cc.Node,\r\n        UserID: cc.Label,\r\n        // 余额不足\r\n        moneyEnough: cc.Node,\r\n        ClientLog: cc.Node,\r\n        Regulation: cc.Node,\r\n        RankingList: cc.Node,\r\n        RankingLists: cc.ScrollView,\r\n        GameLists: cc.ScrollView,\r\n        misNumber: 0,\r\n        misWindow: cc.Node,  //答题卡\r\n        ViewWeb: cc.WebView,\r\n\r\n        datingMis: cc.AudioSource,\r\n        ipst: true\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    datingMiss() {\r\n        if (this.ipst) {\r\n            this.ipst = !this.ipst\r\n            this.datingMis.play()\r\n        } else {\r\n            this.datingMis.stop()\r\n            this.ipst = !this.ipst\r\n        }\r\n    },\r\n    onLoad() {\r\n        this.SetInfo()\r\n\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.UserName.string = Global.DataUsers.UserName;\r\n        this.UserID.string = 'ID:' + Global.DataUsers.Login;\r\n        this.Gold.string = Global.DataUsers.Balance;\r\n        this.getView()\r\n\r\n        this.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.ClientLogs()\r\n        this.regulations()\r\n        this.GetlsexamprofitrankingInfo()\r\n        this.getvouchernumber()\r\n    },\r\n    closeMoneyEnough() {\r\n        this.moneyEnough.scale = 0\r\n    },\r\n    // ゲーム　スタート\r\n    GameStart() {\r\n        if (this.Gold.string < 100) {\r\n            this.moneyEnough.scale = 1\r\n            return\r\n        }\r\n\r\n        if (this.misNumber != 0) {\r\n            this.misWindow.scale = 1\r\n            return\r\n        }\r\n        this.GetInroom(0)\r\n    },\r\n    closemisWindow() {\r\n        this.misWindow.scale = 0\r\n    },\r\n    //积分卡\r\n    getvouchernumber() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getvouchernumber\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                this.misNumber = mid.Number\r\n            }\r\n        })\r\n    },\r\n    //りんっぐ\r\n    GetInroom(e, sms) {\r\n        console.log(sms);\r\n\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0,\r\n            IsAnswerSheet: sms  //是否使用答题卡（0:否，1：是）\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/inroom\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                Global.questions = mid.Data\r\n                console.log(Global.questions)\r\n                cc.director.loadScene('Questions')\r\n            }\r\n        })\r\n    },\r\n    //积分池\r\n\r\n    //游戏记录\r\n    ClientLogs() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getexamgamerecords\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid.object)\r\n                mid.object.forEach((element, index) => {\r\n                    // console.log((index % 2));\r\n                    // console.log('排位-' + index);\r\n\r\n                    this.loaderFab(element, (index % 2), index)\r\n                });\r\n            }\r\n        })\r\n    },\r\n    loaderFab(mo, index, idx) {\r\n\r\n        var newNode, rangLabel, timeLabel, moneyLabel, moneysLabel\r\n        cc.loader.loadRes(\"/prefab/Sprite2\", (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            // console.log(index);\r\n            // console.log('排位' + idx);\r\n\r\n            if (index == 0) {\r\n                // console.log('index');\r\n                this.loadRes(newNode)\r\n            }\r\n            rangLabel = newNode.getChildByName('rangLabel');\r\n            moneysLabel = newNode.getChildByName('moneysLabel');\r\n            moneyLabel = newNode.getChildByName('moneyLabel');\r\n            timeLabel = newNode.getChildByName('timeLabel');\r\n            moneysLabel.getComponent(cc.Label).string = mo.RecyclingAmount\r\n            rangLabel.getComponent(cc.Label).string = mo.Ranking\r\n            moneyLabel.getComponent(cc.Label).string = mo.TradesAmount\r\n            timeLabel.getComponent(cc.Label).string = this.getDate(mo.ExitTime * 1000)\r\n            this.GameLists.content.addChild(newNode)\r\n        });\r\n    },\r\n    // getDate(date) {\r\n    //     var t = new Date(date).toLocaleString();\r\n    //     return t;\r\n    // },\r\n    getDate(date1) {\r\n        // 比如需要这样的格式 yyyy-MM-dd hh:mm:ss\r\n        var date = new Date(date1);\r\n        let Y = date.getFullYear() + '-',\r\n            M = (date.getMonth() + 1 < 10 ? '0' + (date.getMonth() + 1) : date.getMonth() + 1) + '-',\r\n            D = date.getDate(),\r\n            h = date.getHours(),\r\n            m = date.getMinutes(),\r\n            s = date.getSeconds();\r\n        return (Y + M + D + ' ' + this.minutes(h) + ':' + this.minutes(m) + ':' + this.minutes(s))\r\n        // 输出结果：2014-04-23 18:55:49\r\n    },\r\n    minutes(h) {\r\n        let _s = h + ''\r\n        if (_s.length == 1) {\r\n            let _h = '0' + _s\r\n            return _h\r\n        } else {\r\n            return _s\r\n        }\r\n    },\r\n    loadRes(newNode) {\r\n        cc.loader.loadRes(\"/Qus/bg2\", function (err, spriteFrame) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame);\r\n        });\r\n    },\r\n    //加载网络资源\r\n    loaderUserIcon(mo, RanSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            // RanSprite.getComponent(cc.sprite).spriteFrame.setTexture(tex);\r\n            RanSprite.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    //规则\r\n    regulations() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getexamruleinfo\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid.object)\r\n            }\r\n        })\r\n    },\r\n    //邀请\r\n\r\n    // 音乐设置\r\n    winClose(e, num) {\r\n        this.ClientLog.scale = num\r\n    },\r\n    winClose2(e, num) {\r\n        this.Regulation.scale = num\r\n    },\r\n    winClose3(e, num) {\r\n        this.RankingList.scale = num\r\n        if (num == 1) {\r\n            this.GetlsexamprofitrankingInfo()\r\n        }\r\n    },\r\n    GetlsexamprofitrankingInfo() {\r\n        this.RankingLists.content.removeAllChildren()\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getlsexamprofitrankingInfo\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                // console.log(mid.object)\r\n                mid.object.forEach((element, index) => {\r\n                    this.loaderRaing(element, (index % 2), index)\r\n                });\r\n            }\r\n        })\r\n    },\r\n    loaderRaing(mo, index, idx) {\r\n        var newNode, rang, timeLabel, moneyLabel, name\r\n        console.log(index);\r\n        // console.log('排位' + idx);\r\n        cc.loader.loadRes(\"/prefab/Spriter\", (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            if (index == 1) {\r\n                // console.log('index');\r\n                this.loadRes(newNode)\r\n            }\r\n            rang = newNode.getChildByName('rang');\r\n            moneyLabel = newNode.getChildByName('moneyLabel');\r\n            name = newNode.getChildByName('name');\r\n            rang.getComponent(cc.Label).string = mo.Ranking\r\n            moneyLabel.getComponent(cc.Label).string = mo.Profit\r\n            name.getComponent(cc.Label).string = mo.UserName\r\n            this.RankingLists.content.addChild(newNode)\r\n        });\r\n    },\r\n\r\n    getView() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            client: 1,\r\n            clientVersion: '0.0.1'\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Common/getversion\", _data, e => {\r\n            let json = JSON.parse(e)\r\n            console.log(json.object.circleUrl);\r\n            console.log(this.ViewWeb);\r\n            this.ViewWeb.url = json.object.circleUrl + '/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 6\r\n            // WebView.url = 'http://localhost:6667/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId\r\n            // this.ViewWeb.url = 'http://192.168.1.106:802/?tok=' + Global.DataUsers.Token + '&usid=' + Global.DataUsers.UserId + '&type=' + 6\r\n            // console.log(this.ViewWeb.url)\r\n            // console.log('--------------------------------------------------')\r\n        })\r\n    }\r\n\r\n});\r\n","\r\nimport { GetUserDatas } from 'GetUserData'\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n\r\n        speed: 0.1,\r\n        Gold: cc.Label,\r\n        UserName: cc.Label,\r\n        UserPic: cc.Node,\r\n        UserID: cc.Label,\r\n        titles: cc.Label,\r\n        // 游戏进行中 请等待下一局开始\r\n        // 答题开始\r\n        // ['等待其他玩家', '开始倒计时', '答题倒计时'],\r\n        // 等待其Ta玩家\r\n        StartTime: 0,\r\n        StartTimeLabel: cc.Label,\r\n        StartTimeView: cc.Label,\r\n        SetTimeA: cc.Node,\r\n        horizontal: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        question: {\r\n            default: null,\r\n            type: cc.Sprite\r\n        },\r\n        ExamRoomQuestionID: 0,\r\n        Correct: 0,\r\n        Wrong: 0,\r\n        btnd: cc.Button,\r\n        btnc: cc.Button,\r\n        isCuo: true,\r\n        DengdaiTitle: cc.Label,\r\n        StartTitle: cc.Label,\r\n        ExamRoomGameNumberID: 0,\r\n        CurrentQuestions: 0,  //当前第几题\r\n        errorWin: cc.Node,\r\n        RenNumber: cc.Label,  //人数\r\n        prepareGame: cc.Label, //等待与准备提示\r\n        Annunciate: cc.Label,\r\n        setAmount: cc.Label,\r\n        allAmount: 0, //当前用户金额,\r\n        ObjectList: '',\r\n        RankingLists: cc.Node,\r\n        ten: true,\r\n        // 存储答题\r\n        QusNumber: 0,\r\n        QusNumbertitle: cc.Label,\r\n        scrollViewLcc: cc.ScrollView,\r\n        overRaing: cc.Node,\r\n        moneyEnough: cc.Node, //充值\r\n        myMonney: cc.Label,   //自己的收益\r\n        RankingNumber: cc.Label,\r\n\r\n\r\n        //yinyue\r\n        clickmis: cc.AudioSource,\r\n        datingpipei: cc.AudioSource,\r\n        errorbtn: cc.AudioSource,\r\n        gameover: cc.AudioSource,\r\n        gamewin: cc.AudioSource,\r\n        datizhong: cc.AudioSource,\r\n        ipst: true,\r\n        misnumber: 1\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    datingMiss() {\r\n        if (this.ipst) {\r\n            this.ipst = !this.ipst\r\n            if (this.misnumber == 2) {\r\n                this.datizhong.play()\r\n            }\r\n            if (this.misnumber == 1) {\r\n                this.datingpipei.play()\r\n            }\r\n        } else {\r\n            this.ipst = !this.ipst\r\n            if (this.datingpipei.isPlaying) {\r\n                this.datingpipei.stop()\r\n                this.misnumber = 1\r\n            }\r\n            if (this.datizhong.isPlaying) {\r\n                this.datizhong.stop()\r\n                this.misnumber = 2\r\n            }\r\n        }\r\n    },\r\n    onLoad() {\r\n        this.SetInfo()\r\n        // this._updataFillStart(this.horizontal, dt);\r\n\r\n        console.log('this.horizontal.fillStart');\r\n        console.log(this.horizontal.fillStart);\r\n\r\n\r\n\r\n    },\r\n    SetInfo() {\r\n        GetUserDatas()\r\n        this.UserName.string = Global.DataUsers.UserName;\r\n        this.UserID.string = 'ID:' + Global.DataUsers.Login;\r\n        this.Gold.string = Global.DataUsers.Balance;\r\n        this.loaderUserIcon(Global.DataUsers.UserIcon, this.UserPic)\r\n        this.Getroom()\r\n        if (Global.DataUsers.wsUrl != 'undefined') {\r\n            this.nSocket()\r\n        }\r\n    },\r\n\r\n    // ゲーム　スタート\r\n    // GameStart() {\r\n    // cc.director.loadScene('Questions')\r\n    //     this.GetInroom()\r\n    // },\r\n    //りんっぐ\r\n    Getroom() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            roomnumberid: Global.questions\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getroom\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                this.unschedule(this.T2);\r\n                this.RankingList(mid)\r\n                console.log(mid)\r\n                // console.log(mid.object.CurrDateTime)\r\n                // console.log(mid.object.List);\r\n                // console.log(mid.object.Question.QuestionUrl);\r\n                // console.log(mid.object.Question.ExamRoomQuestionID);\r\n                // console.log(mid.object.Question.IsWrongAnswer);\r\n                // console.log(mid.object.IsMatch); //（0：参战，1：观战）\r\n                // console.log(mid.object.ExamRoomGameNumberID);\r\n                this.Gold.string = mid.Balance\r\n                if (this.QusNumber == mid.object.Question.QuestionsTotalsNumber) {\r\n                    //答完十题\r\n                    this.prepareGame.node.scale = 1\r\n                    this.prepareGame.string = '答题完成！请等待其他玩家！'\r\n                    this.question.node.scale = 0\r\n                    this.ten = false\r\n                } else {\r\n                    // console.log(mid.object.Question.CurrentQuestions);\r\n                    console.log('__________________________');\r\n                    this._updataFillStart(this.horizontal, this.QusNumber + 1);\r\n                }\r\n                this.RenNumber.string = mid.object.List.length\r\n                this.ExamRoomGameNumberID = mid.object.ExamRoomGameNumberID\r\n                //观战\r\n                if (mid.object.IsMatch == 0) {\r\n                    this.DengdaiTitle.node.scale = 0\r\n                    if (mid.object.Question.IsEndAnswer == 1) {\r\n                        console.log('答wan啦');\r\n                    }\r\n                    if (mid.object.Status == 1) {\r\n                        this.datingpipei.play()\r\n                        this.prepareGame.node.scale = 1\r\n                        this.StartTime = mid.object.EndTimestamp - mid.object.CurrDateTime\r\n                        this.StartTimeLabel.string = this.StartTime\r\n                        this.GameTimeOuts(this.StartTimeLabel)\r\n                        console.log('准备考试');\r\n                        this.titles.string = '等待其Ta玩家'\r\n                        this.prepareGame.string = '正在等待各个玩家就位！'\r\n                    }\r\n                    if (mid.object.Status == 2) {\r\n                        this.datizhong.play()\r\n                        if (this.isCuo && this.ten) {\r\n                            this.btnd.interactable = true\r\n                            this.btnc.interactable = true\r\n                        } else {\r\n                            console.log(this.isCuo);\r\n                        }\r\n                        // http://examimgftp.hd4yx0.cn/UploadFile/Exam/20180510/14/3714dcef-0d73-45ef-8668-60a74404e4f8.png\r\n                        // cc.loader.load('http://examimgftp.hd4yx0.cn/UploadFile/Exam/20180510/14/3714dcef-0d73-45ef-8668-60a74404e4f8.png', function (err, tex) {\r\n                        if (this.ten) {\r\n                            this.prepareGame.node.scale = 0\r\n                            this.loadImg(mid.object.Question.QuestionUrl)\r\n                        }\r\n                        this.CurrentQuestions = mid.object.Question.CurrentQuestions  //当前第几题\r\n                        this.QusNumbertitle.string = '第' + mid.object.Question.CurrentQuestions + '/' + mid.object.Question.QuestionsTotalsNumber + '题'\r\n                        this.SetTimeA.scale = 0\r\n                        this.StartTime = mid.object.EndTimestamp - mid.object.CurrDateTime\r\n                        this.StartTimeView.string = this.StartTime\r\n                        this.GameTimeOuts(this.StartTimeView)\r\n                        this.ExamRoomQuestionID = mid.object.Question.ExamRoomQuestionID\r\n                        this.Correct = mid.object.Question.Correct\r\n                        this.Wrong = mid.object.Question.Wrong\r\n                        console.log('开始考试');\r\n\r\n                    }\r\n                }\r\n                if (mid.object.IsMatch == 1) {\r\n                    console.log('观战---------------------------------------');\r\n                    this.StartTime = mid.object.EndTimestamp - mid.object.CurrDateTime\r\n                    this.StartTimeLabel.string = this.StartTime\r\n                    this.GameTimeOuts(this.StartTimeLabel)\r\n                    this.DengdaiTitle.node.scale = 1\r\n                }\r\n            }\r\n        })\r\n    },\r\n    //下载图片\r\n    loadImg(Url) {\r\n        var _this = this\r\n        cc.loader.load(Url, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            // _this.question.spriteFrame.setTexture(tex);\r\n            var spriteFrame = new cc.SpriteFrame(tex);\r\n            _this.question.spriteFrame = spriteFrame\r\n            _this.question.node.scale = 1\r\n        });\r\n    },\r\n    //倒计时\r\n    GameTimeOuts(sb) {\r\n        this.T2 = () => {\r\n            if (this.StartTime < 1) {\r\n                this.unschedule(this.T2);\r\n                this.Getroom()\r\n            } else {\r\n                // this.unschedule(this.T2);\r\n\r\n                let x = this.StartTime - 1;\r\n                sb.string = x;\r\n                if (this.StartTime < 5) {\r\n                    if (this.ten) {\r\n                        sb.node.color = new cc.Color(255, 0, 0);\r\n                        this.prepareGame.string = '开始答题'\r\n                    }\r\n                } else {\r\n                    sb.node.color = new cc.Color(255, 255, 255);\r\n\r\n                }\r\n                this.StartTime = x;\r\n            }\r\n        };\r\n        this.schedule(this.T2, 1);\r\n    },\r\n    //游戏一局完成\r\n    GetGameQuestions() {\r\n        this.gamewin.play()\r\n        this.overRaing.scale = 1;\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomGameNumberID: this.ExamRoomGameNumberID\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/getexamroomgamerecords\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                console.log(mid)\r\n                console.log(mid.object[0].Avatar)\r\n                console.log(mid.object[0].AnswerTime)\r\n                console.log(mid.object[0].Profit)\r\n                console.log(mid.object[0].RecyclingAmount)\r\n                console.log(mid.object[0].Ranking)\r\n                console.log(mid.object[0].UserName)\r\n\r\n                for (const iterator of mid.object) {\r\n                    // console.log(iterator.Ranking);\r\n                    switch (iterator.Ranking) {\r\n                        case 1:\r\n                            this.SetRaningPreFab(iterator, 'wone', iterator.UserID)\r\n                            break;\r\n                        case 2:\r\n                            this.SetRaningPreFab(iterator, 'wTwo', iterator.UserID)\r\n                            break;\r\n                        case 3:\r\n                            this.SetRaningPreFab(iterator, 'wThree', iterator.UserID)\r\n                            break;\r\n                        default:\r\n                            this.SetRaningPreFab(iterator, 'wDef', iterator.UserID)\r\n                            break;\r\n                    }\r\n                }\r\n\r\n            }\r\n        })\r\n    },\r\n    SetRaningPreFab(mo, fabs, uid) {\r\n        var newNode, wSprite, wLabel, wMoney, wTime, numbers\r\n        cc.loader.loadRes(\"/prefab/\" + fabs, (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            console.log(newNode.getComponent(cc.Sprite));\r\n            wSprite = newNode.getChildByName('nSprite');\r\n            wLabel = newNode.getChildByName('wLabel');\r\n            wMoney = newNode.getChildByName('wMoney');\r\n            wTime = newNode.getChildByName('wTime');\r\n            if (uid == Global.DataUsers.UserId) {\r\n                this.RankingNumber.string = mo.Ranking\r\n                this.myMonney.string = '+' + mo.RecyclingAmount\r\n                this.loadRes(newNode)\r\n            }\r\n            if (newNode.getChildByName('number')) {\r\n                numbers = newNode.getChildByName('number');\r\n                numbers.getComponent(cc.Label).string = mo.Ranking\r\n            }\r\n            let nSprite_child = wSprite.getChildByName('nSprite_child')\r\n            this.loaderUserIcon(mo.Avatar, nSprite_child)\r\n            // console.log(RanSprite.getComponent(cc.Sprite));\r\n            wLabel.getComponent(cc.Label).string = mo.UserName\r\n            wMoney.getComponent(cc.Label).string = '+' + mo.RecyclingAmount\r\n            wTime.getComponent(cc.Label).string = parseInt(mo.AnswerTime) + 's'\r\n            this.scrollViewLcc.content.addChild(newNode)\r\n        });\r\n\r\n\r\n    },\r\n    loadRes(newNode) {\r\n        cc.loader.loadRes(\"/Qus/my\", function (err, spriteFrame) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(spriteFrame);\r\n        });\r\n    },\r\n    rmrematch() { //再来一局\r\n        this.overRaing.scale = 0;\r\n        this.scrollViewLcc.content.removeAllChildren() //默认true\r\n        this.GameStart()\r\n    },\r\n    // ゲーム　スタート\r\n    GameStart() {\r\n        if (this.Gold.string < 100) {\r\n            this.moneyEnough.scale = 1\r\n            return\r\n        }\r\n        this.GetInroom()\r\n    },\r\n\r\n    //りんっぐ\r\n    GetInroom() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            ExamRoomID: 0\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/inroom\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                Global.questions = mid.Data\r\n                console.log(Global.questions)\r\n                this.Getroom()\r\n                //初始化数据\r\n                this.QusNumber = 0\r\n                this.question.node.scale = 0\r\n                this.prepareGame.node.scale = 1\r\n                this.prepareGame.string = '正在等待各个玩家就位！'\r\n                this.SetTimeA.scale = 1\r\n                this.btnd.interactable = false\r\n                this.btnc.interactable = false\r\n                this.ten = true\r\n                this.isCuo = true\r\n                this.nSocket()\r\n            }\r\n        })\r\n    },\r\n    //正确的\r\n    Corrects() {\r\n        this.SaveCorrects(this.Correct)\r\n    },\r\n    //错误的\r\n    Wrongs() {\r\n        this.SaveCorrects(this.Wrong)\r\n    },\r\n    //发送答案exam/answer\r\n    SaveCorrects(ass) {\r\n        this.btnd.interactable = false\r\n        this.btnc.interactable = false\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            roomnumberid: Global.questions,\r\n            ExamRoomQuestionID: this.ExamRoomQuestionID,\r\n            Answer: ass\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/exam/answer\", _data, e => {\r\n            let mid = JSON.parse(e)\r\n            if (mid.code == 12000) {\r\n                if (mid.object.IsWrongAnswer == 1) {\r\n                    this.errorbtn.play()\r\n                    this.btnd.interactable = false\r\n                    this.btnc.interactable = false\r\n                    console.log('答错啦');\r\n                    this.isCuo = false\r\n                    this.errorWin.scale = 1\r\n                    this.scheduleOnce(() => {\r\n                        this.btnd.interactable = true\r\n                        this.btnc.interactable = true\r\n                        this.errorWin.scale = 0;\r\n                    }, 2);\r\n                }\r\n                if (mid.object.IsWrongAnswer == 0) {\r\n                    this.unschedule(this.T2);\r\n                    this.isCuo = true\r\n                    this.Getroom()\r\n                    this.QusNumber = this.QusNumber + 1\r\n                    console.log('答对:' + this.QusNumber);\r\n\r\n                }\r\n            }\r\n        })\r\n    },\r\n    //计算收益和排行榜\r\n    RankingList(mid) {\r\n        if (mid.object.List.length <= 1) {\r\n            return\r\n        }\r\n        let flag = true\r\n        let n = mid.object.List.length\r\n        let objects = mid.object.List\r\n        while (flag) {\r\n            flag = false;\r\n            for (let i = 1; i < n; i++) {\r\n                if (objects[i - 1].Ranking > objects[i].Ranking) {\r\n                    var temp = objects[i - 1];\r\n                    objects[i - 1] = objects[i];\r\n                    objects[i] = temp;\r\n                    this.ObjectList = JSON.parse(JSON.stringify(objects))\r\n                    flag = true;\r\n                } else {\r\n                    //没有重新排序\r\n                    this.ObjectList = JSON.parse(JSON.stringify(objects))\r\n                }\r\n            }\r\n            n--;\r\n        }\r\n        for (let s = this.ObjectList.length; s > 0; s--) {\r\n            var mo = this.ObjectList[s - 1]\r\n            if (s < this.ObjectList.length) {\r\n                let moe = this.ObjectList[s]\r\n                let mo2 = moe.Amount / s\r\n                let mo1 = this.allAmount / s\r\n                let offsetAmount = mo2 + mo1\r\n                mo.innerList = offsetAmount.toFixed(2)\r\n            } else {\r\n                //当前是收益\r\n                let setAmount = mo.Amount / s\r\n                this.allAmount = setAmount  //保存在全部\r\n                mo.innerList = setAmount.toFixed(2)\r\n            }\r\n        }\r\n        this.RankingLists.removeAllChildren();\r\n        for (const iterator of this.ObjectList) {\r\n            if (Global.DataUsers.UserId == iterator.UserID) {\r\n                this.setAmount.string = iterator.innerList\r\n            }\r\n            this.loaderFab(iterator)\r\n        }\r\n    },\r\n    loaderFab(mo) {\r\n        var newNode, RanSprite, RanLabel, RanBoxLabex\r\n        cc.loader.loadRes(\"/prefab/bbx\", (err, fab) => {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            newNode = cc.instantiate(fab);\r\n            RanLabel = cc.find(\"RanIcon/RanLabel\", newNode);\r\n            RanSprite = newNode.getChildByName('RanSprite').getChildByName('nSprite');\r\n            RanBoxLabex = cc.find(\"RanBox/RanBoxLabex\", newNode);\r\n            // console.log(RanSprite.getComponent(cc.Sprite));\r\n            this.loaderUserIcon(mo.Avatar, RanSprite)\r\n            RanLabel.getComponent(cc.Label).string = mo.Ranking\r\n            RanBoxLabex.getComponent(cc.Label).string = mo.innerList\r\n            this.RankingLists.addChild(newNode)\r\n        });\r\n    },\r\n\r\n    loaderUserIcon(mo, RanSprite) {\r\n        cc.loader.load(mo, function (err, tex) {\r\n            if (err) {\r\n                console.log(err);\r\n                return;\r\n            }\r\n            // RanSprite.getComponent(cc.sprite).spriteFrame.setTexture(tex);\r\n            RanSprite.getComponent(cc.Sprite).spriteFrame = new cc.SpriteFrame(tex);\r\n        });\r\n    },\r\n    nSocket(ns) {\r\n        console.log(ns);\r\n\r\n        var ws = new WebSocket(Global.DataUsers.wsUrl);\r\n        if (ns == 1) {\r\n            ws.close()\r\n        }\r\n        ws.onopen = (event) => {\r\n            console.log(\"サーバー　オペ\");\r\n            if (ws.readyState === WebSocket.OPEN) {\r\n                var room = {\r\n                    Code: 102,\r\n                    Data: {\r\n                        roomId: Global.questions,\r\n                        userId: Global.DataUsers.UserId,\r\n                        token: Global.DataUsers.Token,\r\n                    }\r\n                };\r\n                ws.send(JSON.stringify(room));\r\n                console.log(\"WebSocket 卫星发射...！\");\r\n            } else {\r\n                console.log(\"WebSocket 准备好卫星发射...！\");\r\n            }\r\n        };\r\n        ws.onmessage = (event) => {\r\n            let evMsg = JSON.parse(event.data)\r\n            if (evMsg.Code == 103) {\r\n                Global.socketMsg = '恭喜玩家' + evMsg.Data.UserDisplayName + '获得' + evMsg.Data.Profit + '金币'\r\n            } else {\r\n                console.log(\"サーバーのメッセージ: \" + event.data);\r\n\r\n            }\r\n\r\n            let aData = JSON.parse(event.data).Data.Status\r\n            let UserID = JSON.parse(event.data).Data.UserID\r\n            // let Floor = JSON.parse(event.data).Data.Floor\r\n            this.GetStatus(aData, UserID, ws)\r\n        };\r\n        ws.onerror = (event) => {\r\n            console.log(\"メッセージ エッロ！！\");\r\n            // this.schedule(function () {\r\n            //   // 这里的 this 指向 component\r\n            //   this.doSomething();\r\n            // }, 1, 99, 0);\r\n        };\r\n        ws.onclose = (event) => {\r\n            console.log(\"サーバー　オフ.\");\r\n        };\r\n\r\n    },\r\n\r\n    GetStatus(x, u, ws) { //sk里面的id\r\n        switch (x) {\r\n            case 0:\r\n                console.log('进入房间')\r\n                break;\r\n            case 1:\r\n                console.log('有人参战')\r\n                this.Getroom()\r\n                break;\r\n            case 2:\r\n                console.log('有人观战')\r\n                this.Getroom()\r\n                break;\r\n            case 3:\r\n                console.log('开始游戏')\r\n                this.Getroom()\r\n                break;\r\n            case 4:\r\n                console.log('推出游戏')\r\n                break;\r\n            case 5:\r\n                console.log('游戏结束')\r\n                this.GetGameQuestions()\r\n                break;\r\n            case 6:\r\n                ws.close()\r\n                console.log('解散房间')\r\n                break;\r\n            case 7:\r\n                console.log('人数不够')\r\n                break;\r\n            case 8:\r\n                console.log('退出游戏')\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    goHome() {\r\n        this.nSocket(1)\r\n        cc.director.loadScene('QuestionsStart');\r\n    },\r\n    update(dt) {\r\n\r\n        this.Annunciate.string = Global.socketMsg\r\n    },\r\n\r\n    _updataFillStart: function (sprite, dt) {\r\n        var fillStart = sprite.fillStart;\r\n        // fillStart = fillStart > 0 ? fillStart -= (dt * this.speed) : 1;\r\n        console.log((dt * this.speed));\r\n        sprite.fillStart = (dt * this.speed);\r\n    },\r\n\r\n\r\n\r\n});\r\n","\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    /**\r\n     * 音效设置\r\n     */\r\n    Music: cc.Slider,\r\n    Sounds: cc.Slider,\r\n\r\n  },\r\n\r\n\r\n  onLoad() {\r\n    // this.scrollView.runAction(cc.moveTo(2, 100, 100));\r\n    // console.log(this.content);\r\n\r\n    // this.content.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n\r\n    //   console.log(event.target);\r\n    //   // console.log(event.target._children[0].getComponent(cc.Label).string);\r\n    //   console.log('Mouse down');\r\n    // }, this);\r\n\r\n    // if (Global.Audios == '') {\r\n    //   Global.Audios = this.node.parent.getComponentInChildren(cc.AudioSource)\r\n    // }\r\n\r\n    //音乐设置\r\n    if (cc.sys.localStorage.getItem(\"Mic\") != null) {\r\n      this._updateMusicVolume(cc.sys.localStorage.getItem(\"Mic\"));\r\n      this.Music.progress = cc.sys.localStorage.getItem(\"Mic\");\r\n    } else {\r\n      this._updateMusicVolume(this.Music.progress);\r\n    }\r\n\r\n\r\n    if (cc.sys.localStorage.getItem(\"Sou\") != null) {\r\n      this._updateAudiosVolume(cc.sys.localStorage.getItem(\"Sou\"));\r\n      this.Sounds.progress = cc.sys.localStorage.getItem(\"Sou\");\r\n    } else {\r\n      this._updateAudiosVolume(this.Sounds.progress);\r\n    }\r\n\r\n\r\n  },\r\n  /**\r\n   * 音乐设置\r\n   * @param {d} progress\r\n   */\r\n  _updateMusicVolume(progress) {\r\n    // Global.Audios.volume = progress;\r\n    Global.GameAwait.volume = progress;\r\n    Global.startTime.volume = progress\r\n    Global.bombTimeSource.volume = progress\r\n    cc.sys.localStorage.setItem(\"Mic\", progress);\r\n  },\r\n  onSliderHEvent(sender, eventType) {\r\n    this._updateMusicVolume(sender.progress);\r\n  },\r\n\r\n\r\n  _updateAudiosVolume(progress) {\r\n    Global.timeStartSource.volume = progress\r\n    Global.gameOver.volume = progress\r\n    Global.gameWin.volume = progress\r\n    Global.bombTime.volume = progress\r\n    Global.goSource.volume = progress;\r\n    cc.sys.localStorage.setItem(\"Sou\", progress);\r\n  },\r\n  onSliderHEventAudios(sender, eventType) {\r\n    this._updateAudiosVolume(sender.progress);\r\n  },\r\n\r\n\r\n\r\n});\r\n","\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    /**\r\n     * 音效设置\r\n     */\r\n    Music: cc.Slider,\r\n    Sounds: cc.Slider,\r\n    scrollView: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    scrollView2: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    scrollView3: {\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    spawnCount: 10, // how many items we actually spawn\r\n    totalCount: 0, // how many items we need for the whole list\r\n    itemTemplate: { // item template to instantiate other items\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    addressItem: {\r\n      get: function () {\r\n        return this._addressItem;\r\n      },\r\n      set: function (value) {\r\n        this._addressItem = value;\r\n      }\r\n    },\r\n    /**\r\n     * 省市区按钮\r\n     */\r\n    Sheng: cc.Button,\r\n    ShengID: 0,\r\n    Shi: cc.Button,\r\n    ShiID: 0,\r\n    Qu: cc.Button,\r\n    QuID: 0,\r\n    /**\r\n     * 地址信息\r\n     */\r\n    address: cc.EditBox,\r\n    addressTel: cc.EditBox,\r\n    addressName: cc.EditBox,\r\n    /**\r\n     * 支付信息\r\n     */\r\n    PayTab: cc.Button,            //切换支付宝和银行\r\n    PayCard: cc.Button,           //获取银行信息\r\n    PayCardId: 0,                 //银行ID\r\n    CardNumber: cc.EditBox,       //身份证\r\n    bankCard: cc.EditBox,         //银行卡\r\n    bankCardName: cc.EditBox,     //名字\r\n    CardName: cc.EditBox,         //名字\r\n    alipayCard: cc.EditBox,       //支付宝\r\n    radioButton: {                //切换支付宝银行list\r\n      default: [],\r\n      type: cc.Toggle\r\n    },\r\n    EditBoxList1: cc.Node,        //银行卡页\r\n    EditBoxList2: cc.Node,        //支付宝页\r\n    scrollViewCard: {             //银行滚动list\r\n      default: null,\r\n      type: cc.ScrollView\r\n    },\r\n    togglePay: cc.Node,\r\n    sign: 1,                     //标示银行和收货地址切换\r\n    signPay: 1,                   //银行和支付宝切换id \r\n\r\n    radioButtonTabs: {\r\n      default: [],\r\n      type: cc.Toggle\r\n    },\r\n    SaveBtn: cc.Button,\r\n    mis: cc.RichText\r\n  },\r\n\r\n\r\n  onLoad() {\r\n    this.getsys()\r\n    this.items = [];\r\n    this.content = this.scrollView.content;\r\n    this.content2 = this.scrollView2.content;\r\n    this.content3 = this.scrollView3.content;\r\n    Global.GetMessges(obj => {\r\n      console.log(obj);\r\n\r\n      if (obj != '') {\r\n        Global.addressId = obj[0].ID\r\n        this.address.string = obj[0].DetailAddress\r\n        this.addressName.string = obj[0].contactName\r\n        this.addressTel.string = obj[0].MobilePhone\r\n        this.Sheng.getComponentInChildren(cc.Label).string = obj[0].ProvinceName\r\n        this.Shi.getComponentInChildren(cc.Label).string = obj[0].CityName\r\n        this.Qu.getComponentInChildren(cc.Label).string = obj[0].AreaName\r\n      }\r\n    })\r\n    this.GetPayInfo()\r\n    this.GetBankListPost()\r\n\r\n    // this.scrollView.runAction(cc.moveTo(2, 100, 100));\r\n    // console.log(this.content);\r\n\r\n    // this.content.on(cc.Node.EventType.TOUCH_START, function (event) {\r\n\r\n    //   console.log(event.target);\r\n    //   // console.log(event.target._children[0].getComponent(cc.Label).string);\r\n    //   console.log('Mouse down');\r\n    // }, this);\r\n\r\n    if (Global.Audios == '') {\r\n      Global.Audios = this.node.parent.getComponentInChildren(cc.AudioSource)\r\n    }\r\n\r\n    //音乐设置\r\n    if (cc.sys.localStorage.getItem(\"Mic\") != null) {\r\n      this._updateMusicVolume(cc.sys.localStorage.getItem(\"Mic\"));\r\n      this.Music.progress = cc.sys.localStorage.getItem(\"Mic\");\r\n    } else {\r\n      this._updateMusicVolume(this.Music.progress);\r\n    }\r\n\r\n\r\n    if (cc.sys.localStorage.getItem(\"Sou\") != null) {\r\n      this._updateAudiosVolume(cc.sys.localStorage.getItem(\"Sou\"));\r\n      this.Sounds.progress = cc.sys.localStorage.getItem(\"Sou\");\r\n    } else {\r\n      this._updateAudiosVolume(this.Sounds.progress);\r\n    }\r\n\r\n  },\r\n  /**\r\n   * 音乐设置\r\n   * @param {d} progress\r\n   */\r\n  _updateMusicVolume(progress) {\r\n    Global.Audios.volume = progress;\r\n    if (Global.GameAwait) {\r\n      Global.GameAwait.volume = progress;\r\n    }\r\n    cc.sys.localStorage.setItem(\"Mic\", progress);\r\n  },\r\n  onSliderHEvent(sender, eventType) {\r\n    this._updateMusicVolume(sender.progress);\r\n  },\r\n\r\n  _updateAudiosVolume(progress) {\r\n    Global.clikcMis.volume = progress;\r\n    cc.sys.localStorage.setItem(\"Sou\", progress);\r\n  },\r\n  onSliderHEventAudios(sender, eventType) {\r\n    this._updateAudiosVolume(sender.progress);\r\n  },\r\n\r\n  /**\r\n   * 退出登录\r\n   */\r\n  LoginOut() {\r\n    let data = {\r\n      userid: Global.DataUsers.UserId\r\n    }, xhr = cc.loader.getXMLHttpRequest()\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + '/account/logout', data, e => {\r\n      console.log('退出')\r\n      if (e) {\r\n        cc.sys.localStorage.removeItem('SJ')\r\n        cc.sys.localStorage.setItem('loginOut', 1)\r\n        cc.director.loadScene('LoginPage')\r\n      }\r\n    })\r\n\r\n  },\r\n\r\n  ShengBotton() {\r\n    this.scrollView.node.scale = 1\r\n    this.scrollView.node.zIndex = 1;\r\n    this.GetAddress(1, e => {\r\n      this.itemclick(e, this.content, 1)\r\n      this.Shi.getComponentInChildren(cc.Label).string = ''\r\n      this.Qu.getComponentInChildren(cc.Label).string = ''\r\n      this.Shi.interactable = false;\r\n      this.Qu.interactable = false;\r\n    })\r\n  },\r\n  ShiBotton() {\r\n    this.scrollView2.node.scale = 1\r\n    this.scrollView2.node.zIndex = 1;\r\n    this.GetAddress(this.ShengID, e => {\r\n      this.itemclick(e, this.content2, 2)\r\n    })\r\n  },\r\n  QuBotton() {\r\n    this.scrollView3.node.zIndex = 1;\r\n    this.scrollView3.node.scale = 1\r\n    this.GetAddress(this.ShiID, e => {\r\n      this.itemclick(e, this.content3, 3)\r\n    })\r\n  },\r\n  GetAddress(pid, fn) {\r\n    console.log(pid)\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Token: Global.DataUsers.Token,\r\n      Userid: Global.DataUsers.UserId,\r\n      ParentID: pid\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/GetLstAreasInfo\", _data, e => {\r\n      fn(e)\r\n    })\r\n\r\n  },\r\n  //this.content,this.ShiID\r\n  itemclick(e, content, ParentID) {\r\n    content.removeAllChildren();\r\n    var addressObj = JSON.parse(e).object;\r\n    this.addressItem = JSON.parse(e).object;\r\n    var nodeLabel = new cc.Node('Label');\r\n    var Label = nodeLabel.addComponent(cc.Label);\r\n    for (let i = 0; i < addressObj.length; ++i) { // spawn items, we only need to do this once\r\n      Label.string = addressObj[i].Name;\r\n      Label.fontSize = 20;\r\n      Label.fontSize = 25;\r\n      let item = cc.instantiate(nodeLabel);\r\n      item.index_target = addressObj[i].Areas_ID;\r\n      content.addChild(item);\r\n      this.items.push(item);\r\n      item.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n        console.log(event.target.index_target);\r\n        console.log('Mouse down--------------------------------------------' + addressObj[i].Name);\r\n        if (ParentID == 1) {\r\n          this.scrollView.node.scale = 0;\r\n          this.scrollView.node.zIndex = -1;\r\n          this.Sheng.getComponentInChildren(cc.Label).string = addressObj[i].Name;\r\n          this.ShengID = event.target.index_target;\r\n          this.Shi.interactable = true;\r\n        }\r\n        if (ParentID == 2) {\r\n          this.scrollView2.node.scale = 0;\r\n          this.scrollView2.node.zIndex = -1;\r\n          this.Shi.getComponentInChildren(cc.Label).string = addressObj[i].Name;\r\n          this.ShiID = event.target.index_target;\r\n          this.Qu.interactable = true;\r\n        }\r\n        if (ParentID == 3) {\r\n          this.scrollView3.node.scale = 0;\r\n          this.scrollView3.node.zIndex = -1;\r\n          this.Qu.getComponentInChildren(cc.Label).string = addressObj[i].Name;\r\n          this.QuID = event.target.index_target;\r\n        }\r\n      }, this);\r\n    }\r\n\r\n  }\r\n  ,\r\n  /**\r\n   * 保存信息\r\n   */\r\n  SaveMessges() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    if (this.sign == 2) {\r\n      let _data = {\r\n        Userid: Global.DataUsers.UserId,\r\n        Token: Global.DataUsers.Token,\r\n        ID: 0,\r\n        Province: this.ShengID ? this.ShengID : 0,\r\n        City: this.ShiID ? this.ShiID : 0,\r\n        Area: this.QuID ? this.QuID : 0,\r\n        ProvinceName: this.Sheng.getComponentInChildren(cc.Label).string,\r\n        CityName: this.Shi.getComponentInChildren(cc.Label).string,\r\n        AreaName: this.Qu.getComponentInChildren(cc.Label).string,\r\n        DetailAddress: this.address.string,\r\n        contactName: this.addressName.string,\r\n        MobilePhone: this.addressTel.string,\r\n        isDefault: true\r\n      }\r\n      Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/SaveUserAddress\", _data, e => { })\r\n    }\r\n    if (this.sign == 1) {\r\n      console.info(this.sign)\r\n      if (this.signPay == 1) {\r\n        this.BindAlipayAccount()\r\n      }\r\n      if (this.signPay == 2) {\r\n        this.BindBankCard()\r\n      }\r\n    }\r\n\r\n  },\r\n  // GetMessges() {\r\n  //   let xhr = cc.loader.getXMLHttpRequest()\r\n  //   let _data = {\r\n  //     Userid: Global.DataUsers.UserId,\r\n  //     Token: Global.DataUsers.Token,\r\n  //     PageIndex: 1,\r\n  //     PageSize: 1\r\n  //   }\r\n  //   Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/Address/GetUserAddressList\", _data, e => {\r\n  //     let obj = JSON.parse(e).object\r\n  //     if (obj) {\r\n  //       Global.addressId = obj[0].ID\r\n  //       this.address.string = obj[0].DetailAddress\r\n  //       this.addressName.string = obj[0].contactName\r\n  //       this.addressTel.string = obj[0].MobilePhone\r\n  //       this.Sheng.getComponentInChildren(cc.Label).string = obj[0].ProvinceName\r\n  //       this.Shi.getComponentInChildren(cc.Label).string = obj[0].CityName\r\n  //       this.Qu.getComponentInChildren(cc.Label).string = obj[0].AreaName\r\n  //     }\r\n  //   })\r\n  // },\r\n  // 地址 end\r\n\r\n  /***\r\n   * 支付信息\r\n   */\r\n  //%.17绑定支付宝账号信息\r\n  BindAlipayAccount() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      TrueName: this.CardName.string,\r\n      AlipayAccount: this.alipayCard.string\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/BindAlipayAccount\", _data, e => {\r\n\r\n    })\r\n  },\r\n  //%.18绑定银行卡信息\r\n  BindBankCard() {\r\n    if (this.PayCardId != 0) {\r\n      let xhr = cc.loader.getXMLHttpRequest()\r\n      let _data = {\r\n        Userid: Global.DataUsers.UserId,\r\n        Token: Global.DataUsers.Token,\r\n        AccountName: this.bankCardName.string,\r\n        AccountNumber: this.bankCard.string,\r\n        BankID: this.PayCardId,\r\n        DocumenCode: this.CardNumber.string\r\n      }\r\n      Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/BindBankCard\", _data, e => {\r\n        if (JSON.parse(e).code != 12000) {\r\n          this.alertWindw(JSON.parse(e).message)\r\n        }\r\n        if (JSON.parse(e).code == 12000) {\r\n          this.alertWindw(JSON.parse(e).message)\r\n        }\r\n      })\r\n    } else {\r\n      this.alertWindw('选择银行')\r\n    }\r\n  },\r\n  //%.19获取支付信息\r\n  GetPayInfo() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/GetPayInfo\", _data, e => {\r\n      let _e = JSON.parse(e).object\r\n      this.CardName.string = _e.TrueName\r\n      this.alipayCard.string = _e.AlipayAccount\r\n      this.bankCardName.string = _e.AccountName\r\n      this.bankCard.string = _e.AccountNumber\r\n      this.CardNumber.string = _e.DocumenCode\r\n    })\r\n  },\r\n  //%.20获取银行信息\r\n  GetBankList() {\r\n    this.scrollViewCard.node.scale = 1\r\n    this.scrollViewCard.node.zIndex = 1;\r\n  },\r\n\r\n  GetBankListPost() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/GetBankList\", _data, e => {\r\n      this.scrollViewCard.content.removeAllChildren();\r\n      let addressObj = JSON.parse(e).object;\r\n      let nodeLabel = new cc.Node('Label');\r\n      let Label = nodeLabel.addComponent(cc.Label);\r\n      for (let i = 0; i < addressObj.length; ++i) { // spawn items, we only need to do this once\r\n        Label.string = addressObj[i].EnumDisplayText;\r\n        Label.fontSize = 20;\r\n        Label.fontSize = 25;\r\n        let item = cc.instantiate(nodeLabel);\r\n        item.index_target = addressObj[i].EnumValue;\r\n        this.scrollViewCard.content.addChild(item);\r\n        item.on(cc.Node.EventType.TOUCH_END, (event) => {\r\n          console.log(event.target.index_target);\r\n          // console.log('Mouse down--------------------------------------------' + addressObj[i].EnumDisplayText);\r\n          this.scrollViewCard.node.scale = 0;\r\n          this.scrollViewCard.node.zIndex = -1;\r\n          this.PayCard.getComponentInChildren(cc.Label).string = addressObj[i].EnumDisplayText;\r\n          this.PayCardId = event.target.index_target;\r\n        }, this);\r\n      }\r\n    })\r\n  },\r\n  /**\r\n   * 切换\r\n   */\r\n  radioButtonClicked: function (toggle) {\r\n    var index = this.radioButton.indexOf(toggle);\r\n    switch (index) {\r\n      case 0:\r\n        //支付宝\r\n        this.PayTab.getComponentInChildren(cc.Label).string = '支付宝'\r\n        this.EditBoxList1.scale = 0\r\n        this.EditBoxList2.scale = 1\r\n        this.PayCard.node.scale = 0\r\n        this.togglePay.scale = 0\r\n        this.signPay = 1\r\n        console.log('支付宝')\r\n        break;\r\n      case 1:\r\n        //银行\r\n        this.PayTab.getComponentInChildren(cc.Label).string = '银行'\r\n        this.EditBoxList2.scale = 0\r\n        this.EditBoxList1.scale = 1\r\n        this.PayCard.node.scale = 1\r\n        this.togglePay.scale = 0\r\n        this.signPay = 2\r\n        console.log('银行')\r\n        break;\r\n      case 2:\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  radioButtonClickedTab(toggle) {\r\n    var index = this.radioButtonTabs.indexOf(toggle);\r\n    switch (index) {\r\n      case 0:\r\n        // console.log('1')\r\n        break;\r\n      case 1:\r\n        this.sign = 1\r\n        // console.log('账户信息')\r\n        break;\r\n      case 2:\r\n        this.sign = 2\r\n        // console.log('地址信息')\r\n        break;\r\n      case 3:\r\n        // console.log('3')\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  },\r\n  PayTabButton() {\r\n    this.togglePay.scale = 1\r\n  },\r\n  changed() {\r\n    if (this.CardName.string && this.alipayCard.string) {\r\n      this.SaveBtn.interactable = true\r\n    } else {\r\n      this.SaveBtn.interactable = false\r\n    }\r\n\r\n\r\n  },\r\n  CardChanged() {\r\n    if (this.CardNumber.string && this.bankCard.string && this.bankCardName.string) {\r\n      this.SaveBtn.interactable = true\r\n    } else {\r\n      this.SaveBtn.interactable = false\r\n    }\r\n  },\r\n\r\n  getsys() {\r\n    let xhr = cc.loader.getXMLHttpRequest()\r\n    let _data = {\r\n      Userid: Global.DataUsers.UserId,\r\n      Token: Global.DataUsers.Token,\r\n      type: 4\r\n    }\r\n    Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/common/GetSysInfo\", _data, e => {\r\n      this.mis.string = JSON.parse(e).object.NoticeContent\r\n    })\r\n  },\r\n  alertWindw(msg) {\r\n    let windowLabel = new cc.Node('Label');\r\n    let wLabel = windowLabel.addComponent(cc.Label);\r\n    wLabel.string = msg\r\n    windowLabel.color = new cc.Color(255, 0, 0)\r\n    windowLabel.zIndex = 999;\r\n    windowLabel.opacity = 0;\r\n    windowLabel.setPosition(cc.p(cc.director.getScene().getChildByName('Canvas').width / 2, cc.director.getScene().getChildByName('Canvas').height / 2))\r\n    cc.director.getScene().addChild(windowLabel)\r\n    windowLabel.runAction(cc.sequence(\r\n      cc.delayTime(0.5),\r\n      cc.fadeIn(0.5),\r\n      cc.delayTime(0.5),\r\n      cc.fadeOut(1),\r\n      cc.tintTo(2, 255, 255, 255)\r\n    ));\r\n  }\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    SetingsBtn: {\r\n      default: null,\r\n      type: cc.Node\r\n    },\r\n    Setings: {\r\n      default: null,\r\n      type: cc.Prefab\r\n    }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    // 设置\r\n    this.SetingsBtn.on(\"touchstart\", this.SetingsFn, this);\r\n  },\r\n  SetingsFn() {\r\n    let Infos = cc.instantiate(this.Setings);\r\n    this.node.addChild(Infos, 104);\r\n    Infos.setPosition(0, 0);\r\n  },\r\n  start() {}\r\n\r\n  // update (dt) {},\r\n});\r\n","\r\nimport { GetUserDatas, LoginTimeOut } from 'GetUserData';\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n        GoodesOneList: cc.ScrollView,\r\n        GoodsWindow: cc.Node,\r\n        GoodsTitle: cc.RichText,\r\n        GoodsTitle2: cc.Label,\r\n        GoodsGold: cc.Label,\r\n        GoodsGold2: cc.Label,\r\n        GoodsImg: cc.Sprite,\r\n        J1: cc.Button,\r\n        J2: cc.Button,\r\n        J3: cc.Label,\r\n        SaveBtn: cc.Button,\r\n        User_Name: cc.Label,\r\n        User_Pic: cc.Sprite,\r\n        User_Id: cc.Label,\r\n        User_Gold: cc.Label,\r\n        GoodsNumber: 0,\r\n        GoodsGoldCoin: 0,\r\n        GoodsName: '',\r\n        GoodsID: '',\r\n        ScrollViews: cc.ScrollView,\r\n        ShowRorderBox: cc.Node,\r\n        tishi: cc.Node,\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n    // 账户数据设置\r\n    SetInfo() {\r\n        this.User_Name.string = Global.DataUsers.UserName\r\n        this.User_Id.string = 'ID:' + Global.DataUsers.Login\r\n        this.User_Gold.string = Global.DataUsers.Balance\r\n        Global.loaderUserIcon(Global.DataUsers.UserIcon, this.User_Pic)\r\n        this.getuserorderlist()\r\n        Global.GetMessges(obj => {\r\n            if (obj) {\r\n                Global.addressId = obj[0].ID\r\n            }\r\n        })\r\n    },\r\n    onLoad() {\r\n\r\n\r\n\r\n        // 定义 SizeProvider，这里定义一个全局对象即可，不需要创建对象实例\r\n        var screenSizeProvider = {\r\n            getContentSize: function () {\r\n                return cc.size(cc.visibleRect);\r\n            },\r\n            setContentSize: function (sizeOrX, y) {\r\n                // 不做任何事情\r\n            },\r\n\r\n            _getWidth: function () {\r\n                return this.getContentSize().width;\r\n            },\r\n            _getHeight: function () {\r\n                return this.getContentSize().height;\r\n            },\r\n        };\r\n        //设置用户数据\r\n        this.SetInfo()\r\n    },\r\n\r\n    start() {\r\n        this.ShopMsg()\r\n    },\r\n    ShopMsg() {\r\n        this.GoodesOneList.content.removeAllChildren()\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/shopgoods/getgoodslist\", _data, e => {\r\n            let _e = JSON.parse(e)\r\n            for (const iterator of _e.object) {\r\n                var newNode\r\n                cc.loader.loadRes(\"/prefab/GoodsSprite\", (err, Prefab) => {\r\n                    if (err) {\r\n                        console.log(err)\r\n                        return;\r\n                    }\r\n                    newNode = cc.instantiate(Prefab);\r\n\r\n                    newNode.getChildByName('Title').getComponent(cc.Label).string = iterator.GoodsName\r\n                    newNode.getChildByName('Money').getComponent(cc.Label).string = iterator.GoodsGoldCoin + '金币'\r\n                    newNode.getChildByName('Number').getComponent(cc.Label).string = '剩余' + iterator.GoodsNumber + '件'\r\n\r\n                    newNode.on(cc.Node.EventType.TOUCH_END, e => {\r\n                        this.GoodsNumber = iterator.GoodsNumber\r\n                        this.GoodsGoldCoin = iterator.GoodsGoldCoin\r\n                        this.GoodsName = iterator.GoodsName\r\n                        this.GoodsID = iterator.GoodsID\r\n                        this.openWindowGoods(iterator.GoodsPic, iterator.GoodsMarketPrice)/*图片，金币，件*/\r\n                        this.GoodsWindow.scale = 1\r\n                        this.J3.string = 1\r\n                    })\r\n                    Global.loaderUserIcon(iterator.GoodsPic, newNode.getChildByName('Pic').getComponent(cc.Sprite))\r\n                    this.GoodesOneList.content.addChild(newNode);\r\n                    // this.GoodesOneList.content.setContentSize(100,100)\r\n                    // let _newNode = cc.find(\"sl/winText\", newNode)\r\n                    // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n                });\r\n            }\r\n        })\r\n    }\r\n    ,\r\n    openWindowGoods(pic, gmp) {\r\n        cc.loader.load({ url: pic, type: 'png' }, (err, tex) => {\r\n            // console.log('Should load a texture from RESTful API by specify the type: ' + (tex instanceof cc.Texture2D));\r\n            this.GoodsImg.spriteFrame.setTexture(tex);\r\n        });\r\n        this.GoodsTitle.string = \"您确定支付<color=#FDC95A>\" + this.GoodsGoldCoin + \"金币</color>兑换\" + this.GoodsName\r\n        this.GoodsGold.string = \"您当前余额为\" + this.User_Gold.string + \"金币 \"\r\n        this.GoodsGold2.string = '￥' + gmp\r\n        this.GoodsTitle2.string = this.GoodsName\r\n        if (this.User_Gold.string > this.GoodsGoldCoin) {\r\n            this.SaveBtn.interactable = true\r\n        }\r\n    },\r\n    closeWin() {\r\n        this.GoodsWindow.scale = 0\r\n    },\r\n    J1Fn() {\r\n        if (this.J3.string > 1) {\r\n            this.J3.string--\r\n            this.GoodsTitle.string = \"您确定支付<color=#FDC95A>\" + this.GoodsGoldCoin * this.J3.string + \"金币</color>兑换\" + this.GoodsName\r\n        }\r\n    },\r\n    J2Fn() {\r\n        this.J3.string++\r\n        let n = this.GoodsGoldCoin * this.J3.string\r\n        if (this.J3.string < this.GoodsNumber && n < this.User_Gold.string) {\r\n            this.GoodsTitle.string = \"您确定支付<color=#FDC95A>\" + this.GoodsGoldCoin * this.J3.string + \"金币</color>兑换\" + this.GoodsName\r\n        } else {\r\n            this.J3.string--\r\n        }\r\n    },\r\n    SaveBtnFn() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n            GoodsId: this.GoodsID,\r\n            Number: this.J3.string,\r\n            AddressId: Global.addressId\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/shoporder/goodsexchange\", _data, e => {\r\n            let _e = JSON.parse(e)\r\n            if (_e.code == 12000) {\r\n                this.User_Gold.string = this.User_Gold.string - this.GoodsGoldCoin\r\n                this.GoodsWindow.scale = 0\r\n                this.tishi.scale = 1\r\n                this.tishi.getComponentsInChildren(cc.Label)[0].string = '兑换成功'\r\n\r\n                console.log('兑换成功');\r\n            }\r\n\r\n        })\r\n    },\r\n    getuserorderlist() {\r\n        let xhr = cc.loader.getXMLHttpRequest()\r\n        let _data = {\r\n            Userid: Global.DataUsers.UserId,\r\n            Token: Global.DataUsers.Token,\r\n        }\r\n        Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/shoporder/getuserorderlist\", _data, e => {\r\n            let _e = JSON.parse(e)\r\n            if (_e.code == 12000) {\r\n                for (const iterator of _e.object) {\r\n                    Global.loadPre('record', record => {\r\n                        let Labels = record.getChildByName('sNode').getComponentsInChildren(cc.Label)\r\n                        let Sp = record.getChildByName('sNode').getComponentsInChildren(cc.Sprite)\r\n                        Labels[0].string = iterator.GoodsName\r\n                        if (iterator.ShippingNo) {\r\n                            Labels[1].string = `快递单号:${iterator.ShippingNo}(${iterator.ExpressName})`\r\n                        }\r\n                        Labels[2].string = iterator.GoodsNumber\r\n                        Labels[3].string = iterator.GoodsGoldCoin\r\n                        Labels[4].string = iterator.StrCreateTime\r\n                        Global.loaderUserIcon(iterator.GoodsPic, Sp[1])\r\n                        this.ScrollViews.content.addChild(record)\r\n                    })\r\n                }\r\n\r\n            }\r\n        })\r\n    },\r\n    ShowRorder(e, n) {\r\n        this.ShowRorderBox.scale = n\r\n        if (n == 1) {\r\n            this.ScrollViews.content.removeAllChildren()\r\n            this.getuserorderlist()\r\n        }\r\n    },\r\n    closetishi() {\r\n        this.tishi.scale = 0\r\n    }\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n// import { GetPrefab } from \"GetUserData\";\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    // PhoneView: {\r\n    //   default: null,\r\n    //   type: cc.Prefab\r\n    // }\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n  },\r\n  //登陆框移动方法\r\n  Wecher() {\r\n    console.log('微信登陆s')\r\n  },\r\n\r\n  Tel() {\r\n    // console.log(this.node.parent.height)\r\n    // let PhoneViews = cc.instantiate(this.PhoneView);\r\n    // this.node.parent.addChild(PhoneViews, 101);\r\n    // PhoneViews.setPosition(this.node.parent.width, 0);\r\n    // // var ViewWidth = this.node.parent.width / 2 + this.PhoneView.width / 2;\r\n    // var SignInBox = cc.moveBy(0.2, cc.p(-this.node.parent.width, 0));\r\n    // PhoneViews.runAction(SignInBox);\r\n\r\n    this.GetPrefab('SignInTel')\r\n  },\r\n  start() { },\r\n  GetPrefab(fab) {\r\n    cc.loader.loadRes(\"/prefab/\" + fab, (err, Prefab) => {\r\n      if (err) {\r\n        console.log(err)\r\n        return;\r\n      }\r\n      var newNode = cc.instantiate(Prefab);\r\n      // console.info(this.node)\r\n      newNode.setPosition(this.node.width / 2, this.node.height / 2);\r\n      cc.director.getScene().addChild(newNode);\r\n      // let _newNode = cc.find(\"sl/winText\", newNode)\r\n      // _newNode.getComponentsInChildren(cc.Label)[0].string = gold;\r\n    });\r\n  },\r\n  // update (dt) {},\r\n});\r\n","\r\nimport { verificationPhone } from \"filters\";\r\nimport { GetUserDatas, WeixinLoginTime } from \"GetUserData\";\r\ncc.Class({\r\n  extends: cc.Component,\r\n  properties: {\r\n    //用户手机号控件\r\n    Phone: {\r\n      default: null,\r\n      type: cc.EditBox\r\n    },\r\n    //验证码控件\r\n    SecurityCode: {\r\n      default: null,\r\n      type: cc.EditBox\r\n    },\r\n    // 短信验证码控件\r\n    Messages: {\r\n      default: null,\r\n      type: cc.EditBox\r\n    },\r\n\r\n\r\n    RedLabel: cc.Label,\r\n    GetImgCodes: cc.Sprite,\r\n    //倒计时\r\n    action_times: 60,\r\n    TimesOutBtn: cc.Button,\r\n    TimesOut: cc.Label,\r\n    GetUserDataUrl: \"/account/loginorregister\",\r\n    WebUrl: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    SignWindow: cc.Node,\r\n\r\n    LoginBtn: cc.Button,\r\n\r\n    wxBtn: cc.Node,\r\n    phoneBtn: cc.Node,\r\n    webwxlogin: '',\r\n    loadNode: cc.Node\r\n\r\n  },\r\n  RedLabels(str) {\r\n    this.RedLabel.string = str\r\n  },\r\n  LoginList() {\r\n    console.log('加载登陆表');\r\n    let data = {}\r\n    Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/account/GetLoginList\", data, e => {\r\n      let code = JSON.parse(e)\r\n      console.log(code.mode);\r\n      this.webwxlogin = code.webwxlogin\r\n      if (code.code == 12000) {\r\n        this.loadNode.scale = 0\r\n        switch (code.mode) {\r\n          case 1:\r\n            this.wxBtn.scale = 1\r\n            this.wxBtn.setPositionX(0)\r\n            break;\r\n          case 2:\r\n            this.phoneBtn.scale = 1\r\n            this.phoneBtn.setPositionX(0)\r\n            break;\r\n          case 3:\r\n            this.phoneBtn.scale = 1\r\n            this.wxBtn.scale = 1\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      } else {\r\n        cc.sys.localStorage.removeItem('loginOut')\r\n      }\r\n\r\n    })\r\n  },\r\n\r\n  //信息发射站\r\n  SendMessages(e, c) {\r\n    var xhr = cc.loader.getXMLHttpRequest()\r\n    if (!this.Phone.string) {\r\n      this.RedLabels(\"请输入手机号\")\r\n    } else {\r\n      if (verificationPhone(this.Phone.string) == false) {\r\n        this.RedLabels(\"请输入正确手机号\")\r\n      } else {\r\n        if (c == \"code\") {\r\n          if (!this.SecurityCode.string) {\r\n            this.RedLabels(\"请输入验证码\")\r\n            return;\r\n          }\r\n          let data = {\r\n            \"mobilephone\": this.Phone.string,\r\n            \"imgcode\": this.SecurityCode.string,\r\n            \"clientid\": Global.clientid\r\n          }\r\n          Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/getcode\", data, e => {\r\n            let code = JSON.parse(e)\r\n            if (code.code != 12000) {\r\n              this.RedLabels(code.message)\r\n              return;\r\n            }\r\n            if (code.code == 12000) {\r\n              this.RedLabels(code.message)\r\n              this.TimesOutBtn.interactable = false;\r\n              this.SetTimeOut()\r\n            }\r\n          })\r\n        }\r\n        if (c == \"sub\") {\r\n          if (!this.Messages.string) {\r\n            this.RedLabels(\"请输入短信验证码\");\r\n            return;\r\n          }\r\n          let data = {\r\n            \"mobilephone\": this.Phone.string,\r\n            \"vcode\": this.Messages.string,\r\n            \"code\": \"\",\r\n          }\r\n          Global.streamXHREventsToLabel(xhr, \"POST\", Global.serverUrl + \"/account/loginorregister\", data, e => {\r\n            let _e = JSON.parse(e)\r\n            if (_e.code != 12000) {\r\n              this.RedLabels(_e.message)\r\n              return;\r\n            }\r\n            if (_e.code == 12000) {\r\n              console.log('植入全局数据');\r\n              Global.DataUsers = JSON.parse(JSON.stringify(_e.object)) //植入全局数据\r\n              console.log(Global.DataUsers);\r\n              cc.sys.localStorage.setItem(\"SJ\", encodeURIComponent(JSON.stringify(_e.object)));\r\n              GetUserDatas(1)\r\n            }\r\n          })\r\n        }\r\n      }\r\n    }\r\n  },\r\n  TableChange() {\r\n    if (this.Messages.string > 0 && this.Phone.string) {\r\n      this.LoginBtn.interactable = true\r\n    } else {\r\n      this.LoginBtn.interactable = false\r\n    }\r\n  },\r\n\r\n  // 倒数六十\r\n  SetTimeOut() {\r\n    this.t = function () {\r\n      if (this.action_times < 1) {\r\n        this.action_times = 60;\r\n        this.TimesOut.string = \"获取验证码\"\r\n        this.unschedule(this.t);\r\n        this.TimesOutBtn.interactable = true;\r\n      } else {\r\n        // this.unschedule(this.t);\r\n        // 这里的 this 指向 component\r\n        let x = this.action_times - 1;\r\n        this.TimesOut.string = x;\r\n        this.action_times = x;\r\n      }\r\n\r\n    };\r\n    this.schedule(this.t, 1);\r\n  },\r\n\r\n  CloseViews(e, num) {\r\n    this.SignWindow.scale = num\r\n  },\r\n  getQueryString(name) {\r\n    var reg = new RegExp(\"(^|&)\" + name + \"=([^&]*)(&|$)\", \"i\");\r\n    var r = window.location.search.substr(1).match(reg);\r\n    if (r != null) return decodeURI(r[2]);\r\n    return null;\r\n  },\r\n  onLoad() {\r\n    // this.loadNode = cc.director.getScene().getChildByName('Canvas').getChildByName('Splash').scale\r\n\r\n    console.log(\"/执行穿越模式/\");\r\n    this.WebUrlText()  //验证码\r\n    if (navigator.userAgent.toLowerCase().match(/MicroMessenger/i) == \"micromessenger\") {\r\n      //在微信中打开\r\n      console.log('微信打开了');\r\n      console.log(this.getQueryString('wxtoken'));\r\n      // 存在的话直接跳进去\r\n      if (this.getQueryString('wxtoken') != null) {\r\n        //如果是退出的话\r\n        console.log(cc.sys.localStorage.getItem('loginOut'));\r\n        if (cc.sys.localStorage.getItem('loginOut')) {\r\n          this.LoginList()  //登陆按钮配置\r\n          return\r\n        }\r\n        WeixinLoginTime(this.getQueryString('wxtoken'))\r\n        console.log('??');\r\n        // cc.director.loadScene('Home')\r\n      } else {\r\n        this.LoginList()  //登陆按钮配置\r\n      }\r\n    } else {\r\n      this.LoginList()  //登陆按钮配置\r\n    }\r\n    if (cc.sys.localStorage.getItem(\"SJ\") != null) {\r\n      GetUserDatas(1)\r\n    }\r\n\r\n  },\r\n  wxBtnLogin() {\r\n    cc.sys.localStorage.removeItem('loginOut')\r\n    console.log(this.webwxlogin + '?cbUrl=' + encodeURIComponent(location.origin));\r\n    // 'weixin://'\r\n    // window.location.href = this.webwxlogin + '?cbUrl=' + encodeURIComponent(location.href.split(\"?\")[0])\r\n    window.location.href = this.webwxlogin + '?cbUrl=' + encodeURIComponent(location.origin)\r\n  },\r\n  // 换验证码\r\n  WebUrlText() {\r\n    var _this = this\r\n    // console.log(Global.serverUrl + \"/common/getimgcode\")\r\n    console.log(Global.serverUrl + \"/common/getimgcode\" + '?clientid=' + Global.clientid + '&t=' + Math.random());\r\n    cc.loader.load({ url: Global.serverUrl + \"/common/getimgcode\" + '?clientid=' + Global.clientid + '&t=' + Math.random(), type: 'png' }, function (err, tex) {\r\n      // console.log('Should load a texture from RESTful API by specify the type: ' + (tex instanceof cc.Texture2D));\r\n      _this.WebUrl.spriteFrame.setTexture(tex);\r\n    });\r\n  },\r\n\r\n\r\n});\r\n","cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        image: cc.Node,\n        music: cc.AudioSource,\n        slider_h: cc.Slider,\n        slider_v: cc.Slider\n    },\n\n    onLoad () {\n        this.slider_v.progress = 0.5;\n        this.slider_h.progress = 0.5;\n        this._updateImageOpacity(this.slider_v.progress);\n        this._updateMusicVolume(this.slider_h.progress);\n    },\n\n    _updateImageOpacity (progress) {\n        this.image.opacity = progress * 255;\n    },\n\n    _updateMusicVolume (progress) {\n        this.music.volume = progress;\n    },\n\n    onSliderVEvent (sender, eventType) {\n        this._updateImageOpacity(sender.progress);\n    },\n\n    onSliderHEvent (sender, eventType) {\n        this._updateMusicVolume(sender.progress);\n    }\n});\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n  extends: cc.Component,\r\n\r\n  properties: {\r\n    LoadTime: {\r\n      default: null,\r\n      type: cc.Sprite\r\n    },\r\n    //huatiao\r\n    action_time: 60,\r\n    //daojishi\r\n    action_times: 60,\r\n    TimesOut: {\r\n      default: null,\r\n      type: cc.Label\r\n    },\r\n\r\n    //掉落节点\r\n    Centers: cc.Node,\r\n    toy: {\r\n      default: [],\r\n      type: cc.Node\r\n    },\r\n  },\r\n\r\n  // LIFE-CYCLE CALLBACKS:\r\n\r\n  onLoad() {\r\n    //   this.sp=this.getComponent(cc.Sprite)\r\n\r\n    this.TimeOuts();\r\n    for (let toys = 0; toys < this.toy.length; toys++) {\r\n      switch (toys) {\r\n        case 0:\r\n          let Centers1 = cc.moveBy(50, cc.p(100, -100));\r\n          this.toy[0].runAction(Centers1);\r\n          break;\r\n        case 1:\r\n          let Centers2 = cc.moveBy(40, cc.p(100, 100));\r\n          this.toy[1].runAction(Centers2);\r\n          break;\r\n        case 2:\r\n          let Centers3 = cc.moveBy(50, cc.p(100, 100));\r\n          this.toy[2].runAction(Centers3);\r\n          break;\r\n        case 3:\r\n          let Centers4 = cc.moveBy(40, cc.p(100, 90));\r\n          this.toy[3].runAction(Centers4);\r\n          break;\r\n        default:\r\n          break;\r\n      }\r\n    }\r\n    let Centers = cc.moveBy(0.2, cc.p(0, -500)).easing(cc.easeInOut(3.0));\r\n    this.Centers.runAction(Centers);\r\n\r\n    console.log('开始匹配')\r\n    this.now_time = 0;\r\n  },\r\n\r\n  CallOff() {\r\n    this.node.destroy()\r\n  },\r\n  TimeOuts() {\r\n    this.t = function () {\r\n      if (this.action_times === 0) {\r\n        // 在第六次执行回调时取消这个计时器\r\n        this.unschedule(this.t);\r\n      } else {\r\n        // 这里的 this 指向 component\r\n        let x = this.action_times - 1;\r\n        this.TimesOut.string = x + \"s\";\r\n        this.action_times = x;\r\n      }\r\n    };\r\n    this.schedule(this.t, 1);\r\n  },\r\n\r\n\r\n  update(dt) {\r\n    if (this.action_times != 0) {\r\n      //倒计时\r\n\r\n      this.now_time += dt;\r\n      // console.log(this.now_time )\r\n      \r\n      // var percent = this.now_time / this.action_time; //百分比\r\n      var percent = this.now_time / this.action_time\r\n\r\n      // console.log(this.action_times--);\r\n      if (percent <= 0) {\r\n        percent = 1;\r\n        this.now_time = this.action_time; //从新开始\r\n      }\r\n      this.LoadTime.fillRange = -percent;\r\n    }\r\n  }\r\n});\r\n","\n\nvar TouchDragger = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n        propagate: {\n            default: false,\n        },\n        // ...\n    },\n\n    // use this for initialization\n    onLoad: function () {\n        this.pointAnima1 = cc.director.getScene().getChildByName('point1').getComponent(cc.Animation)\n        this.pointAnima2 = cc.director.getScene().getChildByName('point2').getComponent(cc.Animation)\n        this.pointAnima3 = cc.director.getScene().getChildByName('point3').getComponent(cc.Animation)\n        this.pointAnima4 = cc.director.getScene().getChildByName('point4').getComponent(cc.Animation)\n        console.log('---没有加载吗--');\n        this.node.opacity = 160;\n        this.node.on(cc.Node.EventType.TOUCH_START, function () {\n            cc.log('Drag stated ...');\n            this.opacity = 255;\n        }, this.node);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, function (event) {\n            this.opacity = 255;\n            var delta = event.touch.getDelta();\n            // this.x += delta.x;\n            if (this.y > 240 && delta.y <1 || this.y < -240 && delta.y > -1) {\n                this.y += delta.y;\n            } else {\n                this.y -= delta.y;\n            }\n            if (this.getComponent(TouchDragger).propagate)\n                event.stopPropagation();\n        }, this.node);\n        this.node.on(cc.Node.EventType.TOUCH_END, function () {\n            this.opacity = 160;\n        }, this.node);\n    },\n    OverGame() {\n        var _data = {\n            Userid: Global.DataUsers.UserId,\n            Token: Global.DataUsers.Token,\n        }\n        Global.streamXHREventsToLabel(cc.loader.getXMLHttpRequest(), \"POST\", Global.serverUrl + \"/BallSprint/GameOver\", _data, e => {\n            let _Object = JSON.parse(e)\n            console.log(_Object.code);\n            console.log('游戏停止');\n            Global._bollGameOver = false\n            console.log(Global._bollGameOver);\n        })\n    },\n    onCollisionEnter(other, self) {\n        // console.log(self); //球\n        console.log(other.node.name); //障碍物\n        if (other.node.name == 'track_b1' || other.node.name == 'track_b2' || other.node.name == 'track_b3') {\n            //スビト　stop\n            console.log('stop');\n            Global._bollSpeeds = 0\n            Global._bollLoseBox.scale = 1\n            cc.find('background/sLabel', Global._bollLoseBox).getComponent(cc.Label).string = Global._bollPointString.string\n            this.OverGame()\n        }\n\n        if (other.node.name == 'track_s1') {\n            //加速\n            console.log('スビト');\n            Global._bollSpeeds = -2000\n            this.scheduleOnce(() => {\n                Global._bollSpeeds = -1000\n            }, 3);\n        }\n        if (other.node.name == 'track_c1') {\n            // 碰撞组件的 aabb 碰撞框 金币\n            var aabb = other.world.aabb.y;\n            if (aabb >= 408) {\n                this.pointAnima1.play()\n            }\n            if (aabb < 408 && aabb >= 272) {\n                this.pointAnima2.play()\n            }\n            if (aabb < 272 && aabb > 136) {\n                this.pointAnima3.play()\n            }\n            if (aabb <= 136) {\n                this.pointAnima4.play()\n            }\n            Global._bollPoint++\n            Global._bollPointString.string = Global._bollPoint * 10\n            other.node.removeFromParent()\n        }\n        // 装上后操作\n        console.log('on collision enter');\n        // this.node.color = cc.Color.RED;\n        // 碰撞系统会计算出碰撞组件在世界坐标系下的相关的值，并放到 world 这个属性里面\n        var world = self.world;\n        // console.log(world);\n\n        // 上一次计算的碰撞组件的 aabb 碰撞框\n        var preAabb = world.preAabb;\n\n        // 碰撞框的世界矩阵\n        var t = world.transform;\n\n        // 以下属性为圆形碰撞组件特有属性\n        var r = world.radius;\n        var p = world.position;\n\n        // 以下属性为 矩形 和 多边形 碰撞组件特有属性\n        var ps = world.points;\n    },\n});","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\nimport { GetUserDatas } from \"GetUserData\";\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n\r\n    start () {\r\n\r\n    },\r\n\r\n    // update (dt) {},\r\n});\r\n","// Learn cc.Class:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/class.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/class.html\r\n// Learn Attribute:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/reference/attributes.html\r\n// Learn life-cycle callbacks:\r\n//  - [Chinese] http://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\r\n//  - [English] http://www.cocos2d-x.org/docs/creator/en/scripting/life-cycle-callbacks.html\r\n\r\ncc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        // foo: {\r\n        //     // ATTRIBUTES:\r\n        //     default: null,        // The default value will be used only when the component attaching\r\n        //                           // to a node for the first time\r\n        //     type: cc.SpriteFrame, // optional, default is typeof default\r\n        //     serializable: true,   // optional, default is true\r\n        // },\r\n        // bar: {\r\n        //     get () {\r\n        //         return this._bar;\r\n        //     },\r\n        //     set (value) {\r\n        //         this._bar = value;\r\n        //     }\r\n        // },\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    // onLoad () {},\r\n    ClickTab() {\r\n        this.node.destroy();\r\n        this.loaderViewText()\r\n    },\r\n    start() {\r\n\r\n    },\r\n    loaderViewText() {\r\n        cc.loader.loadRes(\"/prefab/iView\", (err, iView) => {\r\n            if (err) {\r\n                console.log(err)\r\n                return;\r\n            }\r\n            var newNode = cc.instantiate(iView);\r\n            let _h = parseInt(cc.director.getScene().getChildByName('Canvas').height/2)\r\n            let _w = parseInt(cc.director.getScene().getChildByName('Canvas').width/2)\r\n            newNode.setPosition(_w,_h)\r\n            cc.director.getScene().addChild(newNode);\r\n\r\n        });\r\n    },\r\n    // update (dt) {},\r\n});\r\n","module.exports = {\r\n    /** 将text中的html字符转义， 仅转义  ', \", <, > 四个字符\r\n     * @param  { String } str 需要转义的字符串\r\n     * @returns { String }     转义后的字符串 \r\n     */\r\n    unhtml(str) {\r\n        return str ? str.replace(/[<\">']/g, (a) => {\r\n            return {\r\n                '<': '&lt;',\r\n                '\"': '&quot;',\r\n                '>': '&gt;',\r\n                \"'\": '&#39;'\r\n            }[a]\r\n        }) : '';\r\n    },\r\n    /**\r\n     * 匹配电话号码的正则\r\n     * @param {String} tel 传入的电话号码\r\n     * @param {String} reg 正则\r\n     * @returns {bool} true false\r\n     */\r\n   verificationPhone(tel, reg) {\r\n        return tel ? reg || /^0?1[3|4|5|7|8][0-9]\\d{8}$/.test(tel) : '';\r\n        // console.log(reg.test(tel))\r\n    },\r\n    /**\r\n     * 去除多余空格\r\n     * @param { String } str 需要去空格的字符串 \r\n     */\r\n    unBlank(str) {\r\n        return str ? str.replace(/\\s/ig, '') : '';\r\n    },\r\n    /**\r\n     * 检查输入字符\r\n     * @param char\r\n     * @param reg\r\n     */\r\n    character(char, reg) {\r\n        return char ? reg || /[\\{\\}\\[\\]|、\\\\:;：；‘’\\'\\\"“”\\<\\>?《》？，。、$*￥#~`!！@\\%\\^\\…\\&\\*\\(\\)\\_\\+\\-\\=【】]/g.test(char) : '';\r\n\r\n    },\r\n    /**\r\n     * 是否为表情包\r\n     * @param {*} substring \r\n     */\r\n    isEmoji(substring) {\r\n        for (var i = 0; i < substring.length; i++) {\r\n            var hs = substring.charCodeAt(i);\r\n            if (0xd800 <= hs && hs <= 0xdbff) {\r\n                if (substring.length > 1) {\r\n                    var ls = substring.charCodeAt(i + 1);\r\n                    var uc = ((hs - 0xd800) * 0x400) + (ls - 0xdc00) + 0x10000;\r\n                    if (0x1d000 <= uc && uc <= 0x1f77f) {\r\n                        return true;\r\n                    }\r\n                }\r\n            } else if (substring.length > 1) {\r\n                var ls = substring.charCodeAt(i + 1);\r\n                if (ls == 0x20e3) {\r\n                    return true;\r\n                }\r\n            } else {\r\n                if (0x2100 <= hs && hs <= 0x27ff) {\r\n                    return true;\r\n                } else if (0x2B05 <= hs && hs <= 0x2b07) {\r\n                    return true;\r\n                } else if (0x2934 <= hs && hs <= 0x2935) {\r\n                    return true;\r\n                } else if (0x3297 <= hs && hs <= 0x3299) {\r\n                    return true;\r\n                } else if (hs == 0xa9 || hs == 0xae || hs == 0x303d || hs == 0x3030 ||\r\n                    hs == 0x2b55 || hs == 0x2b1c || hs == 0x2b1b ||\r\n                    hs == 0x2b50) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    },\r\n    /**\r\n     * 倒计时\r\n     * @param {*} codebtn \r\n     */\r\n    countDown(codebtn) {\r\n        let a = 60;\r\n        timer = setInterval(function () {\r\n            if (a > 0) {\r\n                codebtn.attr(\"disabled\", true).val(\"(\" + a + \")倒计时\").css(\"background\", \"#ccc\");\r\n                a--;\r\n            } else {\r\n                clearInterval(timer);\r\n                codebtn.attr(\"disabled\", false).val(\"获取验证码\").css(\"background\", \"#eeeeee\");\r\n                a = 60;\r\n            }\r\n        }, 1000);\r\n\r\n    },\r\n    countdowns(btn) {\r\n        let times = 60;\r\n        timer = setInterval(() => {\r\n            if (times > 0) {\r\n                btn.setAttribute('style', 'pointer-events: none');\r\n                filter.inputs(btn,`${times}s`);\r\n                times--;\r\n            } else {\r\n                clearInterval(timer);\r\n                btn.removeAttribute('style');\r\n                filter.inputs(btn,'获取验证码');\r\n                times = 60;\r\n            }\r\n        }, 1000)\r\n    },\r\n    inputs(btn,v1){\r\n        if (btn.tagName == 'INPUT') {\r\n            btn.value = v1;\r\n        } else if (btn.tagName == 'BUTTON') {\r\n            btn.innerText = v1;\r\n        }\r\n    }\r\n}","const Polyglot = require('polyglot');\nlet lang = cc.sys.language;\nif (lang !== 'zh') {\n    lang = 'en';\n}\nlet data = require(lang); // update this to set your default displaying language in editor\n// let polyglot = null;\nlet polyglot = new Polyglot({phrases: data, allowMissing: true});\n\n\nmodule.exports = {\n    /**\n     * This method allow you to switch language during runtime, language argument should be the same as your data file name\n     * such as when language is 'zh', it will load your 'zh.js' data source.\n     * @method init\n     * @param language - the language specific data file name, such as 'zh' to load 'zh.js'\n     */\n    init (language) {\n        lang = language;\n        data = require(lang);\n        polyglot.replace(data);\n    },\n    /**\n     * this method takes a text key as input, and return the localized string\n     * Please read https://github.com/airbnb/polyglot.js for details\n     * @method t\n     * @return {String} localized string\n     * @example\n     *\n     * var myText = i18n.t('MY_TEXT_KEY');\n     *\n     * // if your data source is defined as\n     * // {\"hello_name\": \"Hello, %{name}\"}\n     * // you can use the following to interpolate the text\n     * var greetingText = i18n.t('hello_name', {name: 'nantas'}); // Hello, nantas\n     */\n    t (key, opt) {\n        return polyglot.t(key, opt);\n    }\n};","cc.Class({\r\n    extends: cc.Component,\r\n\r\n    properties: {\r\n        audioSource: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        },\r\n        clikcMis: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        },\r\n        clickGameMis: {\r\n            type: cc.AudioSource,\r\n            default: null\r\n        }\r\n    },\r\n\r\n    // LIFE-CYCLE CALLBACKS:\r\n\r\n    onLoad() {\r\n\r\n\r\n    },\r\n\r\n    start() {\r\n\r\n    },\r\n    play: function () {\r\n        this.audioSource.play();\r\n    },\r\n    pause: function () {\r\n        this.audioSource.pause();\r\n    },\r\n    // update (dt) {},\r\n   \r\n});","/**\r\n  Copyright (c) 2016 hustcc http://www.atool.org/\r\n  License: MIT \r\n  https://github.com/hustcc/onfire.js\r\n**/\r\n/* jshint expr: true */ \r\n!function (root, factory) {\r\n  if (typeof module === 'object' && module.exports)\r\n    module.exports = factory();\r\n  else\r\n    root.onfire = factory();\r\n}(typeof window !== 'undefined' ? window : this, function () {\r\n  var __onfireEvents = {},\r\n   __cnt = 0, // evnet counter\r\n   string_str = 'string',\r\n   function_str = 'function',\r\n   hasOwnKey = Function.call.bind(Object.hasOwnProperty),\r\n   slice = Function.call.bind(Array.prototype.slice);\r\n\r\n  function _bind(eventName, callback, is_one, context) {\r\n    if (typeof eventName !== string_str || typeof callback !== function_str) {\r\n      throw new Error('args: '+string_str+', '+function_str+'');\r\n    }\r\n    if (! hasOwnKey(__onfireEvents, eventName)) {\r\n      __onfireEvents[eventName] = {};\r\n    }\r\n    __onfireEvents[eventName][++__cnt] = [callback, is_one, context];\r\n\r\n    return [eventName, __cnt];\r\n  }\r\n  function _each(obj, callback) {\r\n    for (var key in obj) {\r\n      if (hasOwnKey(obj, key)) callback(key, obj[key]);\r\n    }\r\n  }\r\n  /**\r\n   *  onfire.on( event, func, context ) -> Object\r\n   *  - event (String): The event name to subscribe / bind to\r\n   *  - func (Function): The function to call when a new event is published / triggered\r\n   *  Bind / subscribe the event name, and the callback function when event is triggered, will return an event Object\r\n  **/\r\n  function on(eventName, callback, context) {\r\n    return _bind(eventName, callback, 0, context);\r\n  }\r\n  /**\r\n   *  onfire.one( event, func, context ) -> Object\r\n   *  - event (String): The event name to subscribe / bind to\r\n   *  - func (Function): The function to call when a new event is published / triggered\r\n   *  Bind / subscribe the event name, and the callback function when event is triggered only once(can be triggered for one time), will return an event Object\r\n  **/\r\n  function one(eventName, callback, context) {\r\n    return _bind(eventName, callback, 1, context);\r\n  }\r\n  function _fire_func(eventName, args) {\r\n    if (hasOwnKey(__onfireEvents, eventName)) {\r\n      _each(__onfireEvents[eventName], function(key, item) {\r\n        item[0].apply(item[2], args); // do the function\r\n        if (item[1]) delete __onfireEvents[eventName][key]; // when is one, delete it after triggle\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   *  onfire.fire( event[, data1 [,data2] ... ] )\r\n   *  - event (String): The event name to publish\r\n   *  - data...: The data to pass to subscribers / callbacks\r\n   *  Async Publishes / fires the the event, passing the data to it's subscribers / callbacks\r\n  **/\r\n  function fire(eventName) {\r\n    // fire events\r\n    var args = slice(arguments, 1);\r\n    setTimeout(function () {\r\n      _fire_func(eventName, args);\r\n    });\r\n  }\r\n  /**\r\n   *  onfire.fireSync( event[, data1 [,data2] ... ] )\r\n   *  - event (String): The event name to publish\r\n   *  - data...: The data to pass to subscribers / callbacks\r\n   *  Sync Publishes / fires the the event, passing the data to it's subscribers / callbacks\r\n  **/\r\n  function fireSync(eventName) {\r\n    _fire_func(eventName, slice(arguments, 1));\r\n  }\r\n  /**\r\n   * onfire.un( event ) -> Boolean\r\n   *  - event (String / Object): The message to publish\r\n   * When passed a event Object, removes a specific subscription.\r\n   * When passed event name String, removes all subscriptions for that event name(hierarchy)\r\n  *\r\n   * Unsubscribe / unbind an event or event object.\r\n   *\r\n   * Examples\r\n   *\r\n   *  // Example 1 - unsubscribing with a event object\r\n   *  var event_object = onfire.on('my_event', myFunc);\r\n   *  onfire.un(event_object);\r\n   *\r\n   *  // Example 2 - unsubscribing with a event name string\r\n   *  onfire.un('my_event');\r\n  **/\r\n  function un(event) {\r\n    var eventName, key, r = false, type = typeof event;\r\n    if (type === string_str) {\r\n      // cancel the event name if exist\r\n      if (hasOwnKey(__onfireEvents, event)) {\r\n        delete __onfireEvents[event];\r\n        return true;\r\n      }\r\n      return false;\r\n    }\r\n    else if (type === 'object') {\r\n      eventName = event[0];\r\n      key = event[1];\r\n      if (hasOwnKey(__onfireEvents, eventName) && hasOwnKey(__onfireEvents[eventName], key)) {\r\n        delete __onfireEvents[eventName][key];\r\n        return true;\r\n      }\r\n      // can not find this event, return false\r\n      return false;\r\n    }\r\n    else if (type === function_str) {\r\n      _each(__onfireEvents, function(key_1, item_1) {\r\n        _each(item_1, function(key_2, item_2) {\r\n          if (item_2[0] === event) {\r\n            delete __onfireEvents[key_1][key_2];\r\n            r = true;\r\n          }\r\n        });\r\n      });\r\n      return r;\r\n    }\r\n    return true;\r\n  }\r\n  /**\r\n   *  onfire.clear()\r\n   *  Clears all subscriptions\r\n  **/\r\n  function clear() {\r\n    __onfireEvents = {};\r\n  }\r\n  return {\r\n    on: on,\r\n    one: one,\r\n    un: un,\r\n    fire: fire,\r\n    fireSync: fireSync,\r\n    clear: clear\r\n  };\r\n});","//     (c) 2012-2016 Airbnb, Inc.\n//\n//     polyglot.js may be freely distributed under the terms of the BSD\n//     license. For all licensing information, details, and documention:\n//     http://airbnb.github.com/polyglot.js\n//\n//\n// Polyglot.js is an I18n helper library written in JavaScript, made to\n// work both in the browser and in Node. It provides a simple solution for\n// interpolation and pluralization, based off of Airbnb's\n// experience adding I18n functionality to its Backbone.js and Node apps.\n//\n// Polylglot is agnostic to your translation backend. It doesn't perform any\n// translation; it simply gives you a way to manage translated phrases from\n// your client- or server-side JavaScript application.\n//\n\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return factory(root);\n    });\n  } else if (typeof exports === 'object') {\n    module.exports = factory(root);\n  } else {\n    root.Polyglot = factory(root);\n  }\n}(typeof global !== 'undefined' ? global : this, function(root) {\n  'use strict';\n\n  var replace = String.prototype.replace;\n\n  // ### Polyglot class constructor\n  function Polyglot(options) {\n    options = options || {};\n    this.phrases = {};\n    this.extend(options.phrases || {});\n    this.currentLocale = options.locale || 'en';\n    this.allowMissing = !!options.allowMissing;\n    this.warn = options.warn || warn;\n  }\n\n  // ### Version\n  Polyglot.VERSION = '1.0.0';\n\n  // ### polyglot.locale([locale])\n  //\n  // Get or set locale. Internally, Polyglot only uses locale for pluralization.\n  Polyglot.prototype.locale = function(newLocale) {\n    if (newLocale) this.currentLocale = newLocale;\n    return this.currentLocale;\n  };\n\n  // ### polyglot.extend(phrases)\n  //\n  // Use `extend` to tell Polyglot how to translate a given key.\n  //\n  //     polyglot.extend({\n  //       \"hello\": \"Hello\",\n  //       \"hello_name\": \"Hello, %{name}\"\n  //     });\n  //\n  // The key can be any string.  Feel free to call `extend` multiple times;\n  // it will override any phrases with the same key, but leave existing phrases\n  // untouched.\n  //\n  // It is also possible to pass nested phrase objects, which get flattened\n  // into an object with the nested keys concatenated using dot notation.\n  //\n  //     polyglot.extend({\n  //       \"nav\": {\n  //         \"hello\": \"Hello\",\n  //         \"hello_name\": \"Hello, %{name}\",\n  //         \"sidebar\": {\n  //           \"welcome\": \"Welcome\"\n  //         }\n  //       }\n  //     });\n  //\n  //     console.log(polyglot.phrases);\n  //     // {\n  //     //   'nav.hello': 'Hello',\n  //     //   'nav.hello_name': 'Hello, %{name}',\n  //     //   'nav.sidebar.welcome': 'Welcome'\n  //     // }\n  //\n  // `extend` accepts an optional second argument, `prefix`, which can be used\n  // to prefix every key in the phrases object with some string, using dot\n  // notation.\n  //\n  //     polyglot.extend({\n  //       \"hello\": \"Hello\",\n  //       \"hello_name\": \"Hello, %{name}\"\n  //     }, \"nav\");\n  //\n  //     console.log(polyglot.phrases);\n  //     // {\n  //     //   'nav.hello': 'Hello',\n  //     //   'nav.hello_name': 'Hello, %{name}'\n  //     // }\n  //\n  // This feature is used internally to support nested phrase objects.\n  Polyglot.prototype.extend = function(morePhrases, prefix) {\n    var phrase;\n\n    for (var key in morePhrases) {\n      if (morePhrases.hasOwnProperty(key)) {\n        phrase = morePhrases[key];\n        if (prefix) key = prefix + '.' + key;\n        if (typeof phrase === 'object') {\n          this.extend(phrase, key);\n        } else {\n          this.phrases[key] = phrase;\n        }\n      }\n    }\n  };\n\n  // ### polyglot.unset(phrases)\n  // Use `unset` to selectively remove keys from a polyglot instance.\n  //\n  //     polyglot.unset(\"some_key\");\n  //     polyglot.unset({\n  //       \"hello\": \"Hello\",\n  //       \"hello_name\": \"Hello, %{name}\"\n  //     });\n  //\n  // The unset method can take either a string (for the key), or an object hash with\n  // the keys that you would like to unset.\n  Polyglot.prototype.unset = function(morePhrases, prefix) {\n    var phrase;\n\n    if (typeof morePhrases === 'string') {\n      delete this.phrases[morePhrases];\n    } else {\n      for (var key in morePhrases) {\n        if (morePhrases.hasOwnProperty(key)) {\n          phrase = morePhrases[key];\n          if (prefix) key = prefix + '.' + key;\n          if (typeof phrase === 'object') {\n            this.unset(phrase, key);\n          } else {\n            delete this.phrases[key];\n          }\n        }\n      }\n    }\n  };\n\n  // ### polyglot.clear()\n  //\n  // Clears all phrases. Useful for special cases, such as freeing\n  // up memory if you have lots of phrases but no longer need to\n  // perform any translation. Also used internally by `replace`.\n  Polyglot.prototype.clear = function() {\n    this.phrases = {};\n  };\n\n  // ### polyglot.replace(phrases)\n  //\n  // Completely replace the existing phrases with a new set of phrases.\n  // Normally, just use `extend` to add more phrases, but under certain\n  // circumstances, you may want to make sure no old phrases are lying around.\n  Polyglot.prototype.replace = function(newPhrases) {\n    this.clear();\n    this.extend(newPhrases);\n  };\n\n\n  // ### polyglot.t(key, options)\n  //\n  // The most-used method. Provide a key, and `t` will return the\n  // phrase.\n  //\n  //     polyglot.t(\"hello\");\n  //     => \"Hello\"\n  //\n  // The phrase value is provided first by a call to `polyglot.extend()` or\n  // `polyglot.replace()`.\n  //\n  // Pass in an object as the second argument to perform interpolation.\n  //\n  //     polyglot.t(\"hello_name\", {name: \"Spike\"});\n  //     => \"Hello, Spike\"\n  //\n  // If you like, you can provide a default value in case the phrase is missing.\n  // Use the special option key \"_\" to specify a default.\n  //\n  //     polyglot.t(\"i_like_to_write_in_language\", {\n  //       _: \"I like to write in %{language}.\",\n  //       language: \"JavaScript\"\n  //     });\n  //     => \"I like to write in JavaScript.\"\n  //\n  Polyglot.prototype.t = function(key, options) {\n    var phrase, result;\n    options = options == null ? {} : options;\n    // allow number as a pluralization shortcut\n    if (typeof options === 'number') {\n      options = {smart_count: options};\n    }\n    if (typeof this.phrases[key] === 'string') {\n      phrase = this.phrases[key];\n    } else if (typeof options._ === 'string') {\n      phrase = options._;\n    } else if (this.allowMissing) {\n      phrase = key;\n    } else {\n      this.warn('Missing translation for key: \"'+key+'\"');\n      result = key;\n    }\n    if (typeof phrase === 'string') {\n      options = clone(options);\n      result = choosePluralForm(phrase, this.currentLocale, options.smart_count);\n      result = interpolate(result, options);\n    }\n    return result;\n  };\n\n\n  // ### polyglot.has(key)\n  //\n  // Check if polyglot has a translation for given key\n  Polyglot.prototype.has = function(key) {\n    return key in this.phrases;\n  };\n\n\n  // #### Pluralization methods\n  // The string that separates the different phrase possibilities.\n  var delimeter = '||||';\n\n  // Mapping from pluralization group plural logic.\n  var pluralTypes = {\n    chinese:   function(n) { return 0; },\n    german:    function(n) { return n !== 1 ? 1 : 0; },\n    french:    function(n) { return n > 1 ? 1 : 0; },\n    russian:   function(n) { return n % 10 === 1 && n % 100 !== 11 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2; },\n    czech:     function(n) { return (n === 1) ? 0 : (n >= 2 && n <= 4) ? 1 : 2; },\n    polish:    function(n) { return (n === 1 ? 0 : n % 10 >= 2 && n % 10 <= 4 && (n % 100 < 10 || n % 100 >= 20) ? 1 : 2); },\n    icelandic: function(n) { return (n % 10 !== 1 || n % 100 === 11) ? 1 : 0; }\n  };\n\n  // Mapping from pluralization group to individual locales.\n  var pluralTypeToLanguages = {\n    chinese:   ['fa', 'id', 'ja', 'ko', 'lo', 'ms', 'th', 'tr', 'zh'],\n    german:    ['da', 'de', 'en', 'es', 'fi', 'el', 'he', 'hu', 'it', 'nl', 'no', 'pt', 'sv'],\n    french:    ['fr', 'tl', 'pt-br'],\n    russian:   ['hr', 'ru'],\n    czech:     ['cs', 'sk'],\n    polish:    ['pl'],\n    icelandic: ['is']\n  };\n\n  function langToTypeMap(mapping) {\n    var type, langs, l, ret = {};\n    for (type in mapping) {\n      if (mapping.hasOwnProperty(type)) {\n        langs = mapping[type];\n        for (l in langs) {\n          ret[langs[l]] = type;\n        }\n      }\n    }\n    return ret;\n  }\n\n  // Trim a string.\n  var trimRe = /^\\s+|\\s+$/g;\n  function trim(str){\n    return replace.call(str, trimRe, '');\n  }\n\n  // Based on a phrase text that contains `n` plural forms separated\n  // by `delimeter`, a `locale`, and a `count`, choose the correct\n  // plural form, or none if `count` is `null`.\n  function choosePluralForm(text, locale, count){\n    var ret, texts, chosenText;\n    if (count != null && text) {\n      texts = text.split(delimeter);\n      chosenText = texts[pluralTypeIndex(locale, count)] || texts[0];\n      ret = trim(chosenText);\n    } else {\n      ret = text;\n    }\n    return ret;\n  }\n\n  function pluralTypeName(locale) {\n    var langToPluralType = langToTypeMap(pluralTypeToLanguages);\n    return langToPluralType[locale] || langToPluralType.en;\n  }\n\n  function pluralTypeIndex(locale, count) {\n    return pluralTypes[pluralTypeName(locale)](count);\n  }\n\n  // ### interpolate\n  //\n  // Does the dirty work. Creates a `RegExp` object for each\n  // interpolation placeholder.\n  var dollarRegex = /\\$/g;\n  var dollarBillsYall = '$$$$';\n  function interpolate(phrase, options) {\n    for (var arg in options) {\n      if (arg !== '_' && options.hasOwnProperty(arg)) {\n        // Ensure replacement value is escaped to prevent special $-prefixed\n        // regex replace tokens. the \"$$$$\" is needed because each \"$\" needs to\n        // be escaped with \"$\" itself, and we need two in the resulting output.\n        var replacement = options[arg];\n        if (typeof replacement === 'string') {\n          replacement = replace.call(options[arg], dollarRegex, dollarBillsYall);\n        }\n        // We create a new `RegExp` each time instead of using a more-efficient\n        // string replace so that the same argument can be replaced multiple times\n        // in the same phrase.\n        phrase = replace.call(phrase, new RegExp('%\\\\{'+arg+'\\\\}', 'g'), replacement);\n      }\n    }\n    return phrase;\n  }\n\n  // ### warn\n  //\n  // Provides a warning in the console if a phrase key is missing.\n  function warn(message) {\n    root.console && root.console.warn && root.console.warn('WARNING: ' + message);\n  }\n\n  // ### clone\n  //\n  // Clone an object.\n  function clone(source) {\n    var ret = {};\n    for (var prop in source) {\n      ret[prop] = source[prop];\n    }\n    return ret;\n  }\n\n  return Polyglot;\n}));\n"],"sourceRoot":"/source/","file":"project.js"}